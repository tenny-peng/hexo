{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":0},{"_id":"source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1491360719823},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1491360719824},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1491360719824},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1491360719825},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1491360719825},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1491360719826},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1491360719826},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1491360719826},{"_id":"source/favicon.ico","hash":"774afcc71280f2021e7fb259a35d31a8359a5f6f","modified":1491384079601},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1491360719826},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1491360719827},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1491360719828},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1491360719828},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1491360719827},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1491360719827},{"_id":"themes/next/_config.yml","hash":"d8dc79794c5c057384c8b3651e6f498b47c43d1f","modified":1491383309724},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1491360719854},{"_id":"source/_posts/Java是什么.md","hash":"1c1a15c0284e6416cc3e5f9733ad1095d6f1d67f","modified":1492744550407},{"_id":"source/_posts/MarkDown字体颜色.md","hash":"2c2998aa3506e749537b98c9d0003ca1595c34bb","modified":1492755026204},{"_id":"source/_posts/Nginx加权轮询算法.md","hash":"80d9425053764e64d37f6b34ff54666865577afb","modified":1491470277460},{"_id":"source/_posts/Git简单教程.md","hash":"7a00064dd9eb67471600c61a6bcdba94a61ea9fa","modified":1492591531632},{"_id":"source/_posts/MarkDown基础语法.md","hash":"29cb2b5389db9ac45e6afd38412176d09cb7e03d","modified":1491465646811},{"_id":"source/_posts/hexo+github搭建博客.md","hash":"886a4fbe9de401fa57bfcb68fc7c13e67096dd3c","modified":1492767303311},{"_id":"source/_posts/HelloWorld.md","hash":"66d7123a923d87c614f412aadc362375711da8c8","modified":1492744547542},{"_id":"source/_posts/hexo-next主题添加打赏功能.md","hash":"1cf517a2650b8b32945451be54e7369fdeb02a2b","modified":1492755049012},{"_id":"source/_posts/spring加载多个xml遇到的问题.md","hash":"a11a8d5ba9273639afb58f416262d17ee497c134","modified":1493260420069},{"_id":"source/_posts/redis入门.md","hash":"572e458792c7c136e1c9b1d2bc54e6415e372a8d","modified":1492591630318},{"_id":"source/_posts/spring整合dubbo-zookeeper.md","hash":"6ddb27065357cd7ce4d2caa72c1fc4fd0040d7da","modified":1493878527017},{"_id":"source/_posts/redis设置密码.md","hash":"8d024839a20801e9fdbd3d184fef74c6fb45f4bb","modified":1492593956658},{"_id":"source/_posts/MarkDown引用本地图片.md","hash":"2add64dcf1a98225198993913d716d291846c8ad","modified":1491360719785},{"_id":"source/_posts/修复TortoiseGit图标不显示.md","hash":"16c26d0b7bd43a4d1a18130eb4234b3d69c0de2e","modified":1491360719788},{"_id":"source/_posts/spring整合redis.md","hash":"6777ec133fdf241733ce78bf75a7cedc2dc8d362","modified":1492744621966},{"_id":"source/about/index.md","hash":"3d51c209cbb2f14fc0d6774f0dd69cacf5fafde7","modified":1491360719792},{"_id":"source/categories/index.md","hash":"a0163fa75065f2b6f7fe536a6e81f824789b55b3","modified":1491360719792},{"_id":"source/_posts/spring的MessageSource.md","hash":"5912490d2c19676c2af2bf0e8bc55ddf9d572daf","modified":1493111650935},{"_id":"source/tags/index.md","hash":"b6fb4405d6a47c282b194c1c6f8510e696441a09","modified":1491360719793},{"_id":"source/_posts/spring整合activemq.md","hash":"eec324bb37d0994292458033addacf1ba1b042d0","modified":1493087239680},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1491360719829},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1491360719824},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1491360719829},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1491360719825},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1491360719829},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1491360719829},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1491360719831},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1491360719830},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1491360719831},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1491360719831},{"_id":"source/_posts/多台电脑hexo部署到github的坑.md","hash":"c9c90676563c3d371cd290e0d3b7a10e706eaca3","modified":1492755058850},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1491360719830},{"_id":"themes/next/languages/ru.yml","hash":"7e19ee6f8c764a68b0b25a139ca3dc17b68d382e","modified":1491360719831},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1491360719832},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1491360719832},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1491360719832},{"_id":"themes/next/layout/_layout.swig","hash":"1dc354c74b965827bca18971ce9d3d25a57de96f","modified":1491360719833},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1491360719853},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1491360719853},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1491360719852},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1491360719855},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1491360719854},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1491360719855},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1491360719853},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1491360719853},{"_id":"themes/next/layout/schedule.swig","hash":"459cd6d9887b7a2ebda9ba3a5585a718904adb02","modified":1491360719854},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1491360720875},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1491360720876},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1491360720876},{"_id":"source/images/wechatpay.png","hash":"0d97a480702817ea840eae9807f3bf5a8d239a14","modified":1492591531651},{"_id":"source/images/alipay.jpg","hash":"3699c2ba4329ac7d750bdce2ee78fdf3c8a5fc8d","modified":1492591531649},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720829},{"_id":"source/_posts/Git简单教程/20170403201939.png","hash":"068094f610cc12b4f8bbf412a06eeccff75e73ab","modified":1491360719772},{"_id":"source/_posts/Git简单教程/20170403210357.png","hash":"7d917e943054da8bcae16254f6c6b80f521a08ca","modified":1491360719778},{"_id":"source/_posts/Git简单教程/20170403212928.png","hash":"4aa0f5d37198023b2d9374c5d7282bb18bf729f6","modified":1491360719779},{"_id":"source/_posts/Git简单教程/20170403213613.png","hash":"60854a7053728f67bc570d8ca63b4924abe172c5","modified":1491360719780},{"_id":"source/_posts/Git简单教程/20170403213822.png","hash":"3a0e5ff5fa4d6055a40fe815b8681100ade2076a","modified":1491360719780},{"_id":"source/_posts/Git简单教程/20170403213141.png","hash":"e477f0cf947eb8984393be613aca92b15022b8e3","modified":1491360719779},{"_id":"source/_posts/MarkDown引用本地图片/20170404161617.png","hash":"2cbe19cb2ab88865a474bc0924cad416419d1283","modified":1491360719786},{"_id":"source/_posts/MarkDown引用本地图片/20170404164402.png","hash":"e121162200ace01505e0661829234fd47721f7c6","modified":1491360719787},{"_id":"source/_posts/MarkDown引用本地图片/20170404164607.png","hash":"d5bf188859270d18d8c4f11a3e888520bf3659bb","modified":1491360719787},{"_id":"source/_posts/MarkDown引用本地图片/20170404161920.png","hash":"acb71d2bfa49689ab2b5cc22ed076a89bfde9578","modified":1491360719786},{"_id":"source/_posts/redis入门/20170415094655.png","hash":"7201cc8093d088ccf7590d78fb381ee64cff73d6","modified":1492591531641},{"_id":"source/_posts/redis入门/20170415095002.png","hash":"f1329a064897dc3599a086e8aa9c18dd0f568c02","modified":1492591531642},{"_id":"source/_posts/redis入门/20170415095226.png","hash":"0c5bcd5d9309834f5dbfeb58756d10d6869db545","modified":1492591531643},{"_id":"source/_posts/redis入门/20170415095445.png","hash":"553d85be6bade1b35b34144aad99506cacb3156f","modified":1492591531643},{"_id":"source/_posts/spring整合activemq/20170424172009.png","hash":"51f1f134fa40278c8c13333c19518e909599fb17","modified":1493025606799},{"_id":"source/_posts/spring整合activemq/20170424175147.png","hash":"f245622b94a932aa29e341693883ae28126343e0","modified":1493027529238},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112120.png","hash":"8b90723b3ccfc14ce0e9a84b4766b2024170336c","modified":1493868077531},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112741.png","hash":"717491cc4c4d96897d728095e854f7f7b0411028","modified":1493868467430},{"_id":"source/_posts/spring整合dubbo-zookeeper/dubbo架构图.png","hash":"97f0c3e4606e88d2129680b457fee63f88bb6b46","modified":1493863615465},{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404114741.png","hash":"28a6d2ba43ed86eabfde8935a9f95217c67162ae","modified":1491360719790},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1491360719833},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1491360719833},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1491360719834},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1491360719834},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1491360719835},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1491360719836},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1491360719836},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1491360719836},{"_id":"themes/next/layout/_partials/head.swig","hash":"376adb0c482242ef8bcad31b93b99cc5c35e92fa","modified":1491360719837},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1491360719838},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1491360719838},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1491360719838},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1491360719838},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1491360719841},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1491360719841},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"bd174c8ad620da37616cad735503fc847240a3e7","modified":1491360719843},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1491360719849},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1491360719849},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1491360719849},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1491360719835},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1491360719856},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1491360719856},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1491360719857},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1491360719857},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1491360719856},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1491360719857},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1491360720829},{"_id":"themes/next/source/images/avatar.jpg","hash":"4f72abcb2526d98173805b91fc585c80b3aef945","modified":1491360720831},{"_id":"themes/next/layout/_macro/post.swig","hash":"79851872b6b4fbd24e4a5a946f263da85b0c265d","modified":1491360719835},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1491360720830},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1491360720830},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1491360720831},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1491360720832},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1491360720831},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1491360719850},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1491360720833},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1491360720834},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491360720834},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491360720833},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1491360720833},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1491360720831},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1491360720834},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1491360720835},{"_id":"source/_posts/Git简单教程/0170403204526.png","hash":"2202ad69514cb142410b27ae903ace027daa9e1a","modified":1491360719771},{"_id":"source/_posts/Git简单教程/20170403205231.png","hash":"3a1f73d62bd9882bc295a716c1da6458bdde316d","modified":1491360719778},{"_id":"source/_posts/Git简单教程/20170403214855.png","hash":"994014d0f74d20e1f7b6cfd3ef934c1f34aea238","modified":1491360719782},{"_id":"source/_posts/Git简单教程/20170403214113.png","hash":"a4b34b13ba5f92e7da99f852b38a3a3d3d569242","modified":1491360719781},{"_id":"source/_posts/Git简单教程/20170403215427.png","hash":"15be81a226682c7c79154839815c38757f96d25d","modified":1491360719784},{"_id":"source/_posts/Git简单教程/20170403203655.png","hash":"de751348bbfc0490e12096e34263058e5564fc52","modified":1491360719774},{"_id":"source/_posts/redis入门/20170415092253.png","hash":"d838c1f58a993a6a07e89d3cbae7f628be47f323","modified":1492591531640},{"_id":"source/_posts/spring整合activemq/20170424171757.png","hash":"7f7bce4c11c60738871f26d1b507ad4f5649dc1e","modified":1493025475055},{"_id":"source/_posts/spring整合activemq/20170424174645.png","hash":"566e056b142aa1bb3e6e69f006ba3d7a7aca2b90","modified":1493027202795},{"_id":"source/_posts/spring整合activemq/20170424175850.png","hash":"00c8eab8d8916955073ee12c67ce0d8301f40597","modified":1493027935000},{"_id":"source/_posts/spring整合activemq/20170425094743.png","hash":"a2dd8ab47475961c9852f792cf52e8239d138b13","modified":1493084868726},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504111203.png","hash":"cca9b0cd2fb487a39bd3bc7b6f1f82a8386fc99c","modified":1493867521433},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112507.png","hash":"d2c19b08c9b8c596c03793a267aeec222b5d7369","modified":1493868320062},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112642.png","hash":"77225f6ca7e24a575a6f1828e60871d918f3d68b","modified":1493868398255},{"_id":"source/_posts/Git简单教程/20170403215328.png","hash":"1eb82b1c7439139df27753623d026f91960944df","modified":1491360719783},{"_id":"source/_posts/hexo-next主题添加打赏功能/20170405151647.png","hash":"b8832d240b85f5ae69d8c8bed7420bda9d405ce5","modified":1492591531636},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360719842},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360719842},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720819},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720820},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720820},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720828},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491360720829},{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404115205.png","hash":"eed0d44f68a2ed5492423d3bb74a05bd4035fbca","modified":1491360719791},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1491360720833},{"_id":"source/_posts/Git简单教程/20170403203407.png","hash":"12f446698e3164d8000a172cf0090271e2874d4e","modified":1491360719773},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1491360719837},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1491360719837},{"_id":"source/_posts/Git简单教程/20170408134106.png","hash":"679acefeb650bbb6c70f38f875d4f289c2ae5790","modified":1492591531634},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1491360719839},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1491360719839},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1491360719839},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1491360719840},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1491360719840},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1491360719840},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1491360719843},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1491360719844},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1491360719844},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1491360719842},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1491360719844},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1491360719845},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1491360719844},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1491360719845},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1491360719845},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1491360719846},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1491360719846},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1491360719846},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1491360719846},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1491360719847},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1491360719847},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1491360719847},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1491360719847},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1491360719848},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1491360719848},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1491360719848},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1491360719849},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1491360719852},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"4a10634dba16ddf2a3cbd4908dfbc97e9aa45469","modified":1491360719851},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1491360719851},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1491360719852},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1491360720819},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1491360720820},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1491360720820},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1491360720828},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1491360720828},{"_id":"themes/next/source/css/_variables/base.styl","hash":"5b336489316d5efea069fe8bcea4479b53ec7545","modified":1491360720828},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1491360720835},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1491360720836},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1491360719841},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1491360720837},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1491360720836},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1491360720836},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1491360720836},{"_id":"themes/next/source/js/src/utils.js","hash":"988f29f78e68fa184c4412b722f5895fa78a4783","modified":1491360720838},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1491360720838},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1491360720842},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1491360720849},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1491360720837},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1491360720839},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1491360720850},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1491360720850},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1491360720851},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1491360720852},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1491360720852},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1491360720852},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1491360720862},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1491360720851},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1491360720849},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1491360720864},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1491360720864},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1491360720865},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1491360720865},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1491360720864},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1491360720866},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1491360720874},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1491360720875},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1491360720871},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1491360720874},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"b070490e0588c4625e84bcd4f847dc6275a97a81","modified":1491360720866},{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404114101.png","hash":"7bf3a6c22c73e0d74f9756c17b7c035c96992ebc","modified":1491360719790},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1491360720863},{"_id":"source/_posts/Git简单教程/20170403204148.png","hash":"48a3e98d0e004e69bbba5bebfab82af71dd18799","modified":1491360719776},{"_id":"source/_posts/hexo-next主题添加打赏功能/20170408140902.png","hash":"dc8f795fb2c425cfa4d568e392d823b85907cda1","modified":1492591531639},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1491360719850},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1491360719851},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1491360720783},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1491360720782},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1491360720783},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1491360720784},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1491360720784},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1491360720795},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1491360720810},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1491360720817},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1491360720818},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1491360720818},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1491360720818},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1491360720818},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1491360720819},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1491360720821},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1491360720821},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1491360720822},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1491360720872},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491360720822},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1491360720823},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1491360720822},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1491360720824},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1491360720824},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1491360720824},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491360720825},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1491360720825},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1491360720826},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1491360720826},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1491360720826},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1491360720827},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1491360720827},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1491360720827},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1491360720838},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1491360720851},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1491360720821},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1491360720854},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1491360720853},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1491360720853},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1491360720843},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1491360720844},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1491360720844},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1491360720848},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1491360720848},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1491360720844},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1491360720843},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1491360720870},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1491360720848},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1491360720871},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1491360720850},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1491360720845},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1491360720861},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1491360720860},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1491360720786},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1491360720787},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1491360720787},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1491360720788},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1491360720788},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1491360720789},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1491360720790},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1491360720790},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1491360720791},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1491360720792},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1491360720793},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1491360720792},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1491360720793},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1491360720794},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1491360720796},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1491360720796},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1491360720798},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"fcd89ba4f6f48269e5caa73307e8689f41019896","modified":1491360720798},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1491360720797},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1491360720799},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1491360720800},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1491360720801},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1491360720801},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1491360720802},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1491360720802},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1491360720803},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a497ea244df7dd97d1b961412b56f94cc4031e23","modified":1491360720803},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1491360720804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1491360720805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1491360720805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1491360720806},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1491360720806},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1491360720807},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1491360720808},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1491360720809},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1491360720811},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1491360720809},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1491360720812},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1491360720811},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1491360720812},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1491360720813},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1491360720813},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1491360720815},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1491360720815},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1491360720815},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1491360720816},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1491360720816},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"6516b70ee9e44f1cf9443412cc31bcccb6cdb684","modified":1491360720816},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1491360720817},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1491360720814},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1491360720823},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1491360720824},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1491360720825},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1491360720873},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1491360720855},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1491360720860},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1491360720845},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1491360720846},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1491360720846},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1491360720857},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1491360720847},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1491360720847},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1491360720846},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1491360720842},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1491360720858},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1491360720870},{"_id":"public/atom.xml","hash":"fa320e4a38e62949972fdf26f465fc2cecc38f47","modified":1493879962122},{"_id":"public/search.xml","hash":"3d0af51c3f1a7b691483c3f19be5b680a36b768b","modified":1493879962197},{"_id":"public/sitemap.xml","hash":"821ba67ee047eaf3e692eeca5295992f049e80cd","modified":1493879962198},{"_id":"public/about/index.html","hash":"33d5c7cd5cb9f45ac3c37b43487081fd355d3185","modified":1493879962212},{"_id":"public/categories/index.html","hash":"114e781c49cefb78b1bc842700e43e93e3ebf989","modified":1493879962212},{"_id":"public/tags/index.html","hash":"d96c2c28e50648d47d4dcb3089838d2df8e8a19b","modified":1493879962213},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/index.html","hash":"ee16bb5563fd11e646dab277882541cab04211a5","modified":1493879962213},{"_id":"public/2017/04/27/spring加载多个xml遇到的问题/index.html","hash":"fd39810c17fe795a9023e08b901ae3f792c1257f","modified":1493879962213},{"_id":"public/2017/04/25/spring的MessageSource/index.html","hash":"746b5e8791fc97c2d4d8ee2922e23b75fa97a4d2","modified":1493879962213},{"_id":"public/2017/04/24/spring整合activemq/index.html","hash":"8bcecc45b50ce66c43ef4bb39498d941a0497076","modified":1493879962213},{"_id":"public/2017/04/21/hexo+github搭建博客/index.html","hash":"60a557f8859331e677935b62a8c369a9865cd6aa","modified":1493879962213},{"_id":"public/2017/04/21/spring整合redis/index.html","hash":"09285db8e8f7a5d9a43af9a9c5fe003cb4c9fe8f","modified":1493879962214},{"_id":"public/2017/04/19/redis设置密码/index.html","hash":"d28c1fb4bfc2ba6c6286e7a44d91ebb710289d8f","modified":1493879962214},{"_id":"public/2017/04/15/redis入门/index.html","hash":"4d61cf32ae5babc38deb450fe1550ceaeada1094","modified":1493879962214},{"_id":"public/2017/04/08/HelloWorld/index.html","hash":"a186d7e51d055c8fe3f5b3b9d0c34f503f3bfb0f","modified":1493879962214},{"_id":"public/2017/04/06/Nginx加权轮询算法/index.html","hash":"27a54538c0c04fb6ef834a94a228d1ed4e00cb01","modified":1493879962214},{"_id":"public/2017/04/08/Java是什么/index.html","hash":"35f7093b004ee5fc6d2b3b94c527d758cce7c564","modified":1493879962214},{"_id":"public/2017/04/05/hexo-next主题添加打赏功能/index.html","hash":"43ea63a244b96e8ffa9af7493444b2668bfc71e8","modified":1493879962214},{"_id":"public/2017/04/05/多台电脑hexo部署到github的坑/index.html","hash":"af2ab66256ed11081dda10fd1539271cbbf21313","modified":1493879962214},{"_id":"public/2017/04/04/修复TortoiseGit图标不显示/index.html","hash":"63d53bf480d065c782b30a83b056a49385c40c86","modified":1493879962214},{"_id":"public/2017/04/03/MarkDown字体颜色/index.html","hash":"850404bb61d203d07b189e82e7074ca7f2d5aa30","modified":1493879962214},{"_id":"public/2017/04/03/MarkDown引用本地图片/index.html","hash":"f543eafab37097cb913037f14aa9e894b40eafd2","modified":1493879962214},{"_id":"public/2017/04/03/Git简单教程/index.html","hash":"76f0eb8f5e696c62bd33d7cfec3b06e51cea3da5","modified":1493879962214},{"_id":"public/2017/04/03/MarkDown基础语法/index.html","hash":"25010254f4048260c0ed22ca0493ec356fba75d8","modified":1493879962214},{"_id":"public/archives/index.html","hash":"8c17435ac7b5937ba4c8d6789d13c36383aefd5d","modified":1493879962214},{"_id":"public/archives/page/2/index.html","hash":"21eb31ba26e1286a11767023824b563a0317ba9b","modified":1493879962214},{"_id":"public/archives/2017/index.html","hash":"7a246bf80ac56f54194a3c45d8a169e2b33d5ff7","modified":1493879962214},{"_id":"public/archives/2017/page/2/index.html","hash":"1d88fc4e19f44dc0842ddfec342d318dc6299a51","modified":1493879962215},{"_id":"public/archives/2017/04/index.html","hash":"a9b88ed4ec7111e02ae105f626ee2ab4495e6a7f","modified":1493879962215},{"_id":"public/archives/2017/04/page/2/index.html","hash":"beaeb0b9611a42c4c0d2f2f2c5cf6b1032c72309","modified":1493879962215},{"_id":"public/archives/2017/05/index.html","hash":"55b3f0e128f9f39d580c12a980643e1afc473290","modified":1493879962215},{"_id":"public/categories/markdown/index.html","hash":"fb5dfdd7576523c15fd9c8c00e0c47fca13e4090","modified":1493879962215},{"_id":"public/categories/Java学习记录/index.html","hash":"cb82652f5e9fa2dbcdf1d937ba024f429731f33e","modified":1493879962215},{"_id":"public/categories/git/index.html","hash":"2002749bcc25090ba79e4e88a6125ab96c7caef1","modified":1493879962215},{"_id":"public/categories/Nginx/index.html","hash":"9c9755543e22d55a6a531f4dcc5bda21301b5de5","modified":1493879962215},{"_id":"public/categories/hexo-github博客/index.html","hash":"8e2544859b6b403d06bfd33396f1ead65e61a648","modified":1493879962215},{"_id":"public/categories/spring/index.html","hash":"35e034337eacb6226178a4a8d87bb94df503a0f7","modified":1493879962215},{"_id":"public/categories/redis/index.html","hash":"01926ddc2897d11bfde656111ff2872e7a4800c1","modified":1493879962215},{"_id":"public/categories/dubbo/index.html","hash":"a175faa8ea5f92bdb01f8405159a27f26a5153a5","modified":1493879962215},{"_id":"public/categories/TortoiseGit/index.html","hash":"d25270d395c7181c0ded8be41a422a305620edce","modified":1493879962215},{"_id":"public/categories/MessageSource/index.html","hash":"cc24b0a7cc3a5736ecb0cbb60c94389bfaea3dfd","modified":1493879962215},{"_id":"public/categories/activemq/index.html","hash":"bd96bc0658d8aa9dc55920b49c71371d79945183","modified":1493879962215},{"_id":"public/index.html","hash":"83cf8cc859211a1b02838320f2a60212d5530191","modified":1493879962215},{"_id":"public/page/2/index.html","hash":"e3675b78fa9e2d1aa15babae0613ee25c6300a95","modified":1493879962215},{"_id":"public/tags/markdown/index.html","hash":"3b6311716751fd348ffa56648b9e353ca0aa5ec7","modified":1493879962216},{"_id":"public/tags/java/index.html","hash":"49423ab79acddbf0f04c9e07a6c3e59be28e4765","modified":1493879962216},{"_id":"public/tags/git/index.html","hash":"920b563d7e8ee0f9889c089d6d2ad618304121ed","modified":1493879962216},{"_id":"public/tags/nginx/index.html","hash":"371bf0d95e0d64d81e8a6ee094e0cf70e40e9e7b","modified":1493879962216},{"_id":"public/tags/算法/index.html","hash":"4d38a4c8a24756d437eca2d56cbde521574229a2","modified":1493879962216},{"_id":"public/tags/语法/index.html","hash":"c53bf8641e25a53547fe52a8d22f40c183730ba2","modified":1493879962216},{"_id":"public/tags/hexo/index.html","hash":"5635be8b42ecad0093b33ac52ae18546bfbc4764","modified":1493879962216},{"_id":"public/tags/github/index.html","hash":"4b534537ed26e2883354c4b1ac63bc433346544c","modified":1493879962216},{"_id":"public/tags/spring/index.html","hash":"8801e216a09f1901627b55d03fd57611650a404a","modified":1493879962216},{"_id":"public/tags/next/index.html","hash":"7d5c58998c2a0fef4ce6c2b294b64bed4b4f4bd0","modified":1493879962216},{"_id":"public/tags/redis/index.html","hash":"8648bdd16a7f4d2ebaa22f90387ffbccc22b7074","modified":1493879962216},{"_id":"public/tags/dubbo/index.html","hash":"56a029fcf73ab0c7da608a8cfe4c122854b4d88c","modified":1493879962216},{"_id":"public/tags/TortoiseGit/index.html","hash":"f9257d2f1451f542e8b034965e4d574f9b1c1020","modified":1493879962216},{"_id":"public/tags/MessageSource/index.html","hash":"5a9c180758b65bf0916986e1845ddb0c4ccbc79a","modified":1493879962216},{"_id":"public/tags/activemq/index.html","hash":"c30dd67e93955e853d427b89b146b771f823ce99","modified":1493879962216},{"_id":"public/favicon.ico","hash":"774afcc71280f2021e7fb259a35d31a8359a5f6f","modified":1493879962334},{"_id":"public/images/avatar.jpg","hash":"4f72abcb2526d98173805b91fc585c80b3aef945","modified":1493879962334},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1493879962334},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1493879962335},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1493879962335},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1493879962335},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1493879962335},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1493879962335},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1493879962335},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493879962335},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493879962335},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1493879962335},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1493879962335},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1493879962335},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1493879962335},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1493879962335},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1493879962335},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1493879962335},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1493879962335},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1493879962336},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1493879962336},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1493879962336},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1493879962336},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1493879962336},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1493879962336},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1493879962336},{"_id":"public/2017/04/04/修复TortoiseGit图标不显示/20170404114741.png","hash":"28a6d2ba43ed86eabfde8935a9f95217c67162ae","modified":1493879962336},{"_id":"public/2017/04/03/MarkDown引用本地图片/20170404161617.png","hash":"2cbe19cb2ab88865a474bc0924cad416419d1283","modified":1493879962336},{"_id":"public/2017/04/03/MarkDown引用本地图片/20170404161920.png","hash":"acb71d2bfa49689ab2b5cc22ed076a89bfde9578","modified":1493879962336},{"_id":"public/2017/04/03/MarkDown引用本地图片/20170404164402.png","hash":"e121162200ace01505e0661829234fd47721f7c6","modified":1493879962336},{"_id":"public/2017/04/03/MarkDown引用本地图片/20170404164607.png","hash":"d5bf188859270d18d8c4f11a3e888520bf3659bb","modified":1493879962336},{"_id":"public/2017/04/15/redis入门/20170415094655.png","hash":"7201cc8093d088ccf7590d78fb381ee64cff73d6","modified":1493879962336},{"_id":"public/2017/04/15/redis入门/20170415095002.png","hash":"f1329a064897dc3599a086e8aa9c18dd0f568c02","modified":1493879962336},{"_id":"public/2017/04/15/redis入门/20170415095226.png","hash":"0c5bcd5d9309834f5dbfeb58756d10d6869db545","modified":1493879962336},{"_id":"public/2017/04/15/redis入门/20170415095445.png","hash":"553d85be6bade1b35b34144aad99506cacb3156f","modified":1493879962336},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/20170504112120.png","hash":"8b90723b3ccfc14ce0e9a84b4766b2024170336c","modified":1493879962336},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/20170504112741.png","hash":"717491cc4c4d96897d728095e854f7f7b0411028","modified":1493879962337},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/dubbo架构图.png","hash":"97f0c3e4606e88d2129680b457fee63f88bb6b46","modified":1493879962337},{"_id":"public/2017/04/24/spring整合activemq/20170424172009.png","hash":"51f1f134fa40278c8c13333c19518e909599fb17","modified":1493879962337},{"_id":"public/2017/04/24/spring整合activemq/20170424175147.png","hash":"f245622b94a932aa29e341693883ae28126343e0","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403201939.png","hash":"068094f610cc12b4f8bbf412a06eeccff75e73ab","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403210357.png","hash":"7d917e943054da8bcae16254f6c6b80f521a08ca","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403212928.png","hash":"4aa0f5d37198023b2d9374c5d7282bb18bf729f6","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403213141.png","hash":"e477f0cf947eb8984393be613aca92b15022b8e3","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403213613.png","hash":"60854a7053728f67bc570d8ca63b4924abe172c5","modified":1493879962337},{"_id":"public/2017/04/03/Git简单教程/20170403213822.png","hash":"3a0e5ff5fa4d6055a40fe815b8681100ade2076a","modified":1493879962337},{"_id":"public/images/wechatpay.png","hash":"0d97a480702817ea840eae9807f3bf5a8d239a14","modified":1493879963875},{"_id":"public/images/alipay.jpg","hash":"3699c2ba4329ac7d750bdce2ee78fdf3c8a5fc8d","modified":1493879963875},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493879963901},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493879963901},{"_id":"public/2017/04/05/hexo-next主题添加打赏功能/20170405151647.png","hash":"b8832d240b85f5ae69d8c8bed7420bda9d405ce5","modified":1493879963902},{"_id":"public/2017/04/04/修复TortoiseGit图标不显示/20170404115205.png","hash":"eed0d44f68a2ed5492423d3bb74a05bd4035fbca","modified":1493879963902},{"_id":"public/2017/04/15/redis入门/20170415092253.png","hash":"d838c1f58a993a6a07e89d3cbae7f628be47f323","modified":1493879963902},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/20170504111203.png","hash":"cca9b0cd2fb487a39bd3bc7b6f1f82a8386fc99c","modified":1493879963902},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/20170504112507.png","hash":"d2c19b08c9b8c596c03793a267aeec222b5d7369","modified":1493879963902},{"_id":"public/2017/05/04/spring整合dubbo-zookeeper/20170504112642.png","hash":"77225f6ca7e24a575a6f1828e60871d918f3d68b","modified":1493879963902},{"_id":"public/2017/04/24/spring整合activemq/20170424171757.png","hash":"7f7bce4c11c60738871f26d1b507ad4f5649dc1e","modified":1493879963902},{"_id":"public/2017/04/24/spring整合activemq/20170424174645.png","hash":"566e056b142aa1bb3e6e69f006ba3d7a7aca2b90","modified":1493879963902},{"_id":"public/2017/04/24/spring整合activemq/20170424175850.png","hash":"00c8eab8d8916955073ee12c67ce0d8301f40597","modified":1493879963902},{"_id":"public/2017/04/24/spring整合activemq/20170425094743.png","hash":"a2dd8ab47475961c9852f792cf52e8239d138b13","modified":1493879963902},{"_id":"public/2017/04/03/Git简单教程/0170403204526.png","hash":"2202ad69514cb142410b27ae903ace027daa9e1a","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403203655.png","hash":"de751348bbfc0490e12096e34263058e5564fc52","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403205231.png","hash":"3a1f73d62bd9882bc295a716c1da6458bdde316d","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403214113.png","hash":"a4b34b13ba5f92e7da99f852b38a3a3d3d569242","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403214855.png","hash":"994014d0f74d20e1f7b6cfd3ef934c1f34aea238","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403215328.png","hash":"1eb82b1c7439139df27753623d026f91960944df","modified":1493879963903},{"_id":"public/2017/04/03/Git简单教程/20170403215427.png","hash":"15be81a226682c7c79154839815c38757f96d25d","modified":1493879963903},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1493879963918},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1493879963918},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1493879963918},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1493879963918},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1493879963918},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1493879963918},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1493879963918},{"_id":"public/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1493879963920},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1493879963920},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1493879963920},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1493879963920},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1493879963920},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1493879963920},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1493879963920},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1493879963920},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1493879963920},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1493879963920},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1493879963920},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1493879963920},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1493879963920},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1493879963920},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1493879963920},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1493879963920},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1493879963920},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1493879963921},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1493879963921},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1493879963921},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1493879963921},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1493879963921},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1493879963921},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1493879963921},{"_id":"public/css/main.css","hash":"b66d4d3b4e78262a2d7b6df6f1c294426c54c7bc","modified":1493879963921},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1493879963921},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1493879963921},{"_id":"public/lib/three/three-waves.min.js","hash":"5b38ae00297ffc07f433c632c3dbf7bde4cdf39a","modified":1493879963921},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1493879963921},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1493879963921},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1493879963921},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1493879963921},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1493879963921},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1493879963921},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1493879963921},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1493879963921},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1493879963922},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493879963922},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493879963922},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493879963922},{"_id":"public/2017/04/03/Git简单教程/20170403203407.png","hash":"12f446698e3164d8000a172cf0090271e2874d4e","modified":1493879963922},{"_id":"public/2017/04/03/Git简单教程/20170408134106.png","hash":"679acefeb650bbb6c70f38f875d4f289c2ae5790","modified":1493879963922},{"_id":"public/2017/04/04/修复TortoiseGit图标不显示/20170404114101.png","hash":"7bf3a6c22c73e0d74f9756c17b7c035c96992ebc","modified":1493879963947},{"_id":"public/2017/04/03/Git简单教程/20170403204148.png","hash":"48a3e98d0e004e69bbba5bebfab82af71dd18799","modified":1493879963965},{"_id":"public/2017/04/05/hexo-next主题添加打赏功能/20170408140902.png","hash":"dc8f795fb2c425cfa4d568e392d823b85907cda1","modified":1493879963965},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1493879964086}],"Category":[{"name":"markdown","_id":"cj2a1k0d00004iko0hk958fw3"},{"name":"Java学习记录","_id":"cj2a1k0di000aiko0ydb4jp5x"},{"name":"git","_id":"cj2a1k0du000giko0349vf1ma"},{"name":"Nginx","_id":"cj2a1k0e5000oiko090yug3y0"},{"name":"hexo+github博客","_id":"cj2a1k0ee000viko02ujjz9n7"},{"name":"spring","_id":"cj2a1k0f20018iko0qdx5g74u"},{"name":"redis","_id":"cj2a1k0fe001giko0mgghfqvp"},{"name":"dubbo","_id":"cj2a1k0fj001liko0j14i5hsy"},{"name":"TortoiseGit","_id":"cj2a1k0fv001uiko0y6o7kwzt"},{"name":"MessageSource","_id":"cj2a1k0g10023iko0dtphfzze"},{"name":"activemq","_id":"cj2a1k0g50027iko09ngccp7s"}],"Data":[],"Page":[{"title":"about","date":"2017-04-03T05:45:13.000Z","_content":"## 关于我\n\n一只学习java的小菜鸟，欢迎分享知识。\n\nfrom tenny\n\nQQ: 546299968\nEmail: 546299958@qq.com\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-04-03 13:45:13\n---\n## 关于我\n\n一只学习java的小菜鸟，欢迎分享知识。\n\nfrom tenny\n\nQQ: 546299968\nEmail: 546299958@qq.com\n","updated":"2017-04-05T02:51:59.792Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj2a1k0co0001iko0uk7oqrlf","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一只学习java的小菜鸟，欢迎分享知识。</p>\n<p>from tenny</p>\n<p>QQ: 546299968<br>Email: 546299958@qq.com</p>\n","excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一只学习java的小菜鸟，欢迎分享知识。</p>\n<p>from tenny</p>\n<p>QQ: 546299968<br>Email: 546299958@qq.com</p>\n"},{"title":"categories","date":"2017-04-03T05:42:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-04-03 13:42:10\ntype: \"categories\"\n---\n","updated":"2017-04-05T02:51:59.792Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj2a1k0cu0003iko0a73r3i6y","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-04-03T05:36:45.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-04-03 13:36:45\ntype: \"tags\"\n---\n","updated":"2017-04-05T02:51:59.793Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj2a1k0d90007iko0mcpcvwku","content":"","excerpt":"","more":""}],"Post":[{"title":"MarkDown设置字体颜色","date":"2017-04-03T13:15:12.000Z","_content":"\n记录一下如何设置字体颜色和大小\n```\n<font color=red size=5>gray</font>\n<font color=\"#4590a3\" size=\"6px\">文字</font>\n```\n效果如下：\n\n<font color=red size=5>red</font>\n<font color=\"#4590a3\" size=\"6px\">文字</font>\n","source":"_posts/MarkDown字体颜色.md","raw":"---\ntitle: MarkDown设置字体颜色\ndate: 2017-04-03 21:15:12\ntags: [markdown]\ncategories: markdown\n---\n\n记录一下如何设置字体颜色和大小\n```\n<font color=red size=5>gray</font>\n<font color=\"#4590a3\" size=\"6px\">文字</font>\n```\n效果如下：\n\n<font color=red size=5>red</font>\n<font color=\"#4590a3\" size=\"6px\">文字</font>\n","slug":"MarkDown字体颜色","published":1,"updated":"2017-04-21T06:10:26.204Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0ch0000iko0alxhu0c2","content":"<p>记录一下如何设置字体颜色和大小<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;font color=red size=5&gt;gray&lt;/font&gt;</div><div class=\"line\">&lt;font color=&quot;#4590a3&quot; size=&quot;6px&quot;&gt;文字&lt;/font&gt;</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<font color=\"red\" size=\"5\">red</font><br><font color=\"#4590a3\" size=\"6px\">文字</font>\n","excerpt":"","more":"<p>记录一下如何设置字体颜色和大小<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;font color=red size=5&gt;gray&lt;/font&gt;</div><div class=\"line\">&lt;font color=&quot;#4590a3&quot; size=&quot;6px&quot;&gt;文字&lt;/font&gt;</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<font color=\"red\" size=\"5\">red</font><br><font color=\"#4590a3\" size=\"6px\">文字</font>\n"},{"title":"Java是什么","date":"2017-04-08T06:30:18.000Z","_content":"\n# Java 技术\nJava技术既是一门编程语言，也是一个平台。\n\n## Java编程语言\nJava作为一门高级编程语言，具有如下特性：\n\n* 简单\n* 跨平台\n* 面向对象\n* 便携性\n* 分布式\n* 高性能\n* 多线程\n* 健壮的\n* 动态的\n* 安全的\n\n在Java程序中，所有的源文件是以\".java\"结尾的普通文本文件，java编译器将源文件编译成\".class\"文件。\".class\"文件包含的并不是类似\"0101011\"的机器语言代码，而是称之为字节码(bytecodes)的东东，而这个字节码其实是java虚拟机的机器语言。通过java虚拟机，再将字节码转换为本地机器可识别的代码。\n\n编译图如下：\n\n![java编译图](http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-compiler.gif)\n\n因为java虚拟机可运行在不同的平台，所以我们的.class文件也可以运行在微软，Linux,苹果等不同平台。虚拟机的存在使得java实现了跨平台，也就是经常说的\"一次编译，到处运行\"。\n\n![java跨平台](http://docs.oracle.com/javase/tutorial/figures/getStarted/helloWorld.gif)\n\n## Java平台\n平台是供程序运行的硬件或软件环境。我们常说的微软操作系统，Linux系统，苹果操作系统这些都属于平台。大部分的平台是操作系统和基础硬件的合集。而Java平台与大多数平台不同，它是一个纯的软件平台，运行于其他的基于硬件的平台上(例如Windows)。\n\nJava平台包含两部分：\n* Java虚拟机\n* Java应用程序接口(API)\n\n上面已经提到过java虚拟机，它是java平台的基础，与不同的操作系统对接。\n\nAPI是内置的许多有用的方法的集合。它将相关的类(class)和接口(interface)组合成库，这个库我们通常称之为包(package)。\n\n![java平台](http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-jvm.gif)\n\n作为一个平台独立的环境，Java平台的速度比传统编译(c++直接编译成机器指令，java编译后是字节码文件，还需要虚拟机翻译成机器指令)慢，。但是随着硬件的发展，java编译器和虚拟机的性能已大幅提升，其速度和传统编译已相差无几。\n","source":"_posts/Java是什么.md","raw":"---\ntitle: Java是什么\ndate: 2017-04-08 14:30:18\ntags: [java]\ncategories: Java学习记录\n---\n\n# Java 技术\nJava技术既是一门编程语言，也是一个平台。\n\n## Java编程语言\nJava作为一门高级编程语言，具有如下特性：\n\n* 简单\n* 跨平台\n* 面向对象\n* 便携性\n* 分布式\n* 高性能\n* 多线程\n* 健壮的\n* 动态的\n* 安全的\n\n在Java程序中，所有的源文件是以\".java\"结尾的普通文本文件，java编译器将源文件编译成\".class\"文件。\".class\"文件包含的并不是类似\"0101011\"的机器语言代码，而是称之为字节码(bytecodes)的东东，而这个字节码其实是java虚拟机的机器语言。通过java虚拟机，再将字节码转换为本地机器可识别的代码。\n\n编译图如下：\n\n![java编译图](http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-compiler.gif)\n\n因为java虚拟机可运行在不同的平台，所以我们的.class文件也可以运行在微软，Linux,苹果等不同平台。虚拟机的存在使得java实现了跨平台，也就是经常说的\"一次编译，到处运行\"。\n\n![java跨平台](http://docs.oracle.com/javase/tutorial/figures/getStarted/helloWorld.gif)\n\n## Java平台\n平台是供程序运行的硬件或软件环境。我们常说的微软操作系统，Linux系统，苹果操作系统这些都属于平台。大部分的平台是操作系统和基础硬件的合集。而Java平台与大多数平台不同，它是一个纯的软件平台，运行于其他的基于硬件的平台上(例如Windows)。\n\nJava平台包含两部分：\n* Java虚拟机\n* Java应用程序接口(API)\n\n上面已经提到过java虚拟机，它是java平台的基础，与不同的操作系统对接。\n\nAPI是内置的许多有用的方法的集合。它将相关的类(class)和接口(interface)组合成库，这个库我们通常称之为包(package)。\n\n![java平台](http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-jvm.gif)\n\n作为一个平台独立的环境，Java平台的速度比传统编译(c++直接编译成机器指令，java编译后是字节码文件，还需要虚拟机翻译成机器指令)慢，。但是随着硬件的发展，java编译器和虚拟机的性能已大幅提升，其速度和传统编译已相差无几。\n","slug":"Java是什么","published":1,"updated":"2017-04-21T03:15:50.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0cr0002iko0apiybv6b","content":"<h1 id=\"Java-技术\"><a href=\"#Java-技术\" class=\"headerlink\" title=\"Java 技术\"></a>Java 技术</h1><p>Java技术既是一门编程语言，也是一个平台。</p>\n<h2 id=\"Java编程语言\"><a href=\"#Java编程语言\" class=\"headerlink\" title=\"Java编程语言\"></a>Java编程语言</h2><p>Java作为一门高级编程语言，具有如下特性：</p>\n<ul>\n<li>简单</li>\n<li>跨平台</li>\n<li>面向对象</li>\n<li>便携性</li>\n<li>分布式</li>\n<li>高性能</li>\n<li>多线程</li>\n<li>健壮的</li>\n<li>动态的</li>\n<li>安全的</li>\n</ul>\n<p>在Java程序中，所有的源文件是以”.java”结尾的普通文本文件，java编译器将源文件编译成”.class”文件。”.class”文件包含的并不是类似”0101011”的机器语言代码，而是称之为字节码(bytecodes)的东东，而这个字节码其实是java虚拟机的机器语言。通过java虚拟机，再将字节码转换为本地机器可识别的代码。</p>\n<p>编译图如下：</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-compiler.gif\" alt=\"java编译图\"></p>\n<p>因为java虚拟机可运行在不同的平台，所以我们的.class文件也可以运行在微软，Linux,苹果等不同平台。虚拟机的存在使得java实现了跨平台，也就是经常说的”一次编译，到处运行”。</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/helloWorld.gif\" alt=\"java跨平台\"></p>\n<h2 id=\"Java平台\"><a href=\"#Java平台\" class=\"headerlink\" title=\"Java平台\"></a>Java平台</h2><p>平台是供程序运行的硬件或软件环境。我们常说的微软操作系统，Linux系统，苹果操作系统这些都属于平台。大部分的平台是操作系统和基础硬件的合集。而Java平台与大多数平台不同，它是一个纯的软件平台，运行于其他的基于硬件的平台上(例如Windows)。</p>\n<p>Java平台包含两部分：</p>\n<ul>\n<li>Java虚拟机</li>\n<li>Java应用程序接口(API)</li>\n</ul>\n<p>上面已经提到过java虚拟机，它是java平台的基础，与不同的操作系统对接。</p>\n<p>API是内置的许多有用的方法的集合。它将相关的类(class)和接口(interface)组合成库，这个库我们通常称之为包(package)。</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-jvm.gif\" alt=\"java平台\"></p>\n<p>作为一个平台独立的环境，Java平台的速度比传统编译(c++直接编译成机器指令，java编译后是字节码文件，还需要虚拟机翻译成机器指令)慢，。但是随着硬件的发展，java编译器和虚拟机的性能已大幅提升，其速度和传统编译已相差无几。</p>\n","excerpt":"","more":"<h1 id=\"Java-技术\"><a href=\"#Java-技术\" class=\"headerlink\" title=\"Java 技术\"></a>Java 技术</h1><p>Java技术既是一门编程语言，也是一个平台。</p>\n<h2 id=\"Java编程语言\"><a href=\"#Java编程语言\" class=\"headerlink\" title=\"Java编程语言\"></a>Java编程语言</h2><p>Java作为一门高级编程语言，具有如下特性：</p>\n<ul>\n<li>简单</li>\n<li>跨平台</li>\n<li>面向对象</li>\n<li>便携性</li>\n<li>分布式</li>\n<li>高性能</li>\n<li>多线程</li>\n<li>健壮的</li>\n<li>动态的</li>\n<li>安全的</li>\n</ul>\n<p>在Java程序中，所有的源文件是以”.java”结尾的普通文本文件，java编译器将源文件编译成”.class”文件。”.class”文件包含的并不是类似”0101011”的机器语言代码，而是称之为字节码(bytecodes)的东东，而这个字节码其实是java虚拟机的机器语言。通过java虚拟机，再将字节码转换为本地机器可识别的代码。</p>\n<p>编译图如下：</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-compiler.gif\" alt=\"java编译图\"></p>\n<p>因为java虚拟机可运行在不同的平台，所以我们的.class文件也可以运行在微软，Linux,苹果等不同平台。虚拟机的存在使得java实现了跨平台，也就是经常说的”一次编译，到处运行”。</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/helloWorld.gif\" alt=\"java跨平台\"></p>\n<h2 id=\"Java平台\"><a href=\"#Java平台\" class=\"headerlink\" title=\"Java平台\"></a>Java平台</h2><p>平台是供程序运行的硬件或软件环境。我们常说的微软操作系统，Linux系统，苹果操作系统这些都属于平台。大部分的平台是操作系统和基础硬件的合集。而Java平台与大多数平台不同，它是一个纯的软件平台，运行于其他的基于硬件的平台上(例如Windows)。</p>\n<p>Java平台包含两部分：</p>\n<ul>\n<li>Java虚拟机</li>\n<li>Java应用程序接口(API)</li>\n</ul>\n<p>上面已经提到过java虚拟机，它是java平台的基础，与不同的操作系统对接。</p>\n<p>API是内置的许多有用的方法的集合。它将相关的类(class)和接口(interface)组合成库，这个库我们通常称之为包(package)。</p>\n<p><img src=\"http://docs.oracle.com/javase/tutorial/figures/getStarted/getStarted-jvm.gif\" alt=\"java平台\"></p>\n<p>作为一个平台独立的环境，Java平台的速度比传统编译(c++直接编译成机器指令，java编译后是字节码文件，还需要虚拟机翻译成机器指令)慢，。但是随着硬件的发展，java编译器和虚拟机的性能已大幅提升，其速度和传统编译已相差无几。</p>\n"},{"title":"Git简单教程","date":"2017-04-03T05:45:13.000Z","_content":"\n# 简介\nGit是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,\n\n可以有效、高速的处理从很小到非常大的项目版本管理。\n\n# 安装\n由于本人是Windows平台，所以这里安装的是Windows平台下的工具。\n\n点击[https://git-scm.com/download/win](https://git-scm.com/download/win)下载\n\n如果网速太慢可以百度搜索“git下载”。\n\n下载完成之后一路next就可以了，  \n\n安装完成后，开始菜单找到\"git\"->\"Git Bash\"，\n\n在命令行输入\n```\ngit --version\n```\n看到类似如下结果，说明我们安装成功了。\n\n![git_bash_img](Git简单教程/20170403201939.png)\n\n安装完成后，还需要一点设置，在打开的git bash命令行中输入\n```\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n**注意把上面改成自己的名字和邮箱地址**\n\ngit config命令的--global参数，表示你这台机器上所有的Git仓库都会使用这个配置，\n\n当然也可以对某个仓库指定不同的用户名和Email地址。\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。\n\n# 使用github\n我们希望项目不只是在本地，只有有网，哪里都可以获取自己的项目，\nGitHub 正是这样一个面向开源及私有软件项目的托管平台。\n我们可以把自己的项目放在这个平台上，可以和其他人维护项目。\n\n后面会讲git的基本操作，你也可以直接到后面查看。作为一般流程，这里让我们先注册一个github账号\n\n进入[github](https://github.com/)网站,点击sign up\n\n![注册github](Git简单教程/20170403203407.png)\n\n填写信息后点击\"create an account\" 按钮\n\n![注册github](Git简单教程/20170403203655.png)\n\n之后进入到我们的首页\n\n![github首页](Git简单教程/20170403204148.png)\n\n这样我们已经成功拥有了一个github账号，让我们正式开始吧~\n\n简单说下仓库的概念，仓库的英文名是repository，你可以简单理解成一个目录，\n这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，\n以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。\n\n点击上面的+号，新建一个仓库\n![github首页](Git简单教程/20170403204148.png)\n\n输入我们的仓库名称后，点击下面\"create repository\"按钮即可创建一个仓库\n![仓库信息](Git简单教程/0170403204526.png)\n\n我们可以看到这个仓库是空的，什么都没有。\n![空仓库](Git简单教程/20170403205231.png)\n\n接下来，我们回到本地git上。\n\n# 克隆仓库\n\n由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以还需要一点设置：\n\n回到git bash命令窗口，创建SSH  key:\n```\n$ ssh-keygen -t rsa -C \"youremail@example.com\"\n```\n你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n\n如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。\n\n登录你的github，进入setting，点击\"SSH and GPG keys\",点击右上角\"New SSH Key\",tite随便填，Key文本框里粘贴id_rsa.pub文件的内容，最后点击\"Add SSh Key\"即可。\n![填写公钥](Git简单教程/20170408134106.png)\n\n可以看到我这里已经有两个了，一个家里一个公司，这样就可以两边同步信息了。\n\n为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。\n\n接下来输入\n```\ncd e:\n```\n切换目录，执行\n```\ngit clone git@github.com:tenny-peng/test.git\n```\n稍等一会，就可将github上的项目克隆到本地\n\n![本地仓库](Git简单教程/20170403212928.png)\n\n这里我选的e盘根目录，你可以自己修改，**注意：选择的目录下不可以有仓库同名目录**\n如我的e盘下不能有test这个目录，不然在克隆时会报错。\n\n![克隆仓库](Git简单教程/20170403210357.png)\n这里有一个警告，说我们的仓库是空的，不用管它，我们马上会添加文件。\n\n# 添加文件\n\n<font color=red size=5>使用Windows的童鞋要特别注意：</font>\n\n千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了\n一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf\n（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，\n明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载\nNotepad++代替记事本，不但功能强大，而且免费！记得把notepad++的默认编码设置为UTF-8\nwithout BOM即可。\n\n在仓库test文件目录下，我们先编写一个readme.txt文件，内容如下：\n```\nGit is a version control system.\nGit is free software.\n```\n![新建文件](Git简单教程/20170403213141.png)\n\n这里我们可以看到test目录下有一个隐藏的.git目录(看不到可自行百度“windows查看隐藏文件方法”)，这个就说明此目录是由git管理的仓库了，如果删除了这个隐藏的目录，那个git也就不认识这个目录了，也不能对此目录下的文件进行管理了。\n\n回到命令行，输入\n```\ngit add readme.txt\n```\n![添加文件](Git简单教程/20170403213613.png)\n\n什么反馈信息也没有？那就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。\n\n使用\n```\ngit status\n```\n可查看当前仓库状态\n\n![添加状态](Git简单教程/20170403213822.png)\n\n我们发现提示有新文件，但是这样还不够。\n\n我们继续输入\n```\ngit commit -m \"add readme.txt\"\n```\n这样才把文件提交到仓库，再次输入\"git status\"查看状态\n\n![提交状态](Git简单教程/20170403214113.png)\n\n简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。\n\ngit commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。\n\n# 推送\n这里我就在仓库里新增了一个文件，当然还会有修改，删除操作。其实这样就可以管理自己的项目了。但是，我们似乎忘记了github。对，我们需要的是随时随处可获取，所以我们需要把本地仓库的内容同步到github这个托管平台。\n\n当你从远程仓库克隆时，实际上Git自动把本地的master分支(分支后面再讲，简单理解为仓库的多个版本，默认一个主分支)和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。\n\n要查看远程库的信息，输入\n```\ngit remote\n```\n或\n```\ngit remote -v\n```\n获取更详细信息\n\n![远程信息](Git简单教程/20170403214855.png)\n\n上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。\n\n接下来我们把本地改动(这里新增了一个文件，对于git，新增，修改，删除，都属于改动)推送到远程仓库。\n```\ngit push origin master\n```\n![推送分支](Git简单教程/20170403215328.png)\n\n刷新浏览器中我们的github主页，可以看到，readme.txt文件已经同步到远程仓库了。\n![查看远程分支](Git简单教程/20170403215427.png)\n\n<font size=\"5\">以上我们就使用git创建了自己的仓库，并将其同步到远程服务器上，以便我们在其它地方，或其他人获取。</font>\n\n<br />\n参考：\n\n[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n[git互动百科](http://www.baike.com/wiki/GIT)\n\n[github互动百科](http://www.baike.com/wiki/github)\n","source":"_posts/Git简单教程.md","raw":"---\ntitle: Git简单教程\ndate: 2017-04-03 13:45:13\ntags: [git]\ncategories: git\n---\n\n# 简介\nGit是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,\n\n可以有效、高速的处理从很小到非常大的项目版本管理。\n\n# 安装\n由于本人是Windows平台，所以这里安装的是Windows平台下的工具。\n\n点击[https://git-scm.com/download/win](https://git-scm.com/download/win)下载\n\n如果网速太慢可以百度搜索“git下载”。\n\n下载完成之后一路next就可以了，  \n\n安装完成后，开始菜单找到\"git\"->\"Git Bash\"，\n\n在命令行输入\n```\ngit --version\n```\n看到类似如下结果，说明我们安装成功了。\n\n![git_bash_img](Git简单教程/20170403201939.png)\n\n安装完成后，还需要一点设置，在打开的git bash命令行中输入\n```\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n**注意把上面改成自己的名字和邮箱地址**\n\ngit config命令的--global参数，表示你这台机器上所有的Git仓库都会使用这个配置，\n\n当然也可以对某个仓库指定不同的用户名和Email地址。\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。\n\n# 使用github\n我们希望项目不只是在本地，只有有网，哪里都可以获取自己的项目，\nGitHub 正是这样一个面向开源及私有软件项目的托管平台。\n我们可以把自己的项目放在这个平台上，可以和其他人维护项目。\n\n后面会讲git的基本操作，你也可以直接到后面查看。作为一般流程，这里让我们先注册一个github账号\n\n进入[github](https://github.com/)网站,点击sign up\n\n![注册github](Git简单教程/20170403203407.png)\n\n填写信息后点击\"create an account\" 按钮\n\n![注册github](Git简单教程/20170403203655.png)\n\n之后进入到我们的首页\n\n![github首页](Git简单教程/20170403204148.png)\n\n这样我们已经成功拥有了一个github账号，让我们正式开始吧~\n\n简单说下仓库的概念，仓库的英文名是repository，你可以简单理解成一个目录，\n这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，\n以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。\n\n点击上面的+号，新建一个仓库\n![github首页](Git简单教程/20170403204148.png)\n\n输入我们的仓库名称后，点击下面\"create repository\"按钮即可创建一个仓库\n![仓库信息](Git简单教程/0170403204526.png)\n\n我们可以看到这个仓库是空的，什么都没有。\n![空仓库](Git简单教程/20170403205231.png)\n\n接下来，我们回到本地git上。\n\n# 克隆仓库\n\n由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以还需要一点设置：\n\n回到git bash命令窗口，创建SSH  key:\n```\n$ ssh-keygen -t rsa -C \"youremail@example.com\"\n```\n你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。\n\n如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。\n\n登录你的github，进入setting，点击\"SSH and GPG keys\",点击右上角\"New SSH Key\",tite随便填，Key文本框里粘贴id_rsa.pub文件的内容，最后点击\"Add SSh Key\"即可。\n![填写公钥](Git简单教程/20170408134106.png)\n\n可以看到我这里已经有两个了，一个家里一个公司，这样就可以两边同步信息了。\n\n为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。\n\n接下来输入\n```\ncd e:\n```\n切换目录，执行\n```\ngit clone git@github.com:tenny-peng/test.git\n```\n稍等一会，就可将github上的项目克隆到本地\n\n![本地仓库](Git简单教程/20170403212928.png)\n\n这里我选的e盘根目录，你可以自己修改，**注意：选择的目录下不可以有仓库同名目录**\n如我的e盘下不能有test这个目录，不然在克隆时会报错。\n\n![克隆仓库](Git简单教程/20170403210357.png)\n这里有一个警告，说我们的仓库是空的，不用管它，我们马上会添加文件。\n\n# 添加文件\n\n<font color=red size=5>使用Windows的童鞋要特别注意：</font>\n\n千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了\n一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf\n（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，\n明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载\nNotepad++代替记事本，不但功能强大，而且免费！记得把notepad++的默认编码设置为UTF-8\nwithout BOM即可。\n\n在仓库test文件目录下，我们先编写一个readme.txt文件，内容如下：\n```\nGit is a version control system.\nGit is free software.\n```\n![新建文件](Git简单教程/20170403213141.png)\n\n这里我们可以看到test目录下有一个隐藏的.git目录(看不到可自行百度“windows查看隐藏文件方法”)，这个就说明此目录是由git管理的仓库了，如果删除了这个隐藏的目录，那个git也就不认识这个目录了，也不能对此目录下的文件进行管理了。\n\n回到命令行，输入\n```\ngit add readme.txt\n```\n![添加文件](Git简单教程/20170403213613.png)\n\n什么反馈信息也没有？那就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。\n\n使用\n```\ngit status\n```\n可查看当前仓库状态\n\n![添加状态](Git简单教程/20170403213822.png)\n\n我们发现提示有新文件，但是这样还不够。\n\n我们继续输入\n```\ngit commit -m \"add readme.txt\"\n```\n这样才把文件提交到仓库，再次输入\"git status\"查看状态\n\n![提交状态](Git简单教程/20170403214113.png)\n\n简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。\n\ngit commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。\n\n# 推送\n这里我就在仓库里新增了一个文件，当然还会有修改，删除操作。其实这样就可以管理自己的项目了。但是，我们似乎忘记了github。对，我们需要的是随时随处可获取，所以我们需要把本地仓库的内容同步到github这个托管平台。\n\n当你从远程仓库克隆时，实际上Git自动把本地的master分支(分支后面再讲，简单理解为仓库的多个版本，默认一个主分支)和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。\n\n要查看远程库的信息，输入\n```\ngit remote\n```\n或\n```\ngit remote -v\n```\n获取更详细信息\n\n![远程信息](Git简单教程/20170403214855.png)\n\n上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。\n\n接下来我们把本地改动(这里新增了一个文件，对于git，新增，修改，删除，都属于改动)推送到远程仓库。\n```\ngit push origin master\n```\n![推送分支](Git简单教程/20170403215328.png)\n\n刷新浏览器中我们的github主页，可以看到，readme.txt文件已经同步到远程仓库了。\n![查看远程分支](Git简单教程/20170403215427.png)\n\n<font size=\"5\">以上我们就使用git创建了自己的仓库，并将其同步到远程服务器上，以便我们在其它地方，或其他人获取。</font>\n\n<br />\n参考：\n\n[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n[git互动百科](http://www.baike.com/wiki/GIT)\n\n[github互动百科](http://www.baike.com/wiki/github)\n","slug":"Git简单教程","published":1,"updated":"2017-04-19T08:45:31.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0d70006iko00pgl0kmi","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,</p>\n<p>可以有效、高速的处理从很小到非常大的项目版本管理。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>由于本人是Windows平台，所以这里安装的是Windows平台下的工具。</p>\n<p>点击<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"external\">https://git-scm.com/download/win</a>下载</p>\n<p>如果网速太慢可以百度搜索“git下载”。</p>\n<p>下载完成之后一路next就可以了，  </p>\n<p>安装完成后，开始菜单找到”git”-&gt;”Git Bash”，</p>\n<p>在命令行输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git --version</div></pre></td></tr></table></figure></p>\n<p>看到类似如下结果，说明我们安装成功了。</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403201939.png\" alt=\"git_bash_img\"></p>\n<p>安装完成后，还需要一点设置，在打开的git bash命令行中输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global user.name &quot;Your Name&quot;</div><div class=\"line\">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure></p>\n<p><strong>注意把上面改成自己的名字和邮箱地址</strong></p>\n<p>git config命令的–global参数，表示你这台机器上所有的Git仓库都会使用这个配置，</p>\n<p>当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p>\n<h1 id=\"使用github\"><a href=\"#使用github\" class=\"headerlink\" title=\"使用github\"></a>使用github</h1><p>我们希望项目不只是在本地，只有有网，哪里都可以获取自己的项目，<br>GitHub 正是这样一个面向开源及私有软件项目的托管平台。<br>我们可以把自己的项目放在这个平台上，可以和其他人维护项目。</p>\n<p>后面会讲git的基本操作，你也可以直接到后面查看。作为一般流程，这里让我们先注册一个github账号</p>\n<p>进入<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github</a>网站,点击sign up</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403203407.png\" alt=\"注册github\"></p>\n<p>填写信息后点击”create an account” 按钮</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403203655.png\" alt=\"注册github\"></p>\n<p>之后进入到我们的首页</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403204148.png\" alt=\"github首页\"></p>\n<p>这样我们已经成功拥有了一个github账号，让我们正式开始吧~</p>\n<p>简单说下仓库的概念，仓库的英文名是repository，你可以简单理解成一个目录，<br>这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，<br>以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>\n<p>点击上面的+号，新建一个仓库<br><img src=\"/2017/04/03/Git简单教程/20170403204148.png\" alt=\"github首页\"></p>\n<p>输入我们的仓库名称后，点击下面”create repository”按钮即可创建一个仓库<br><img src=\"/2017/04/03/Git简单教程/0170403204526.png\" alt=\"仓库信息\"></p>\n<p>我们可以看到这个仓库是空的，什么都没有。<br><img src=\"/2017/04/03/Git简单教程/20170403205231.png\" alt=\"空仓库\"></p>\n<p>接下来，我们回到本地git上。</p>\n<h1 id=\"克隆仓库\"><a href=\"#克隆仓库\" class=\"headerlink\" title=\"克隆仓库\"></a>克隆仓库</h1><p>由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以还需要一点设置：</p>\n<p>回到git bash命令窗口，创建SSH  key:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure></p>\n<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。</p>\n<p>登录你的github，进入setting，点击”SSH and GPG keys”,点击右上角”New SSH Key”,tite随便填，Key文本框里粘贴id_rsa.pub文件的内容，最后点击”Add SSh Key”即可。<br><img src=\"/2017/04/03/Git简单教程/20170408134106.png\" alt=\"填写公钥\"></p>\n<p>可以看到我这里已经有两个了，一个家里一个公司，这样就可以两边同步信息了。</p>\n<p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。</p>\n<p>接下来输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd e:</div></pre></td></tr></table></figure></p>\n<p>切换目录，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git@github.com:tenny-peng/test.git</div></pre></td></tr></table></figure></p>\n<p>稍等一会，就可将github上的项目克隆到本地</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403212928.png\" alt=\"本地仓库\"></p>\n<p>这里我选的e盘根目录，你可以自己修改，<strong>注意：选择的目录下不可以有仓库同名目录</strong><br>如我的e盘下不能有test这个目录，不然在克隆时会报错。</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403210357.png\" alt=\"克隆仓库\"><br>这里有一个警告，说我们的仓库是空的，不用管它，我们马上会添加文件。</p>\n<h1 id=\"添加文件\"><a href=\"#添加文件\" class=\"headerlink\" title=\"添加文件\"></a>添加文件</h1><font color=\"red\" size=\"5\">使用Windows的童鞋要特别注意：</font>\n\n<p>千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了<br>一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf<br>（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，<br>明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载<br>Notepad++代替记事本，不但功能强大，而且免费！记得把notepad++的默认编码设置为UTF-8<br>without BOM即可。</p>\n<p>在仓库test文件目录下，我们先编写一个readme.txt文件，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Git is a version control system.</div><div class=\"line\">Git is free software.</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213141.png\" alt=\"新建文件\"></p>\n<p>这里我们可以看到test目录下有一个隐藏的.git目录(看不到可自行百度“windows查看隐藏文件方法”)，这个就说明此目录是由git管理的仓库了，如果删除了这个隐藏的目录，那个git也就不认识这个目录了，也不能对此目录下的文件进行管理了。</p>\n<p>回到命令行，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add readme.txt</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213613.png\" alt=\"添加文件\"></p>\n<p>什么反馈信息也没有？那就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。</p>\n<p>使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n<p>可查看当前仓库状态</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213822.png\" alt=\"添加状态\"></p>\n<p>我们发现提示有新文件，但是这样还不够。</p>\n<p>我们继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m &quot;add readme.txt&quot;</div></pre></td></tr></table></figure></p>\n<p>这样才把文件提交到仓库，再次输入”git status”查看状态</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403214113.png\" alt=\"提交状态\"></p>\n<p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p>\n<p>git commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。</p>\n<h1 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h1><p>这里我就在仓库里新增了一个文件，当然还会有修改，删除操作。其实这样就可以管理自己的项目了。但是，我们似乎忘记了github。对，我们需要的是随时随处可获取，所以我们需要把本地仓库的内容同步到github这个托管平台。</p>\n<p>当你从远程仓库克隆时，实际上Git自动把本地的master分支(分支后面再讲，简单理解为仓库的多个版本，默认一个主分支)和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。</p>\n<p>要查看远程库的信息，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<p>获取更详细信息</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403214855.png\" alt=\"远程信息\"></p>\n<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>\n<p>接下来我们把本地改动(这里新增了一个文件，对于git，新增，修改，删除，都属于改动)推送到远程仓库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403215328.png\" alt=\"推送分支\"></p>\n<p>刷新浏览器中我们的github主页，可以看到，readme.txt文件已经同步到远程仓库了。<br><img src=\"/2017/04/03/Git简单教程/20170403215427.png\" alt=\"查看远程分支\"></p>\n<font size=\"5\">以上我们就使用git创建了自己的仓库，并将其同步到远程服务器上，以便我们在其它地方，或其他人获取。</font>\n\n<p><br><br>参考：</p>\n<p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的git教程</a></p>\n<p><a href=\"http://www.baike.com/wiki/GIT\" target=\"_blank\" rel=\"external\">git互动百科</a></p>\n<p><a href=\"http://www.baike.com/wiki/github\" target=\"_blank\" rel=\"external\">github互动百科</a></p>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,</p>\n<p>可以有效、高速的处理从很小到非常大的项目版本管理。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>由于本人是Windows平台，所以这里安装的是Windows平台下的工具。</p>\n<p>点击<a href=\"https://git-scm.com/download/win\">https://git-scm.com/download/win</a>下载</p>\n<p>如果网速太慢可以百度搜索“git下载”。</p>\n<p>下载完成之后一路next就可以了，  </p>\n<p>安装完成后，开始菜单找到”git”-&gt;”Git Bash”，</p>\n<p>在命令行输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git --version</div></pre></td></tr></table></figure></p>\n<p>看到类似如下结果，说明我们安装成功了。</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403201939.png\" alt=\"git_bash_img\"></p>\n<p>安装完成后，还需要一点设置，在打开的git bash命令行中输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global user.name &quot;Your Name&quot;</div><div class=\"line\">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure></p>\n<p><strong>注意把上面改成自己的名字和邮箱地址</strong></p>\n<p>git config命令的–global参数，表示你这台机器上所有的Git仓库都会使用这个配置，</p>\n<p>当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p>\n<h1 id=\"使用github\"><a href=\"#使用github\" class=\"headerlink\" title=\"使用github\"></a>使用github</h1><p>我们希望项目不只是在本地，只有有网，哪里都可以获取自己的项目，<br>GitHub 正是这样一个面向开源及私有软件项目的托管平台。<br>我们可以把自己的项目放在这个平台上，可以和其他人维护项目。</p>\n<p>后面会讲git的基本操作，你也可以直接到后面查看。作为一般流程，这里让我们先注册一个github账号</p>\n<p>进入<a href=\"https://github.com/\">github</a>网站,点击sign up</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403203407.png\" alt=\"注册github\"></p>\n<p>填写信息后点击”create an account” 按钮</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403203655.png\" alt=\"注册github\"></p>\n<p>之后进入到我们的首页</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403204148.png\" alt=\"github首页\"></p>\n<p>这样我们已经成功拥有了一个github账号，让我们正式开始吧~</p>\n<p>简单说下仓库的概念，仓库的英文名是repository，你可以简单理解成一个目录，<br>这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，<br>以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>\n<p>点击上面的+号，新建一个仓库<br><img src=\"/2017/04/03/Git简单教程/20170403204148.png\" alt=\"github首页\"></p>\n<p>输入我们的仓库名称后，点击下面”create repository”按钮即可创建一个仓库<br><img src=\"/2017/04/03/Git简单教程/0170403204526.png\" alt=\"仓库信息\"></p>\n<p>我们可以看到这个仓库是空的，什么都没有。<br><img src=\"/2017/04/03/Git简单教程/20170403205231.png\" alt=\"空仓库\"></p>\n<p>接下来，我们回到本地git上。</p>\n<h1 id=\"克隆仓库\"><a href=\"#克隆仓库\" class=\"headerlink\" title=\"克隆仓库\"></a>克隆仓库</h1><p>由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以还需要一点设置：</p>\n<p>回到git bash命令窗口，创建SSH  key:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure></p>\n<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。</p>\n<p>登录你的github，进入setting，点击”SSH and GPG keys”,点击右上角”New SSH Key”,tite随便填，Key文本框里粘贴id_rsa.pub文件的内容，最后点击”Add SSh Key”即可。<br><img src=\"/2017/04/03/Git简单教程/20170408134106.png\" alt=\"填写公钥\"></p>\n<p>可以看到我这里已经有两个了，一个家里一个公司，这样就可以两边同步信息了。</p>\n<p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。</p>\n<p>接下来输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd e:</div></pre></td></tr></table></figure></p>\n<p>切换目录，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git@github.com:tenny-peng/test.git</div></pre></td></tr></table></figure></p>\n<p>稍等一会，就可将github上的项目克隆到本地</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403212928.png\" alt=\"本地仓库\"></p>\n<p>这里我选的e盘根目录，你可以自己修改，<strong>注意：选择的目录下不可以有仓库同名目录</strong><br>如我的e盘下不能有test这个目录，不然在克隆时会报错。</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403210357.png\" alt=\"克隆仓库\"><br>这里有一个警告，说我们的仓库是空的，不用管它，我们马上会添加文件。</p>\n<h1 id=\"添加文件\"><a href=\"#添加文件\" class=\"headerlink\" title=\"添加文件\"></a>添加文件</h1><font color=\"red\" size=\"5\">使用Windows的童鞋要特别注意：</font>\n\n<p>千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了<br>一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf<br>（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，<br>明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载<br>Notepad++代替记事本，不但功能强大，而且免费！记得把notepad++的默认编码设置为UTF-8<br>without BOM即可。</p>\n<p>在仓库test文件目录下，我们先编写一个readme.txt文件，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Git is a version control system.</div><div class=\"line\">Git is free software.</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213141.png\" alt=\"新建文件\"></p>\n<p>这里我们可以看到test目录下有一个隐藏的.git目录(看不到可自行百度“windows查看隐藏文件方法”)，这个就说明此目录是由git管理的仓库了，如果删除了这个隐藏的目录，那个git也就不认识这个目录了，也不能对此目录下的文件进行管理了。</p>\n<p>回到命令行，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add readme.txt</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213613.png\" alt=\"添加文件\"></p>\n<p>什么反馈信息也没有？那就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。</p>\n<p>使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n<p>可查看当前仓库状态</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403213822.png\" alt=\"添加状态\"></p>\n<p>我们发现提示有新文件，但是这样还不够。</p>\n<p>我们继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m &quot;add readme.txt&quot;</div></pre></td></tr></table></figure></p>\n<p>这样才把文件提交到仓库，再次输入”git status”查看状态</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403214113.png\" alt=\"提交状态\"></p>\n<p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p>\n<p>git commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。</p>\n<h1 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h1><p>这里我就在仓库里新增了一个文件，当然还会有修改，删除操作。其实这样就可以管理自己的项目了。但是，我们似乎忘记了github。对，我们需要的是随时随处可获取，所以我们需要把本地仓库的内容同步到github这个托管平台。</p>\n<p>当你从远程仓库克隆时，实际上Git自动把本地的master分支(分支后面再讲，简单理解为仓库的多个版本，默认一个主分支)和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。</p>\n<p>要查看远程库的信息，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<p>获取更详细信息</p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403214855.png\" alt=\"远程信息\"></p>\n<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>\n<p>接下来我们把本地改动(这里新增了一个文件，对于git，新增，修改，删除，都属于改动)推送到远程仓库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/04/03/Git简单教程/20170403215328.png\" alt=\"推送分支\"></p>\n<p>刷新浏览器中我们的github主页，可以看到，readme.txt文件已经同步到远程仓库了。<br><img src=\"/2017/04/03/Git简单教程/20170403215427.png\" alt=\"查看远程分支\"></p>\n<font size=\"5\">以上我们就使用git创建了自己的仓库，并将其同步到远程服务器上，以便我们在其它地方，或其他人获取。</font>\n\n<p><br><br>参考：</p>\n<p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的git教程</a></p>\n<p><a href=\"http://www.baike.com/wiki/GIT\">git互动百科</a></p>\n<p><a href=\"http://www.baike.com/wiki/github\">github互动百科</a></p>\n"},{"title":"Nginx加权轮询算法","date":"2017-04-06T03:33:21.000Z","_content":"\n记录一下nginx加权分配算法。\n\nnginx可以指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。\n例如：\n```\nupstream backend {\n  server a weight=6;\n  server b weight=3;\n  server c weight=1;\n}\n```\n按照配置，每有10次请求，其中6个会转发到a服务器，3个转发到b服务器，1个转发到c服务器。\n\n每个服务器都有三个权重变量，先解释下它们的含义。\n\n(1) weight\n\n配置文件中指定的该服务器的权重，这个值是固定不变的。\n\n(2) effective_weight\n\n服务器的有效权重，初始值为weight。\n\n在释放服务器时，如果发现和某服务器的通信过程中发生了错误，就减小它的effective_weight。  \n此后有新的请求过来时，在选取该服务器的过程中，再逐步增加effective_weight，最终又恢复到weight。  \n之所以增加这个字段，是为了当服务器发生错误时，降低其权重。\n\n(3) current_weight  \n\n服务器目前的权重，初始为0，之后会动态调整。\n\n那么如何动态调整呢？  \n\nnginx每次选取服务器时：\n1. 先遍历集群中所有服务器，将每个服务器的current_weight增加它的effective_weight，\n2. 再累加所有服务器的effective_weight，保存为total。\n3. 判断当前服务器的current_weight是否最大，是则选中该服务器，然后把它的current_weight减去total。\n不是则不会被选中，current_weight也就不用减了。\n\n弄清了三个weight字段的含义后，加权轮询算法可描述为：\n1. 对于每个请求，遍历集群中的所有可用服务器，对于每个服务器执行：\n    current_weight += effecitve_weight。\n2. 累加所有effective_weight，保存为total。\n3. 选出current_weight最大的服务器，作为本次选定的服务器。\n4. 对于本次选定的服务器，执行：current_weight -= total。\n\n下面以表格形式记录其过程：\n\n| 请求次数 | 开始current_weight | 增加effective_weight | 累加total | 选中服务器 | 选中后current_weight  |\n|:-------:|:------------------:|:-------------------:|:---------:|:----------:|:--------------------:|\n| 1 | [0, 0, 0] | [6, 3, 1] | 10 | a | [-4, 3, 1] |\n| 2 | [-4, 3, 1] | [2, 6, 2] | 10 | b | [2, -4, 2] |\n| 3 | [2, -4, 2] | [8, -1, 3] | 10 | a | [-2, -1, 3] |\n| 4 | [-2, -1, 3] | [4, 2, 4] | 10 | a | [-6, 2, 4] |\n| 5 | [-6, 2, 4] | [0, 5, 5] | 10 | b | [0, -5, 5] |\n| 6 | [0, -5, 5] | [6, -2, 6] | 10 | a | [-4, -2, 6] |\n| 7 | [-4, -2, 6] | [2, 1, 7] | 10 | c | [2, 1, -3] |\n| 8 | [2, 1, -3] | [8, 4, -2] | 10 | a | [-2, 4, -2] |\n| 9 | [-2, 4, -2] | [4, 7, -1] | 10 | b | [4, -3, -1] |\n| 10 | [4, -3, -1] | [10, 0, 0] | 10 | a | [0, 0, 0] |\n\n\n可以看到，选中服务器依次为[a, b, a, a, b, a, c, a, b, a]。\n\na,b,c分别被选中了6,3,1次，正好是符合其权重值的；  \n服务器a虽然权重大，但没有被连续选取，不会对a服务器连续请求；  \n经过10次请求后，a,b,c的当前权重current_weight又全部归0，如此便可循环往复。\n\nps: 这里我们发现total永远都是10，因为这里假定服务器都没有发生故障或返回错误，其effective_weight不变。实际中如果服务器发生了错误，nginx当然也会进行降权处理，total也会变啦。这里我们学习一下正常算法，出错的情况就先不展开了。\n","source":"_posts/Nginx加权轮询算法.md","raw":"---\ntitle: Nginx加权轮询算法\ndate: 2017-04-06 11:33:21\ntags: [nginx, 算法]\ncategories: Nginx\n---\n\n记录一下nginx加权分配算法。\n\nnginx可以指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。\n例如：\n```\nupstream backend {\n  server a weight=6;\n  server b weight=3;\n  server c weight=1;\n}\n```\n按照配置，每有10次请求，其中6个会转发到a服务器，3个转发到b服务器，1个转发到c服务器。\n\n每个服务器都有三个权重变量，先解释下它们的含义。\n\n(1) weight\n\n配置文件中指定的该服务器的权重，这个值是固定不变的。\n\n(2) effective_weight\n\n服务器的有效权重，初始值为weight。\n\n在释放服务器时，如果发现和某服务器的通信过程中发生了错误，就减小它的effective_weight。  \n此后有新的请求过来时，在选取该服务器的过程中，再逐步增加effective_weight，最终又恢复到weight。  \n之所以增加这个字段，是为了当服务器发生错误时，降低其权重。\n\n(3) current_weight  \n\n服务器目前的权重，初始为0，之后会动态调整。\n\n那么如何动态调整呢？  \n\nnginx每次选取服务器时：\n1. 先遍历集群中所有服务器，将每个服务器的current_weight增加它的effective_weight，\n2. 再累加所有服务器的effective_weight，保存为total。\n3. 判断当前服务器的current_weight是否最大，是则选中该服务器，然后把它的current_weight减去total。\n不是则不会被选中，current_weight也就不用减了。\n\n弄清了三个weight字段的含义后，加权轮询算法可描述为：\n1. 对于每个请求，遍历集群中的所有可用服务器，对于每个服务器执行：\n    current_weight += effecitve_weight。\n2. 累加所有effective_weight，保存为total。\n3. 选出current_weight最大的服务器，作为本次选定的服务器。\n4. 对于本次选定的服务器，执行：current_weight -= total。\n\n下面以表格形式记录其过程：\n\n| 请求次数 | 开始current_weight | 增加effective_weight | 累加total | 选中服务器 | 选中后current_weight  |\n|:-------:|:------------------:|:-------------------:|:---------:|:----------:|:--------------------:|\n| 1 | [0, 0, 0] | [6, 3, 1] | 10 | a | [-4, 3, 1] |\n| 2 | [-4, 3, 1] | [2, 6, 2] | 10 | b | [2, -4, 2] |\n| 3 | [2, -4, 2] | [8, -1, 3] | 10 | a | [-2, -1, 3] |\n| 4 | [-2, -1, 3] | [4, 2, 4] | 10 | a | [-6, 2, 4] |\n| 5 | [-6, 2, 4] | [0, 5, 5] | 10 | b | [0, -5, 5] |\n| 6 | [0, -5, 5] | [6, -2, 6] | 10 | a | [-4, -2, 6] |\n| 7 | [-4, -2, 6] | [2, 1, 7] | 10 | c | [2, 1, -3] |\n| 8 | [2, 1, -3] | [8, 4, -2] | 10 | a | [-2, 4, -2] |\n| 9 | [-2, 4, -2] | [4, 7, -1] | 10 | b | [4, -3, -1] |\n| 10 | [4, -3, -1] | [10, 0, 0] | 10 | a | [0, 0, 0] |\n\n\n可以看到，选中服务器依次为[a, b, a, a, b, a, c, a, b, a]。\n\na,b,c分别被选中了6,3,1次，正好是符合其权重值的；  \n服务器a虽然权重大，但没有被连续选取，不会对a服务器连续请求；  \n经过10次请求后，a,b,c的当前权重current_weight又全部归0，如此便可循环往复。\n\nps: 这里我们发现total永远都是10，因为这里假定服务器都没有发生故障或返回错误，其effective_weight不变。实际中如果服务器发生了错误，nginx当然也会进行降权处理，total也会变啦。这里我们学习一下正常算法，出错的情况就先不展开了。\n","slug":"Nginx加权轮询算法","published":1,"updated":"2017-04-06T09:17:57.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0db0008iko0eerk15qd","content":"<p>记录一下nginx加权分配算法。</p>\n<p>nginx可以指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。<br>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">upstream backend &#123;</div><div class=\"line\">  server a weight=6;</div><div class=\"line\">  server b weight=3;</div><div class=\"line\">  server c weight=1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>按照配置，每有10次请求，其中6个会转发到a服务器，3个转发到b服务器，1个转发到c服务器。</p>\n<p>每个服务器都有三个权重变量，先解释下它们的含义。</p>\n<p>(1) weight</p>\n<p>配置文件中指定的该服务器的权重，这个值是固定不变的。</p>\n<p>(2) effective_weight</p>\n<p>服务器的有效权重，初始值为weight。</p>\n<p>在释放服务器时，如果发现和某服务器的通信过程中发生了错误，就减小它的effective_weight。<br>此后有新的请求过来时，在选取该服务器的过程中，再逐步增加effective_weight，最终又恢复到weight。<br>之所以增加这个字段，是为了当服务器发生错误时，降低其权重。</p>\n<p>(3) current_weight  </p>\n<p>服务器目前的权重，初始为0，之后会动态调整。</p>\n<p>那么如何动态调整呢？  </p>\n<p>nginx每次选取服务器时：</p>\n<ol>\n<li>先遍历集群中所有服务器，将每个服务器的current_weight增加它的effective_weight，</li>\n<li>再累加所有服务器的effective_weight，保存为total。</li>\n<li>判断当前服务器的current_weight是否最大，是则选中该服务器，然后把它的current_weight减去total。<br>不是则不会被选中，current_weight也就不用减了。</li>\n</ol>\n<p>弄清了三个weight字段的含义后，加权轮询算法可描述为：</p>\n<ol>\n<li>对于每个请求，遍历集群中的所有可用服务器，对于每个服务器执行：<br> current_weight += effecitve_weight。</li>\n<li>累加所有effective_weight，保存为total。</li>\n<li>选出current_weight最大的服务器，作为本次选定的服务器。</li>\n<li>对于本次选定的服务器，执行：current_weight -= total。</li>\n</ol>\n<p>下面以表格形式记录其过程：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">请求次数</th>\n<th style=\"text-align:center\">开始current_weight</th>\n<th style=\"text-align:center\">增加effective_weight</th>\n<th style=\"text-align:center\">累加total</th>\n<th style=\"text-align:center\">选中服务器</th>\n<th style=\"text-align:center\">选中后current_weight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">[0, 0, 0]</td>\n<td style=\"text-align:center\">[6, 3, 1]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-4, 3, 1]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">[-4, 3, 1]</td>\n<td style=\"text-align:center\">[2, 6, 2]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[2, -4, 2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">[2, -4, 2]</td>\n<td style=\"text-align:center\">[8, -1, 3]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-2, -1, 3]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">[-2, -1, 3]</td>\n<td style=\"text-align:center\">[4, 2, 4]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-6, 2, 4]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">[-6, 2, 4]</td>\n<td style=\"text-align:center\">[0, 5, 5]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[0, -5, 5]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">[0, -5, 5]</td>\n<td style=\"text-align:center\">[6, -2, 6]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-4, -2, 6]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">[-4, -2, 6]</td>\n<td style=\"text-align:center\">[2, 1, 7]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">[2, 1, -3]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">[2, 1, -3]</td>\n<td style=\"text-align:center\">[8, 4, -2]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-2, 4, -2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">[-2, 4, -2]</td>\n<td style=\"text-align:center\">[4, 7, -1]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[4, -3, -1]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">[4, -3, -1]</td>\n<td style=\"text-align:center\">[10, 0, 0]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[0, 0, 0]</td>\n</tr>\n</tbody>\n</table>\n<p>可以看到，选中服务器依次为[a, b, a, a, b, a, c, a, b, a]。</p>\n<p>a,b,c分别被选中了6,3,1次，正好是符合其权重值的；<br>服务器a虽然权重大，但没有被连续选取，不会对a服务器连续请求；<br>经过10次请求后，a,b,c的当前权重current_weight又全部归0，如此便可循环往复。</p>\n<p>ps: 这里我们发现total永远都是10，因为这里假定服务器都没有发生故障或返回错误，其effective_weight不变。实际中如果服务器发生了错误，nginx当然也会进行降权处理，total也会变啦。这里我们学习一下正常算法，出错的情况就先不展开了。</p>\n","excerpt":"","more":"<p>记录一下nginx加权分配算法。</p>\n<p>nginx可以指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。<br>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">upstream backend &#123;</div><div class=\"line\">  server a weight=6;</div><div class=\"line\">  server b weight=3;</div><div class=\"line\">  server c weight=1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>按照配置，每有10次请求，其中6个会转发到a服务器，3个转发到b服务器，1个转发到c服务器。</p>\n<p>每个服务器都有三个权重变量，先解释下它们的含义。</p>\n<p>(1) weight</p>\n<p>配置文件中指定的该服务器的权重，这个值是固定不变的。</p>\n<p>(2) effective_weight</p>\n<p>服务器的有效权重，初始值为weight。</p>\n<p>在释放服务器时，如果发现和某服务器的通信过程中发生了错误，就减小它的effective_weight。<br>此后有新的请求过来时，在选取该服务器的过程中，再逐步增加effective_weight，最终又恢复到weight。<br>之所以增加这个字段，是为了当服务器发生错误时，降低其权重。</p>\n<p>(3) current_weight  </p>\n<p>服务器目前的权重，初始为0，之后会动态调整。</p>\n<p>那么如何动态调整呢？  </p>\n<p>nginx每次选取服务器时：</p>\n<ol>\n<li>先遍历集群中所有服务器，将每个服务器的current_weight增加它的effective_weight，</li>\n<li>再累加所有服务器的effective_weight，保存为total。</li>\n<li>判断当前服务器的current_weight是否最大，是则选中该服务器，然后把它的current_weight减去total。<br>不是则不会被选中，current_weight也就不用减了。</li>\n</ol>\n<p>弄清了三个weight字段的含义后，加权轮询算法可描述为：</p>\n<ol>\n<li>对于每个请求，遍历集群中的所有可用服务器，对于每个服务器执行：<br> current_weight += effecitve_weight。</li>\n<li>累加所有effective_weight，保存为total。</li>\n<li>选出current_weight最大的服务器，作为本次选定的服务器。</li>\n<li>对于本次选定的服务器，执行：current_weight -= total。</li>\n</ol>\n<p>下面以表格形式记录其过程：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">请求次数</th>\n<th style=\"text-align:center\">开始current_weight</th>\n<th style=\"text-align:center\">增加effective_weight</th>\n<th style=\"text-align:center\">累加total</th>\n<th style=\"text-align:center\">选中服务器</th>\n<th style=\"text-align:center\">选中后current_weight</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">[0, 0, 0]</td>\n<td style=\"text-align:center\">[6, 3, 1]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-4, 3, 1]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">[-4, 3, 1]</td>\n<td style=\"text-align:center\">[2, 6, 2]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[2, -4, 2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">[2, -4, 2]</td>\n<td style=\"text-align:center\">[8, -1, 3]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-2, -1, 3]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">[-2, -1, 3]</td>\n<td style=\"text-align:center\">[4, 2, 4]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-6, 2, 4]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">[-6, 2, 4]</td>\n<td style=\"text-align:center\">[0, 5, 5]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[0, -5, 5]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">[0, -5, 5]</td>\n<td style=\"text-align:center\">[6, -2, 6]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-4, -2, 6]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">[-4, -2, 6]</td>\n<td style=\"text-align:center\">[2, 1, 7]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">[2, 1, -3]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">[2, 1, -3]</td>\n<td style=\"text-align:center\">[8, 4, -2]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[-2, 4, -2]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">[-2, 4, -2]</td>\n<td style=\"text-align:center\">[4, 7, -1]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">[4, -3, -1]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">[4, -3, -1]</td>\n<td style=\"text-align:center\">[10, 0, 0]</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">[0, 0, 0]</td>\n</tr>\n</tbody>\n</table>\n<p>可以看到，选中服务器依次为[a, b, a, a, b, a, c, a, b, a]。</p>\n<p>a,b,c分别被选中了6,3,1次，正好是符合其权重值的；<br>服务器a虽然权重大，但没有被连续选取，不会对a服务器连续请求；<br>经过10次请求后，a,b,c的当前权重current_weight又全部归0，如此便可循环往复。</p>\n<p>ps: 这里我们发现total永远都是10，因为这里假定服务器都没有发生故障或返回错误，其effective_weight不变。实际中如果服务器发生了错误，nginx当然也会进行降权处理，total也会变啦。这里我们学习一下正常算法，出错的情况就先不展开了。</p>\n"},{"title":"Markdown基础语法","date":"2017-04-03T02:21:15.000Z","_content":"# 标准mrakdown语法\n\n## 加粗和斜体\n\n### 字体加粗以两个*或两个_开头结尾\n```\n__重要的事情说三遍！！！__   **重要的事情说三遍！！！**\n```\n效果如下：\n\n**重要的事情说三遍！！！**\n\n### 字体倾斜以一个*或_开头结尾\n```\n_一段斜体文字_   *一段斜体文字*\n```\n效果如下：\n\n *一段斜体文字*\n\n## 链接和邮件\n\n### 链接：\n```\nbla bla bla [example](http://url.com/ \"Title\")\n这是我们常用的网站: [百度一下](www.baidu.com \"百度一下\")\n```\n效果如下：\n\n这是我们常用的网站: [baidu](www.baidu.com \"百度一下\")\n\n也可以定义一个id来对应链接地址\n```\nbla bla bla [example][id]. Then, anywhere else in the doc, define the link:\n[id]: http://example.com/  \"Title\"\n\n这是我们常用的网站: [baidu][baiduId]\n[baiduId]: www.baidu.com \"百度一下\"\n```\n效果如下：\n\n这是我的[博客][blog]，欢迎访问。\n[blog]:https://tenny-peng.github.io \"tenny's blog\"\n\n### 邮件：\n```\nAn email <example@example.com> link.\n这是我的邮箱<mpengtaoqi@163.com>。\n```\n效果如下：\n\n这是我的邮箱<mpengtaoqi@163.com>。\n\n\n## 图片\n\n行内引用 (标题可选):\n```\n![alt text](/path/img.jpg \"Title\")\n这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n```\n效果如下：\n\n这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n\n\n\n使用id引用图片链接：\n```\n![alt text][id]\n[id]: /url/to/img.jpg \"Title\"\n\n使用id引用图片链接![图片替代文字][img_id]\n[img_id](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n```\n效果如下：\n\n使用id引用图片链接![图片替代文字][imgId]\n[imgId]: https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\"\n\n\n## 标题\n\n### 底线形式:\n```\n标题 1\n========\n\n标题 2\n--------\n```\n效果如下：\n\n标题 1\n========\n\n标题 2\n--------\n\n### #模式 (末尾的#可选):\n```\n# 标题 1 #\n\n## 标题 2 ##\n\n###### 标题 6\n```\n效果如下：\n\n# 标题 1 #\n\n## 标题 2 ##\n\n###### 标题 6\n\n## 列表\n### 有序的, 不带段落:\n```\n1.  Git\n2.  Hexo\n3.  MarkDown\n```\n效果如下：\n\n1.  Git\n2.  Hexo\n3.  MarkDown\n\n### 无序的, 带段落:\n```\n*   一个条目.\n\n    巴拉巴拉拉，这里是段落文字.\n\n*   其他条目\n```\n效果如下：\n\n*   一个条目.\n\n    巴拉巴拉巴拉，这里是段落文字.\n\n*   其他条目\n\n### 你可以嵌套使用它们：\n```\n*   Work\n    * java\n*   Blog\n    1.  github\n    2.  atom\n        * markdown\n    3. hexo\n*   learn\n```\n效果如下：\n\n*   Work\n    * java\n*   Blog\n    1.  github\n    2.  atom\n        * markdown\n    3. hexo\n*   learn\n\n## 区块引用\n```\n> 类似邮件的引用方式\n> 在断好的行前加上`>`\n\n> > 也可以嵌套使用\n\n> #### 引用标题\n>\n> * 也可以是一个列表\n> * 等等\n```\n效果如下：\n\n> 类似邮件的引用方式\n> 在断好的行前加上`>`\n\n> > 也可以嵌套使用\n\n> #### 引用标题\n>\n> * 也可以是一个列表\n> * 等等\n\n### 内联代码\n```\n`<some code>` 使用引号和反引号标记行内代码片段。\n\n如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。\n\n例如 `` `this` ``.\n```\n效果如下：\n\n`<some code>` 使用引号和反引号标记行内代码片段。\n\n如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。\n\n例如 `` `this` ``.\n\n### 代码块\n在句段的行首插入1个tab 或 4个空格，则表示代码块。\n```\n这是一段普通的文字。\n\n  这一段代码块。\n```\n\n## 分隔线\n用三个以上的星号或减号或底线来建立一个水平分隔线。\n\n行内不能有其他东西，但你可以在星号或是减号中间插入空格。\n```\n---\n\n* * *\n\n- - - -\n```\n效果如下：\n\n---\n\n* * *\n\n- - - -\n\n## 换行\n在一行的结尾处加上2个或2个以上的空格\n```\nRoses are red,   \nViolets are blue.\n```\n效果如下：\n\nRoses are red,   \nViolets are blue.\n\n## 表格\n```\n| 字段 | 左对齐 | 居中 | 右对齐 |       //表头\n|------|:------|:----:|------:|       //对齐方式(默认左对齐)\n| 1 | left1 | center1 | right1 |      //内容\n| 2 | left2 | center2 | right2 |\n| 3 | left3 | center3 | right3 |\n| 4 | left4 | center4 | right4 |\n```\n效果如下：\n\n| 默认字段 | 左对齐字段 | 居中字段 | 右对齐字段 |\n|------|:------|:----:|------:|\n| 1 | left1 | center1 | right1 |\n| 2 | left2 | center2 | right2 |\n| 3 | left3 | center3 | right3 |\n| 4 | left4 | center4 | right4 |  \n","source":"_posts/MarkDown基础语法.md","raw":"---\ntitle: Markdown基础语法\ndate: 2017-04-03 10:21:15\ntags: [markdown, 语法]\ncategories: markdown\n---\n# 标准mrakdown语法\n\n## 加粗和斜体\n\n### 字体加粗以两个*或两个_开头结尾\n```\n__重要的事情说三遍！！！__   **重要的事情说三遍！！！**\n```\n效果如下：\n\n**重要的事情说三遍！！！**\n\n### 字体倾斜以一个*或_开头结尾\n```\n_一段斜体文字_   *一段斜体文字*\n```\n效果如下：\n\n *一段斜体文字*\n\n## 链接和邮件\n\n### 链接：\n```\nbla bla bla [example](http://url.com/ \"Title\")\n这是我们常用的网站: [百度一下](www.baidu.com \"百度一下\")\n```\n效果如下：\n\n这是我们常用的网站: [baidu](www.baidu.com \"百度一下\")\n\n也可以定义一个id来对应链接地址\n```\nbla bla bla [example][id]. Then, anywhere else in the doc, define the link:\n[id]: http://example.com/  \"Title\"\n\n这是我们常用的网站: [baidu][baiduId]\n[baiduId]: www.baidu.com \"百度一下\"\n```\n效果如下：\n\n这是我的[博客][blog]，欢迎访问。\n[blog]:https://tenny-peng.github.io \"tenny's blog\"\n\n### 邮件：\n```\nAn email <example@example.com> link.\n这是我的邮箱<mpengtaoqi@163.com>。\n```\n效果如下：\n\n这是我的邮箱<mpengtaoqi@163.com>。\n\n\n## 图片\n\n行内引用 (标题可选):\n```\n![alt text](/path/img.jpg \"Title\")\n这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n```\n效果如下：\n\n这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n\n\n\n使用id引用图片链接：\n```\n![alt text][id]\n[id]: /url/to/img.jpg \"Title\"\n\n使用id引用图片链接![图片替代文字][img_id]\n[img_id](https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\")\n```\n效果如下：\n\n使用id引用图片链接![图片替代文字][imgId]\n[imgId]: https://tenny-peng.github.io/images/avatar.jpg \"偷得浮生半日闲\"\n\n\n## 标题\n\n### 底线形式:\n```\n标题 1\n========\n\n标题 2\n--------\n```\n效果如下：\n\n标题 1\n========\n\n标题 2\n--------\n\n### #模式 (末尾的#可选):\n```\n# 标题 1 #\n\n## 标题 2 ##\n\n###### 标题 6\n```\n效果如下：\n\n# 标题 1 #\n\n## 标题 2 ##\n\n###### 标题 6\n\n## 列表\n### 有序的, 不带段落:\n```\n1.  Git\n2.  Hexo\n3.  MarkDown\n```\n效果如下：\n\n1.  Git\n2.  Hexo\n3.  MarkDown\n\n### 无序的, 带段落:\n```\n*   一个条目.\n\n    巴拉巴拉拉，这里是段落文字.\n\n*   其他条目\n```\n效果如下：\n\n*   一个条目.\n\n    巴拉巴拉巴拉，这里是段落文字.\n\n*   其他条目\n\n### 你可以嵌套使用它们：\n```\n*   Work\n    * java\n*   Blog\n    1.  github\n    2.  atom\n        * markdown\n    3. hexo\n*   learn\n```\n效果如下：\n\n*   Work\n    * java\n*   Blog\n    1.  github\n    2.  atom\n        * markdown\n    3. hexo\n*   learn\n\n## 区块引用\n```\n> 类似邮件的引用方式\n> 在断好的行前加上`>`\n\n> > 也可以嵌套使用\n\n> #### 引用标题\n>\n> * 也可以是一个列表\n> * 等等\n```\n效果如下：\n\n> 类似邮件的引用方式\n> 在断好的行前加上`>`\n\n> > 也可以嵌套使用\n\n> #### 引用标题\n>\n> * 也可以是一个列表\n> * 等等\n\n### 内联代码\n```\n`<some code>` 使用引号和反引号标记行内代码片段。\n\n如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。\n\n例如 `` `this` ``.\n```\n效果如下：\n\n`<some code>` 使用引号和反引号标记行内代码片段。\n\n如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。\n\n例如 `` `this` ``.\n\n### 代码块\n在句段的行首插入1个tab 或 4个空格，则表示代码块。\n```\n这是一段普通的文字。\n\n  这一段代码块。\n```\n\n## 分隔线\n用三个以上的星号或减号或底线来建立一个水平分隔线。\n\n行内不能有其他东西，但你可以在星号或是减号中间插入空格。\n```\n---\n\n* * *\n\n- - - -\n```\n效果如下：\n\n---\n\n* * *\n\n- - - -\n\n## 换行\n在一行的结尾处加上2个或2个以上的空格\n```\nRoses are red,   \nViolets are blue.\n```\n效果如下：\n\nRoses are red,   \nViolets are blue.\n\n## 表格\n```\n| 字段 | 左对齐 | 居中 | 右对齐 |       //表头\n|------|:------|:----:|------:|       //对齐方式(默认左对齐)\n| 1 | left1 | center1 | right1 |      //内容\n| 2 | left2 | center2 | right2 |\n| 3 | left3 | center3 | right3 |\n| 4 | left4 | center4 | right4 |\n```\n效果如下：\n\n| 默认字段 | 左对齐字段 | 居中字段 | 右对齐字段 |\n|------|:------|:----:|------:|\n| 1 | left1 | center1 | right1 |\n| 2 | left2 | center2 | right2 |\n| 3 | left3 | center3 | right3 |\n| 4 | left4 | center4 | right4 |  \n","slug":"MarkDown基础语法","published":1,"updated":"2017-04-06T08:00:46.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0dg0009iko0u48qd7ru","content":"<h1 id=\"标准mrakdown语法\"><a href=\"#标准mrakdown语法\" class=\"headerlink\" title=\"标准mrakdown语法\"></a>标准mrakdown语法</h1><h2 id=\"加粗和斜体\"><a href=\"#加粗和斜体\" class=\"headerlink\" title=\"加粗和斜体\"></a>加粗和斜体</h2><h3 id=\"字体加粗以两个-或两个-开头结尾\"><a href=\"#字体加粗以两个-或两个-开头结尾\" class=\"headerlink\" title=\"字体加粗以两个*或两个_开头结尾\"></a>字体加粗以两个*或两个_开头结尾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">__重要的事情说三遍！！！__   **重要的事情说三遍！！！**</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><strong>重要的事情说三遍！！！</strong></p>\n<h3 id=\"字体倾斜以一个-或-开头结尾\"><a href=\"#字体倾斜以一个-或-开头结尾\" class=\"headerlink\" title=\"字体倾斜以一个*或_开头结尾\"></a>字体倾斜以一个*或_开头结尾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">_一段斜体文字_   *一段斜体文字*</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p> <em>一段斜体文字</em></p>\n<h2 id=\"链接和邮件\"><a href=\"#链接和邮件\" class=\"headerlink\" title=\"链接和邮件\"></a>链接和邮件</h2><h3 id=\"链接：\"><a href=\"#链接：\" class=\"headerlink\" title=\"链接：\"></a>链接：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">bla bla bla [example](http://url.com/ &quot;Title&quot;)</div><div class=\"line\">这是我们常用的网站: [百度一下](www.baidu.com &quot;百度一下&quot;)</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p>这是我们常用的网站: <a href=\"www.baidu.com\" title=\"百度一下\">baidu</a></p>\n<p>也可以定义一个id来对应链接地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">bla bla bla [example][id]. Then, anywhere else in the doc, define the link:</div><div class=\"line\">[id]: http://example.com/  &quot;Title&quot;</div><div class=\"line\"></div><div class=\"line\">这是我们常用的网站: [baidu][baiduId]</div><div class=\"line\">[baiduId]: www.baidu.com &quot;百度一下&quot;</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>这是我的<a href=\"https://tenny-peng.github.io\" title=\"tenny&#39;s blog\">博客</a>，欢迎访问。</p>\n<h3 id=\"邮件：\"><a href=\"#邮件：\" class=\"headerlink\" title=\"邮件：\"></a>邮件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">An email &lt;example@example.com&gt; link.</div><div class=\"line\">这是我的邮箱&lt;mpengtaoqi@163.com&gt;。</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p>这是我的邮箱<a href=\"&#109;&#x61;&#105;&#108;&#116;&#111;&#58;&#109;&#112;&#101;&#x6e;&#103;&#116;&#97;&#x6f;&#113;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;\">&#109;&#112;&#101;&#x6e;&#103;&#116;&#97;&#x6f;&#113;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;</a>。</p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>行内引用 (标题可选):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">![alt text](/path/img.jpg &quot;Title&quot;)</div><div class=\"line\">这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg &quot;偷得浮生半日闲&quot;)</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>这里出现一个引用的图片<img src=\"https://tenny-peng.github.io/images/avatar.jpg\" alt=\"图片替代文字\" title=\"偷得浮生半日闲\"></p>\n<p>使用id引用图片链接：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">![alt text][id]</div><div class=\"line\">[id]: /url/to/img.jpg &quot;Title&quot;</div><div class=\"line\"></div><div class=\"line\">使用id引用图片链接![图片替代文字][img_id]</div><div class=\"line\">[img_id](https://tenny-peng.github.io/images/avatar.jpg &quot;偷得浮生半日闲&quot;)</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>使用id引用图片链接<img src=\"https://tenny-peng.github.io/images/avatar.jpg\" alt=\"图片替代文字\" title=\"偷得浮生半日闲\"></p>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><h3 id=\"底线形式\"><a href=\"#底线形式\" class=\"headerlink\" title=\"底线形式:\"></a>底线形式:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">标题 1</div><div class=\"line\">========</div><div class=\"line\"></div><div class=\"line\">标题 2</div><div class=\"line\">--------</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<h1 id=\"标题-1\"><a href=\"#标题-1\" class=\"headerlink\" title=\"标题 1\"></a>标题 1</h1><h2 id=\"标题-2\"><a href=\"#标题-2\" class=\"headerlink\" title=\"标题 2\"></a>标题 2</h2><h3 id=\"模式-末尾的-可选\"><a href=\"#模式-末尾的-可选\" class=\"headerlink\" title=\"#模式 (末尾的#可选):\"></a>#模式 (末尾的#可选):</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 标题 1 #</div><div class=\"line\"></div><div class=\"line\">## 标题 2 ##</div><div class=\"line\"></div><div class=\"line\">###### 标题 6</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<h1 id=\"标题-1-1\"><a href=\"#标题-1-1\" class=\"headerlink\" title=\"标题 1\"></a>标题 1</h1><h2 id=\"标题-2-1\"><a href=\"#标题-2-1\" class=\"headerlink\" title=\"标题 2\"></a>标题 2</h2><h6 id=\"标题-6\"><a href=\"#标题-6\" class=\"headerlink\" title=\"标题 6\"></a>标题 6</h6><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"有序的-不带段落\"><a href=\"#有序的-不带段落\" class=\"headerlink\" title=\"有序的, 不带段落:\"></a>有序的, 不带段落:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.  Git</div><div class=\"line\">2.  Hexo</div><div class=\"line\">3.  MarkDown</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ol>\n<li>Git</li>\n<li>Hexo</li>\n<li>MarkDown</li>\n</ol>\n<h3 id=\"无序的-带段落\"><a href=\"#无序的-带段落\" class=\"headerlink\" title=\"无序的, 带段落:\"></a>无序的, 带段落:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   一个条目.</div><div class=\"line\"></div><div class=\"line\">    巴拉巴拉拉，这里是段落文字.</div><div class=\"line\"></div><div class=\"line\">*   其他条目</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ul>\n<li><p>一个条目.</p>\n<p>巴拉巴拉巴拉，这里是段落文字.</p>\n</li>\n<li><p>其他条目</p>\n</li>\n</ul>\n<h3 id=\"你可以嵌套使用它们：\"><a href=\"#你可以嵌套使用它们：\" class=\"headerlink\" title=\"你可以嵌套使用它们：\"></a>你可以嵌套使用它们：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   Work</div><div class=\"line\">    * java</div><div class=\"line\">*   Blog</div><div class=\"line\">    1.  github</div><div class=\"line\">    2.  atom</div><div class=\"line\">        * markdown</div><div class=\"line\">    3. hexo</div><div class=\"line\">*   learn</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ul>\n<li>Work<ul>\n<li>java</li>\n</ul>\n</li>\n<li>Blog<ol>\n<li>github</li>\n<li>atom<ul>\n<li>markdown</li>\n</ul>\n</li>\n<li>hexo</li>\n</ol>\n</li>\n<li>learn</li>\n</ul>\n<h2 id=\"区块引用\"><a href=\"#区块引用\" class=\"headerlink\" title=\"区块引用\"></a>区块引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 类似邮件的引用方式</div><div class=\"line\">&gt; 在断好的行前加上`&gt;`</div><div class=\"line\"></div><div class=\"line\">&gt; &gt; 也可以嵌套使用</div><div class=\"line\"></div><div class=\"line\">&gt; #### 引用标题</div><div class=\"line\">&gt;</div><div class=\"line\">&gt; * 也可以是一个列表</div><div class=\"line\">&gt; * 等等</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<blockquote>\n<p>类似邮件的引用方式<br>在断好的行前加上<code>&gt;</code></p>\n<blockquote>\n<p>也可以嵌套使用</p>\n</blockquote>\n<h4 id=\"引用标题\"><a href=\"#引用标题\" class=\"headerlink\" title=\"引用标题\"></a>引用标题</h4><ul>\n<li>也可以是一个列表</li>\n<li>等等</li>\n</ul>\n</blockquote>\n<h3 id=\"内联代码\"><a href=\"#内联代码\" class=\"headerlink\" title=\"内联代码\"></a>内联代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`&lt;some code&gt;` 使用引号和反引号标记行内代码片段。</div><div class=\"line\"></div><div class=\"line\">如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。</div><div class=\"line\"></div><div class=\"line\">例如 `` `this` ``.</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><code>&lt;some code&gt;</code> 使用引号和反引号标记行内代码片段。</p>\n<p>如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。</p>\n<p>例如 <code>`this` </code>.</p>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>在句段的行首插入1个tab 或 4个空格，则表示代码块。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">这是一段普通的文字。</div><div class=\"line\"></div><div class=\"line\">  这一段代码块。</div></pre></td></tr></table></figure></p>\n<h2 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h2><p>用三个以上的星号或减号或底线来建立一个水平分隔线。</p>\n<p>行内不能有其他东西，但你可以在星号或是减号中间插入空格。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">* * *</div><div class=\"line\"></div><div class=\"line\">- - - -</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<hr>\n<hr>\n<hr>\n<h2 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h2><p>在一行的结尾处加上2个或2个以上的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Roses are red,   </div><div class=\"line\">Violets are blue.</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>Roses are red,<br>Violets are blue.</p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">| 字段 | 左对齐 | 居中 | 右对齐 |       //表头</div><div class=\"line\">|------|:------|:----:|------:|       //对齐方式(默认左对齐)</div><div class=\"line\">| 1 | left1 | center1 | right1 |      //内容</div><div class=\"line\">| 2 | left2 | center2 | right2 |</div><div class=\"line\">| 3 | left3 | center3 | right3 |</div><div class=\"line\">| 4 | left4 | center4 | right4 |</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<table>\n<thead>\n<tr>\n<th>默认字段</th>\n<th style=\"text-align:left\">左对齐字段</th>\n<th style=\"text-align:center\">居中字段</th>\n<th style=\"text-align:right\">右对齐字段</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align:left\">left1</td>\n<td style=\"text-align:center\">center1</td>\n<td style=\"text-align:right\">right1</td>\n</tr>\n<tr>\n<td>2</td>\n<td style=\"text-align:left\">left2</td>\n<td style=\"text-align:center\">center2</td>\n<td style=\"text-align:right\">right2</td>\n</tr>\n<tr>\n<td>3</td>\n<td style=\"text-align:left\">left3</td>\n<td style=\"text-align:center\">center3</td>\n<td style=\"text-align:right\">right3</td>\n</tr>\n<tr>\n<td>4</td>\n<td style=\"text-align:left\">left4</td>\n<td style=\"text-align:center\">center4</td>\n<td style=\"text-align:right\">right4</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h1 id=\"标准mrakdown语法\"><a href=\"#标准mrakdown语法\" class=\"headerlink\" title=\"标准mrakdown语法\"></a>标准mrakdown语法</h1><h2 id=\"加粗和斜体\"><a href=\"#加粗和斜体\" class=\"headerlink\" title=\"加粗和斜体\"></a>加粗和斜体</h2><h3 id=\"字体加粗以两个-或两个-开头结尾\"><a href=\"#字体加粗以两个-或两个-开头结尾\" class=\"headerlink\" title=\"字体加粗以两个*或两个_开头结尾\"></a>字体加粗以两个*或两个_开头结尾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">__重要的事情说三遍！！！__   **重要的事情说三遍！！！**</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><strong>重要的事情说三遍！！！</strong></p>\n<h3 id=\"字体倾斜以一个-或-开头结尾\"><a href=\"#字体倾斜以一个-或-开头结尾\" class=\"headerlink\" title=\"字体倾斜以一个*或_开头结尾\"></a>字体倾斜以一个*或_开头结尾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">_一段斜体文字_   *一段斜体文字*</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p> <em>一段斜体文字</em></p>\n<h2 id=\"链接和邮件\"><a href=\"#链接和邮件\" class=\"headerlink\" title=\"链接和邮件\"></a>链接和邮件</h2><h3 id=\"链接：\"><a href=\"#链接：\" class=\"headerlink\" title=\"链接：\"></a>链接：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">bla bla bla [example](http://url.com/ &quot;Title&quot;)</div><div class=\"line\">这是我们常用的网站: [百度一下](www.baidu.com &quot;百度一下&quot;)</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p>这是我们常用的网站: <a href=\"www.baidu.com\" title=\"百度一下\">baidu</a></p>\n<p>也可以定义一个id来对应链接地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">bla bla bla [example][id]. Then, anywhere else in the doc, define the link:</div><div class=\"line\">[id]: http://example.com/  &quot;Title&quot;</div><div class=\"line\"></div><div class=\"line\">这是我们常用的网站: [baidu][baiduId]</div><div class=\"line\">[baiduId]: www.baidu.com &quot;百度一下&quot;</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>这是我的<a href=\"https://tenny-peng.github.io\" title=\"tenny&#39;s blog\">博客</a>，欢迎访问。</p>\n<h3 id=\"邮件：\"><a href=\"#邮件：\" class=\"headerlink\" title=\"邮件：\"></a>邮件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">An email &lt;example@example.com&gt; link.</div><div class=\"line\">这是我的邮箱&lt;mpengtaoqi@163.com&gt;。</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p>这是我的邮箱<a href=\"&#109;&#x61;&#105;&#108;&#116;&#111;&#58;&#109;&#112;&#101;&#x6e;&#103;&#116;&#97;&#x6f;&#113;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;\">&#109;&#112;&#101;&#x6e;&#103;&#116;&#97;&#x6f;&#113;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;</a>。</p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>行内引用 (标题可选):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">![alt text](/path/img.jpg &quot;Title&quot;)</div><div class=\"line\">这里出现一个引用的图片![图片替代文字](https://tenny-peng.github.io/images/avatar.jpg &quot;偷得浮生半日闲&quot;)</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>这里出现一个引用的图片<img src=\"https://tenny-peng.github.io/images/avatar.jpg\" alt=\"图片替代文字\" title=\"偷得浮生半日闲\"></p>\n<p>使用id引用图片链接：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">![alt text][id]</div><div class=\"line\">[id]: /url/to/img.jpg &quot;Title&quot;</div><div class=\"line\"></div><div class=\"line\">使用id引用图片链接![图片替代文字][img_id]</div><div class=\"line\">[img_id](https://tenny-peng.github.io/images/avatar.jpg &quot;偷得浮生半日闲&quot;)</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>使用id引用图片链接<img src=\"https://tenny-peng.github.io/images/avatar.jpg\" alt=\"图片替代文字\" title=\"偷得浮生半日闲\"></p>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><h3 id=\"底线形式\"><a href=\"#底线形式\" class=\"headerlink\" title=\"底线形式:\"></a>底线形式:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">标题 1</div><div class=\"line\">========</div><div class=\"line\"></div><div class=\"line\">标题 2</div><div class=\"line\">--------</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<h1 id=\"标题-1\"><a href=\"#标题-1\" class=\"headerlink\" title=\"标题 1\"></a>标题 1</h1><h2 id=\"标题-2\"><a href=\"#标题-2\" class=\"headerlink\" title=\"标题 2\"></a>标题 2</h2><h3 id=\"模式-末尾的-可选\"><a href=\"#模式-末尾的-可选\" class=\"headerlink\" title=\"#模式 (末尾的#可选):\"></a>#模式 (末尾的#可选):</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 标题 1 #</div><div class=\"line\"></div><div class=\"line\">## 标题 2 ##</div><div class=\"line\"></div><div class=\"line\">###### 标题 6</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<h1 id=\"标题-1-1\"><a href=\"#标题-1-1\" class=\"headerlink\" title=\"标题 1\"></a>标题 1</h1><h2 id=\"标题-2-1\"><a href=\"#标题-2-1\" class=\"headerlink\" title=\"标题 2\"></a>标题 2</h2><h6 id=\"标题-6\"><a href=\"#标题-6\" class=\"headerlink\" title=\"标题 6\"></a>标题 6</h6><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"有序的-不带段落\"><a href=\"#有序的-不带段落\" class=\"headerlink\" title=\"有序的, 不带段落:\"></a>有序的, 不带段落:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.  Git</div><div class=\"line\">2.  Hexo</div><div class=\"line\">3.  MarkDown</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ol>\n<li>Git</li>\n<li>Hexo</li>\n<li>MarkDown</li>\n</ol>\n<h3 id=\"无序的-带段落\"><a href=\"#无序的-带段落\" class=\"headerlink\" title=\"无序的, 带段落:\"></a>无序的, 带段落:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   一个条目.</div><div class=\"line\"></div><div class=\"line\">    巴拉巴拉拉，这里是段落文字.</div><div class=\"line\"></div><div class=\"line\">*   其他条目</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ul>\n<li><p>一个条目.</p>\n<p>巴拉巴拉巴拉，这里是段落文字.</p>\n</li>\n<li><p>其他条目</p>\n</li>\n</ul>\n<h3 id=\"你可以嵌套使用它们：\"><a href=\"#你可以嵌套使用它们：\" class=\"headerlink\" title=\"你可以嵌套使用它们：\"></a>你可以嵌套使用它们：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   Work</div><div class=\"line\">    * java</div><div class=\"line\">*   Blog</div><div class=\"line\">    1.  github</div><div class=\"line\">    2.  atom</div><div class=\"line\">        * markdown</div><div class=\"line\">    3. hexo</div><div class=\"line\">*   learn</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<ul>\n<li>Work<ul>\n<li>java</li>\n</ul>\n</li>\n<li>Blog<ol>\n<li>github</li>\n<li>atom<ul>\n<li>markdown</li>\n</ul>\n</li>\n<li>hexo</li>\n</ol>\n</li>\n<li>learn</li>\n</ul>\n<h2 id=\"区块引用\"><a href=\"#区块引用\" class=\"headerlink\" title=\"区块引用\"></a>区块引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 类似邮件的引用方式</div><div class=\"line\">&gt; 在断好的行前加上`&gt;`</div><div class=\"line\"></div><div class=\"line\">&gt; &gt; 也可以嵌套使用</div><div class=\"line\"></div><div class=\"line\">&gt; #### 引用标题</div><div class=\"line\">&gt;</div><div class=\"line\">&gt; * 也可以是一个列表</div><div class=\"line\">&gt; * 等等</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<blockquote>\n<p>类似邮件的引用方式<br>在断好的行前加上<code>&gt;</code></p>\n<blockquote>\n<p>也可以嵌套使用</p>\n</blockquote>\n<h4 id=\"引用标题\"><a href=\"#引用标题\" class=\"headerlink\" title=\"引用标题\"></a>引用标题</h4><ul>\n<li>也可以是一个列表</li>\n<li>等等</li>\n</ul>\n</blockquote>\n<h3 id=\"内联代码\"><a href=\"#内联代码\" class=\"headerlink\" title=\"内联代码\"></a>内联代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`&lt;some code&gt;` 使用引号和反引号标记行内代码片段。</div><div class=\"line\"></div><div class=\"line\">如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。</div><div class=\"line\"></div><div class=\"line\">例如 `` `this` ``.</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><code>&lt;some code&gt;</code> 使用引号和反引号标记行内代码片段。</p>\n<p>如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段。</p>\n<p>例如 <code>`this` </code>.</p>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>在句段的行首插入1个tab 或 4个空格，则表示代码块。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">这是一段普通的文字。</div><div class=\"line\"></div><div class=\"line\">  这一段代码块。</div></pre></td></tr></table></figure></p>\n<h2 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h2><p>用三个以上的星号或减号或底线来建立一个水平分隔线。</p>\n<p>行内不能有其他东西，但你可以在星号或是减号中间插入空格。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">* * *</div><div class=\"line\"></div><div class=\"line\">- - - -</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<hr>\n<hr>\n<hr>\n<h2 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h2><p>在一行的结尾处加上2个或2个以上的空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Roses are red,   </div><div class=\"line\">Violets are blue.</div></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p>Roses are red,<br>Violets are blue.</p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">| 字段 | 左对齐 | 居中 | 右对齐 |       //表头</div><div class=\"line\">|------|:------|:----:|------:|       //对齐方式(默认左对齐)</div><div class=\"line\">| 1 | left1 | center1 | right1 |      //内容</div><div class=\"line\">| 2 | left2 | center2 | right2 |</div><div class=\"line\">| 3 | left3 | center3 | right3 |</div><div class=\"line\">| 4 | left4 | center4 | right4 |</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<table>\n<thead>\n<tr>\n<th>默认字段</th>\n<th style=\"text-align:left\">左对齐字段</th>\n<th style=\"text-align:center\">居中字段</th>\n<th style=\"text-align:right\">右对齐字段</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align:left\">left1</td>\n<td style=\"text-align:center\">center1</td>\n<td style=\"text-align:right\">right1</td>\n</tr>\n<tr>\n<td>2</td>\n<td style=\"text-align:left\">left2</td>\n<td style=\"text-align:center\">center2</td>\n<td style=\"text-align:right\">right2</td>\n</tr>\n<tr>\n<td>3</td>\n<td style=\"text-align:left\">left3</td>\n<td style=\"text-align:center\">center3</td>\n<td style=\"text-align:right\">right3</td>\n</tr>\n<tr>\n<td>4</td>\n<td style=\"text-align:left\">left4</td>\n<td style=\"text-align:center\">center4</td>\n<td style=\"text-align:right\">right4</td>\n</tr>\n</tbody>\n</table>\n"},{"layout":"title","title":"hexo+github搭建博客","date":"2017-04-21T06:07:53.000Z","_content":"\nHexo是一款基于Node.js的静态博客框架，配合github可以搭建属于自己的博客。\n\n# 搭建环境\n\n## 安装Node.js\nHexo需要node.js支持，可以到[node.js中文网](http://nodejs.cn/download/)下载适合自己系统的安装包。安装也比较简单，一路next下去就可以了。\n\n安装完后win + r 输入cmd回车，打开命令行界面，分别输入node -v 和nmp -v，看到类似如下结果就说明安装成功了。\n```\n>node -v\nv6.10.1\n>nmp -v\n3.10.10\n```\n\n## 安装Hexo\n在合适的地方建立一个文件夹，用于安装hexo框架和存放你的博客。我的文件夹是D:\\devsoft\\hexo。\n\n命令行切换到hexo目录\n```\nC:\\Users\\tenny>d:\n\nD:\\>cd devsoft\n\nD:\\devsoft>cd hexo\n\nD:\\devsoft\\hexo>\n```\n输入如下命令安装hexo到当前目录\n```\nnpm install hexo-cli -g\n```\n命令行显示一系列安装详情，等待片刻，完成后，继续输入\n```\nnpm install hexo --save\n```\n又会看到一堆信息，完成后，输入hexo -v检查下，看到类似如下信息，说明安装成功了。\n```\nD:\\devsoft\\hexo>hexo -v\nhexo: 3.2.2\nhexo-cli: 1.0.2\nos: Windows_NT 10.0.14393 win32 x64\nhttp_parser: 2.7.0\nnode: 6.10.1\nv8: 5.1.281.95\nuv: 1.9.1\nzlib: 1.2.8\nares: 1.10.1-DEV\nicu: 58.2\nmodules: 48\nopenssl: 1.0.2k\n```\n\n## 配置Hexo\n命令行还在hexo根目录，输入\n```\nhexo init\n```\n继续输入\n```\nnpm -install\n```\nnpm会自动安装需要的组件。之后输入\n```\nnpm install hexo-deployer-git --save\n```\nhexo扩展，用于将博客发布到github上。\n\n# 体验博客\n\n## 本地博客\n继续输入hexo g生成文件\n```\nD:\\devsoft\\hexo>hexo g\nINFO  Start processing\nINFO  Files loaded in 2.28 s\nINFO  Generated: search.xml\nINFO  Generated: sitemap.xml\nINFO  Generated: atom.xml\nINFO  Generated: index.html\nINFO  Generated: categories/index.html\nINFO  Generated: about/index.html\nINFO  Generated: tags/index.html\nINFO  Generated: archives/index.html\nINFO  Generated: favicon.ico\nINFO  Generated: archives/2017/04/index.html\n......   //省略的文件信息\n```\n再输入hexo s启动服务\n```   \nD:\\devsoft\\hexo>hexo s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n在浏览器中输入http://localhost:4000/ 就可以看到博客首页了。\n\n要停止服务，在命令行按Ctrl + C。\n\n## 建立博客仓库\n进入https://github.com/ 登录自己的账号，新建一个仓库，命名为yourname.github.io(这个就是你博客的访问地址，一定要这种格式，否则无效)。例如我的tenny-peng.github.io。\n\n关于安装git和github可以参考我的[Git简单教程](../../03/Git简单教程/index.html)，这里就略过了。\n\n建立好自己的博客仓库(yourname.github.io)后，打开hexo根目录下的_config.yml，找到Deployment，修改成如下内容\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n例如我的\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:tenny-peng/tenny-peng.github.io.git\n  branch: master\n```\n\n## 编写博客\nhexo根目录下执行\n```\nhexo new title \"test\"\n```\n然后在D:\\devsoft\\hexo\\source\\_posts下就能看到test.md文件了。\n\n.md文件是用MarkDown语法写的，关于MarkDown语法，可以参考我的[MarkDown基础语法](../../03/MarkDown基础语法/index.html)。  \nMarkDown文件编辑器推荐用Atom，Atom是Github专门为程序员推出的一个跨平台文本编辑器。可以到https://atom.io/ 下载Atom，也可以找寻其他自己喜欢的MarkDown编辑器。\n\n## 部署博客\n文章编辑完后，使用命令生成，部署\n```\nhexo g      //生成静态文件\nhexo d      //部署到github上\n```\n也可以直接执行以下命令，相当于上面两条命令一起执行\n```\nhexo d -g     //部署前先生成\n```\n部署完成后，访问https://yourname.github.io (例如我的https://tenny-peng.github.io) ，就可以看到生成的文章。\n\n# 使用主题\n主题可以使我们的博客更加个性化，更加美观，等等。\n这里我使用了NexT主题，其他主题配置可参考其说明，下面以NexT为例。\n\n## 安装NexT\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。\n\n如果你熟悉Git，建议你使用克隆最新版本的方式，之后的更新可以通过git pull来快速更新，而不用再次下载压缩包替换。这里我们使用git。\n\n命令行切换到hexo根目录，执行\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n## 启用主题\n找到hexo根目录下的站点配置文件_config.yml，修改theme\n```\ntheme: next\n```\n\n## 设定Scheme\nScheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：\n* Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白\n* Mist - Muse 的紧凑版本，整洁有序的单栏外观\n* Pisces - 双栏 Scheme，小家碧玉似的清新\n\n找到主题next目录下的_config.yml(**注意**：不是hexo根目录下的配置文件，根目录下的是全局博客配置，这个是针对某个主题的配置)，设定自己喜欢的Scheme，使用的去掉#，不使用的注释#。\n```\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n```\n\n## 站点设置\n编辑站点配置文件，设置博客标题，作者，语言等，更多配置可自行查询。\n```\n# Site\ntitle: Tenny's Blog\nauthor: Tenny Peng\nlanguage: zh-Hans     //简体中文\n```\n\n## 菜单配置\n编辑主题配置文件，设置首页分类标签等目录，更多配置可自行查询。\n```\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n```\n这里设定的目录都必须手动创建在hexo/source目录下，否则发布到github上是找不到的。\n\n## 头像设置\n编辑主题配置文件，修改avatar(如没有可新建)\n```\navatar: /images/avatar.jpg\n```\n这里的图片需要放在主题目录下(themes/next/source/images/avatar.jpg)，而不是站点目录。\n\n## 网站图标\n编辑主图配置文件，修改favicon\n```\nfavicon: /favicon.ico\n```\n然后将favicon.ico放在hexo/source目录下即可。\n\n<font size=\"5\">以上基本就完成了个人博客的搭建，更多信息可参考：</font>\n\n[史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n[hexo官网](https://hexo.io/)\n\n[next文档](http://theme-next.iissnan.com/getting-started.html)\n","source":"_posts/hexo+github搭建博客.md","raw":"---\nlayout: title\ntitle: hexo+github搭建博客\ndate: 2017-04-21 14:07:53\ntags: [hexo, github]\ncategories: hexo+github博客\n---\n\nHexo是一款基于Node.js的静态博客框架，配合github可以搭建属于自己的博客。\n\n# 搭建环境\n\n## 安装Node.js\nHexo需要node.js支持，可以到[node.js中文网](http://nodejs.cn/download/)下载适合自己系统的安装包。安装也比较简单，一路next下去就可以了。\n\n安装完后win + r 输入cmd回车，打开命令行界面，分别输入node -v 和nmp -v，看到类似如下结果就说明安装成功了。\n```\n>node -v\nv6.10.1\n>nmp -v\n3.10.10\n```\n\n## 安装Hexo\n在合适的地方建立一个文件夹，用于安装hexo框架和存放你的博客。我的文件夹是D:\\devsoft\\hexo。\n\n命令行切换到hexo目录\n```\nC:\\Users\\tenny>d:\n\nD:\\>cd devsoft\n\nD:\\devsoft>cd hexo\n\nD:\\devsoft\\hexo>\n```\n输入如下命令安装hexo到当前目录\n```\nnpm install hexo-cli -g\n```\n命令行显示一系列安装详情，等待片刻，完成后，继续输入\n```\nnpm install hexo --save\n```\n又会看到一堆信息，完成后，输入hexo -v检查下，看到类似如下信息，说明安装成功了。\n```\nD:\\devsoft\\hexo>hexo -v\nhexo: 3.2.2\nhexo-cli: 1.0.2\nos: Windows_NT 10.0.14393 win32 x64\nhttp_parser: 2.7.0\nnode: 6.10.1\nv8: 5.1.281.95\nuv: 1.9.1\nzlib: 1.2.8\nares: 1.10.1-DEV\nicu: 58.2\nmodules: 48\nopenssl: 1.0.2k\n```\n\n## 配置Hexo\n命令行还在hexo根目录，输入\n```\nhexo init\n```\n继续输入\n```\nnpm -install\n```\nnpm会自动安装需要的组件。之后输入\n```\nnpm install hexo-deployer-git --save\n```\nhexo扩展，用于将博客发布到github上。\n\n# 体验博客\n\n## 本地博客\n继续输入hexo g生成文件\n```\nD:\\devsoft\\hexo>hexo g\nINFO  Start processing\nINFO  Files loaded in 2.28 s\nINFO  Generated: search.xml\nINFO  Generated: sitemap.xml\nINFO  Generated: atom.xml\nINFO  Generated: index.html\nINFO  Generated: categories/index.html\nINFO  Generated: about/index.html\nINFO  Generated: tags/index.html\nINFO  Generated: archives/index.html\nINFO  Generated: favicon.ico\nINFO  Generated: archives/2017/04/index.html\n......   //省略的文件信息\n```\n再输入hexo s启动服务\n```   \nD:\\devsoft\\hexo>hexo s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n在浏览器中输入http://localhost:4000/ 就可以看到博客首页了。\n\n要停止服务，在命令行按Ctrl + C。\n\n## 建立博客仓库\n进入https://github.com/ 登录自己的账号，新建一个仓库，命名为yourname.github.io(这个就是你博客的访问地址，一定要这种格式，否则无效)。例如我的tenny-peng.github.io。\n\n关于安装git和github可以参考我的[Git简单教程](../../03/Git简单教程/index.html)，这里就略过了。\n\n建立好自己的博客仓库(yourname.github.io)后，打开hexo根目录下的_config.yml，找到Deployment，修改成如下内容\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n例如我的\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:tenny-peng/tenny-peng.github.io.git\n  branch: master\n```\n\n## 编写博客\nhexo根目录下执行\n```\nhexo new title \"test\"\n```\n然后在D:\\devsoft\\hexo\\source\\_posts下就能看到test.md文件了。\n\n.md文件是用MarkDown语法写的，关于MarkDown语法，可以参考我的[MarkDown基础语法](../../03/MarkDown基础语法/index.html)。  \nMarkDown文件编辑器推荐用Atom，Atom是Github专门为程序员推出的一个跨平台文本编辑器。可以到https://atom.io/ 下载Atom，也可以找寻其他自己喜欢的MarkDown编辑器。\n\n## 部署博客\n文章编辑完后，使用命令生成，部署\n```\nhexo g      //生成静态文件\nhexo d      //部署到github上\n```\n也可以直接执行以下命令，相当于上面两条命令一起执行\n```\nhexo d -g     //部署前先生成\n```\n部署完成后，访问https://yourname.github.io (例如我的https://tenny-peng.github.io) ，就可以看到生成的文章。\n\n# 使用主题\n主题可以使我们的博客更加个性化，更加美观，等等。\n这里我使用了NexT主题，其他主题配置可参考其说明，下面以NexT为例。\n\n## 安装NexT\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。\n\n如果你熟悉Git，建议你使用克隆最新版本的方式，之后的更新可以通过git pull来快速更新，而不用再次下载压缩包替换。这里我们使用git。\n\n命令行切换到hexo根目录，执行\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n## 启用主题\n找到hexo根目录下的站点配置文件_config.yml，修改theme\n```\ntheme: next\n```\n\n## 设定Scheme\nScheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：\n* Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白\n* Mist - Muse 的紧凑版本，整洁有序的单栏外观\n* Pisces - 双栏 Scheme，小家碧玉似的清新\n\n找到主题next目录下的_config.yml(**注意**：不是hexo根目录下的配置文件，根目录下的是全局博客配置，这个是针对某个主题的配置)，设定自己喜欢的Scheme，使用的去掉#，不使用的注释#。\n```\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n```\n\n## 站点设置\n编辑站点配置文件，设置博客标题，作者，语言等，更多配置可自行查询。\n```\n# Site\ntitle: Tenny's Blog\nauthor: Tenny Peng\nlanguage: zh-Hans     //简体中文\n```\n\n## 菜单配置\n编辑主题配置文件，设置首页分类标签等目录，更多配置可自行查询。\n```\nmenu:\n  home: /\n  categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n```\n这里设定的目录都必须手动创建在hexo/source目录下，否则发布到github上是找不到的。\n\n## 头像设置\n编辑主题配置文件，修改avatar(如没有可新建)\n```\navatar: /images/avatar.jpg\n```\n这里的图片需要放在主题目录下(themes/next/source/images/avatar.jpg)，而不是站点目录。\n\n## 网站图标\n编辑主图配置文件，修改favicon\n```\nfavicon: /favicon.ico\n```\n然后将favicon.ico放在hexo/source目录下即可。\n\n<font size=\"5\">以上基本就完成了个人博客的搭建，更多信息可参考：</font>\n\n[史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n[hexo官网](https://hexo.io/)\n\n[next文档](http://theme-next.iissnan.com/getting-started.html)\n","slug":"hexo+github搭建博客","published":1,"updated":"2017-04-21T09:35:03.311Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0dm000diko0nwc04mq6","content":"<p>Hexo是一款基于Node.js的静态博客框架，配合github可以搭建属于自己的博客。</p>\n<h1 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h1><h2 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h2><p>Hexo需要node.js支持，可以到<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"external\">node.js中文网</a>下载适合自己系统的安装包。安装也比较简单，一路next下去就可以了。</p>\n<p>安装完后win + r 输入cmd回车，打开命令行界面，分别输入node -v 和nmp -v，看到类似如下结果就说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;node -v</div><div class=\"line\">v6.10.1</div><div class=\"line\">&gt;nmp -v</div><div class=\"line\">3.10.10</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在合适的地方建立一个文件夹，用于安装hexo框架和存放你的博客。我的文件夹是D:\\devsoft\\hexo。</p>\n<p>命令行切换到hexo目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Users\\tenny&gt;d:</div><div class=\"line\"></div><div class=\"line\">D:\\&gt;cd devsoft</div><div class=\"line\"></div><div class=\"line\">D:\\devsoft&gt;cd hexo</div><div class=\"line\"></div><div class=\"line\">D:\\devsoft\\hexo&gt;</div></pre></td></tr></table></figure></p>\n<p>输入如下命令安装hexo到当前目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div></pre></td></tr></table></figure></p>\n<p>命令行显示一系列安装详情，等待片刻，完成后，继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo --save</div></pre></td></tr></table></figure></p>\n<p>又会看到一堆信息，完成后，输入hexo -v检查下，看到类似如下信息，说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo -v</div><div class=\"line\">hexo: 3.2.2</div><div class=\"line\">hexo-cli: 1.0.2</div><div class=\"line\">os: Windows_NT 10.0.14393 win32 x64</div><div class=\"line\">http_parser: 2.7.0</div><div class=\"line\">node: 6.10.1</div><div class=\"line\">v8: 5.1.281.95</div><div class=\"line\">uv: 1.9.1</div><div class=\"line\">zlib: 1.2.8</div><div class=\"line\">ares: 1.10.1-DEV</div><div class=\"line\">icu: 58.2</div><div class=\"line\">modules: 48</div><div class=\"line\">openssl: 1.0.2k</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h2><p>命令行还在hexo根目录，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm -install</div></pre></td></tr></table></figure></p>\n<p>npm会自动安装需要的组件。之后输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>hexo扩展，用于将博客发布到github上。</p>\n<h1 id=\"体验博客\"><a href=\"#体验博客\" class=\"headerlink\" title=\"体验博客\"></a>体验博客</h1><h2 id=\"本地博客\"><a href=\"#本地博客\" class=\"headerlink\" title=\"本地博客\"></a>本地博客</h2><p>继续输入hexo g生成文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo g</div><div class=\"line\">INFO  Start processing</div><div class=\"line\">INFO  Files loaded in 2.28 s</div><div class=\"line\">INFO  Generated: search.xml</div><div class=\"line\">INFO  Generated: sitemap.xml</div><div class=\"line\">INFO  Generated: atom.xml</div><div class=\"line\">INFO  Generated: index.html</div><div class=\"line\">INFO  Generated: categories/index.html</div><div class=\"line\">INFO  Generated: about/index.html</div><div class=\"line\">INFO  Generated: tags/index.html</div><div class=\"line\">INFO  Generated: archives/index.html</div><div class=\"line\">INFO  Generated: favicon.ico</div><div class=\"line\">INFO  Generated: archives/2017/04/index.html</div><div class=\"line\">......   //省略的文件信息</div></pre></td></tr></table></figure></p>\n<p>再输入hexo s启动服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo s</div><div class=\"line\">INFO  Start processing</div><div class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p>\n<p>在浏览器中输入<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a> 就可以看到博客首页了。</p>\n<p>要停止服务，在命令行按Ctrl + C。</p>\n<h2 id=\"建立博客仓库\"><a href=\"#建立博客仓库\" class=\"headerlink\" title=\"建立博客仓库\"></a>建立博客仓库</h2><p>进入<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">https://github.com/</a> 登录自己的账号，新建一个仓库，命名为yourname.github.io(这个就是你博客的访问地址，一定要这种格式，否则无效)。例如我的tenny-peng.github.io。</p>\n<p>关于安装git和github可以参考我的<a href=\"../../03/Git简单教程/index.html\">Git简单教程</a>，这里就略过了。</p>\n<p>建立好自己的博客仓库(yourname.github.io)后，打开hexo根目录下的_config.yml，找到Deployment，修改成如下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:yourname/yourname.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>例如我的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:tenny-peng/tenny-peng.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写博客\"><a href=\"#编写博客\" class=\"headerlink\" title=\"编写博客\"></a>编写博客</h2><p>hexo根目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new title &quot;test&quot;</div></pre></td></tr></table></figure></p>\n<p>然后在D:\\devsoft\\hexo\\source_posts下就能看到test.md文件了。</p>\n<p>.md文件是用MarkDown语法写的，关于MarkDown语法，可以参考我的<a href=\"../../03/MarkDown基础语法/index.html\">MarkDown基础语法</a>。<br>MarkDown文件编辑器推荐用Atom，Atom是Github专门为程序员推出的一个跨平台文本编辑器。可以到<a href=\"https://atom.io/\" target=\"_blank\" rel=\"external\">https://atom.io/</a> 下载Atom，也可以找寻其他自己喜欢的MarkDown编辑器。</p>\n<h2 id=\"部署博客\"><a href=\"#部署博客\" class=\"headerlink\" title=\"部署博客\"></a>部署博客</h2><p>文章编辑完后，使用命令生成，部署<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g      //生成静态文件</div><div class=\"line\">hexo d      //部署到github上</div></pre></td></tr></table></figure></p>\n<p>也可以直接执行以下命令，相当于上面两条命令一起执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d -g     //部署前先生成</div></pre></td></tr></table></figure></p>\n<p>部署完成后，访问<a href=\"https://yourname.github.io\" target=\"_blank\" rel=\"external\">https://yourname.github.io</a> (例如我的<a href=\"https://tenny-peng.github.io\">https://tenny-peng.github.io</a>) ，就可以看到生成的文章。</p>\n<h1 id=\"使用主题\"><a href=\"#使用主题\" class=\"headerlink\" title=\"使用主题\"></a>使用主题</h1><p>主题可以使我们的博客更加个性化，更加美观，等等。<br>这里我使用了NexT主题，其他主题配置可参考其说明，下面以NexT为例。</p>\n<h2 id=\"安装NexT\"><a href=\"#安装NexT\" class=\"headerlink\" title=\"安装NexT\"></a>安装NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p>\n<p>如果你熟悉Git，建议你使用克隆最新版本的方式，之后的更新可以通过git pull来快速更新，而不用再次下载压缩包替换。这里我们使用git。</p>\n<p>命令行切换到hexo根目录，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>找到hexo根目录下的站点配置文件_config.yml，修改theme<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure></p>\n<h2 id=\"设定Scheme\"><a href=\"#设定Scheme\" class=\"headerlink\" title=\"设定Scheme\"></a>设定Scheme</h2><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>\n<ul>\n<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>\n<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>\n<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>\n</ul>\n<p>找到主题next目录下的_config.yml(<strong>注意</strong>：不是hexo根目录下的配置文件，根目录下的是全局博客配置，这个是针对某个主题的配置)，设定自己喜欢的Scheme，使用的去掉#，不使用的注释#。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Scheme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Schemes</div><div class=\"line\">#scheme: Muse</div><div class=\"line\">#scheme: Mist</div><div class=\"line\">scheme: Pisces</div></pre></td></tr></table></figure></p>\n<h2 id=\"站点设置\"><a href=\"#站点设置\" class=\"headerlink\" title=\"站点设置\"></a>站点设置</h2><p>编辑站点配置文件，设置博客标题，作者，语言等，更多配置可自行查询。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site</div><div class=\"line\">title: Tenny&apos;s Blog</div><div class=\"line\">author: Tenny Peng</div><div class=\"line\">language: zh-Hans     //简体中文</div></pre></td></tr></table></figure></p>\n<h2 id=\"菜单配置\"><a href=\"#菜单配置\" class=\"headerlink\" title=\"菜单配置\"></a>菜单配置</h2><p>编辑主题配置文件，设置首页分类标签等目录，更多配置可自行查询。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home: /</div><div class=\"line\">  categories: /categories</div><div class=\"line\">  about: /about</div><div class=\"line\">  archives: /archives</div><div class=\"line\">  tags: /tags</div></pre></td></tr></table></figure></p>\n<p>这里设定的目录都必须手动创建在hexo/source目录下，否则发布到github上是找不到的。</p>\n<h2 id=\"头像设置\"><a href=\"#头像设置\" class=\"headerlink\" title=\"头像设置\"></a>头像设置</h2><p>编辑主题配置文件，修改avatar(如没有可新建)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">avatar: /images/avatar.jpg</div></pre></td></tr></table></figure></p>\n<p>这里的图片需要放在主题目录下(themes/next/source/images/avatar.jpg)，而不是站点目录。</p>\n<h2 id=\"网站图标\"><a href=\"#网站图标\" class=\"headerlink\" title=\"网站图标\"></a>网站图标</h2><p>编辑主图配置文件，修改favicon<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">favicon: /favicon.ico</div></pre></td></tr></table></figure></p>\n<p>然后将favicon.ico放在hexo/source目录下即可。</p>\n<font size=\"5\">以上基本就完成了个人博客的搭建，更多信息可参考：</font>\n\n<p><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">史上最详细的Hexo博客搭建图文教程</a></p>\n<p><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">hexo官网</a></p>\n<p><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">next文档</a></p>\n","excerpt":"","more":"<p>Hexo是一款基于Node.js的静态博客框架，配合github可以搭建属于自己的博客。</p>\n<h1 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h1><h2 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h2><p>Hexo需要node.js支持，可以到<a href=\"http://nodejs.cn/download/\">node.js中文网</a>下载适合自己系统的安装包。安装也比较简单，一路next下去就可以了。</p>\n<p>安装完后win + r 输入cmd回车，打开命令行界面，分别输入node -v 和nmp -v，看到类似如下结果就说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;node -v</div><div class=\"line\">v6.10.1</div><div class=\"line\">&gt;nmp -v</div><div class=\"line\">3.10.10</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在合适的地方建立一个文件夹，用于安装hexo框架和存放你的博客。我的文件夹是D:\\devsoft\\hexo。</p>\n<p>命令行切换到hexo目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Users\\tenny&gt;d:</div><div class=\"line\"></div><div class=\"line\">D:\\&gt;cd devsoft</div><div class=\"line\"></div><div class=\"line\">D:\\devsoft&gt;cd hexo</div><div class=\"line\"></div><div class=\"line\">D:\\devsoft\\hexo&gt;</div></pre></td></tr></table></figure></p>\n<p>输入如下命令安装hexo到当前目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div></pre></td></tr></table></figure></p>\n<p>命令行显示一系列安装详情，等待片刻，完成后，继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo --save</div></pre></td></tr></table></figure></p>\n<p>又会看到一堆信息，完成后，输入hexo -v检查下，看到类似如下信息，说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo -v</div><div class=\"line\">hexo: 3.2.2</div><div class=\"line\">hexo-cli: 1.0.2</div><div class=\"line\">os: Windows_NT 10.0.14393 win32 x64</div><div class=\"line\">http_parser: 2.7.0</div><div class=\"line\">node: 6.10.1</div><div class=\"line\">v8: 5.1.281.95</div><div class=\"line\">uv: 1.9.1</div><div class=\"line\">zlib: 1.2.8</div><div class=\"line\">ares: 1.10.1-DEV</div><div class=\"line\">icu: 58.2</div><div class=\"line\">modules: 48</div><div class=\"line\">openssl: 1.0.2k</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h2><p>命令行还在hexo根目录，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>继续输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm -install</div></pre></td></tr></table></figure></p>\n<p>npm会自动安装需要的组件。之后输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>hexo扩展，用于将博客发布到github上。</p>\n<h1 id=\"体验博客\"><a href=\"#体验博客\" class=\"headerlink\" title=\"体验博客\"></a>体验博客</h1><h2 id=\"本地博客\"><a href=\"#本地博客\" class=\"headerlink\" title=\"本地博客\"></a>本地博客</h2><p>继续输入hexo g生成文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo g</div><div class=\"line\">INFO  Start processing</div><div class=\"line\">INFO  Files loaded in 2.28 s</div><div class=\"line\">INFO  Generated: search.xml</div><div class=\"line\">INFO  Generated: sitemap.xml</div><div class=\"line\">INFO  Generated: atom.xml</div><div class=\"line\">INFO  Generated: index.html</div><div class=\"line\">INFO  Generated: categories/index.html</div><div class=\"line\">INFO  Generated: about/index.html</div><div class=\"line\">INFO  Generated: tags/index.html</div><div class=\"line\">INFO  Generated: archives/index.html</div><div class=\"line\">INFO  Generated: favicon.ico</div><div class=\"line\">INFO  Generated: archives/2017/04/index.html</div><div class=\"line\">......   //省略的文件信息</div></pre></td></tr></table></figure></p>\n<p>再输入hexo s启动服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\devsoft\\hexo&gt;hexo s</div><div class=\"line\">INFO  Start processing</div><div class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p>\n<p>在浏览器中输入<a href=\"http://localhost:4000/\">http://localhost:4000/</a> 就可以看到博客首页了。</p>\n<p>要停止服务，在命令行按Ctrl + C。</p>\n<h2 id=\"建立博客仓库\"><a href=\"#建立博客仓库\" class=\"headerlink\" title=\"建立博客仓库\"></a>建立博客仓库</h2><p>进入<a href=\"https://github.com/\">https://github.com/</a> 登录自己的账号，新建一个仓库，命名为yourname.github.io(这个就是你博客的访问地址，一定要这种格式，否则无效)。例如我的tenny-peng.github.io。</p>\n<p>关于安装git和github可以参考我的<a href=\"../../03/Git简单教程/index.html\">Git简单教程</a>，这里就略过了。</p>\n<p>建立好自己的博客仓库(yourname.github.io)后，打开hexo根目录下的_config.yml，找到Deployment，修改成如下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:yourname/yourname.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>例如我的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:tenny-peng/tenny-peng.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写博客\"><a href=\"#编写博客\" class=\"headerlink\" title=\"编写博客\"></a>编写博客</h2><p>hexo根目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new title &quot;test&quot;</div></pre></td></tr></table></figure></p>\n<p>然后在D:\\devsoft\\hexo\\source_posts下就能看到test.md文件了。</p>\n<p>.md文件是用MarkDown语法写的，关于MarkDown语法，可以参考我的<a href=\"../../03/MarkDown基础语法/index.html\">MarkDown基础语法</a>。<br>MarkDown文件编辑器推荐用Atom，Atom是Github专门为程序员推出的一个跨平台文本编辑器。可以到<a href=\"https://atom.io/\">https://atom.io/</a> 下载Atom，也可以找寻其他自己喜欢的MarkDown编辑器。</p>\n<h2 id=\"部署博客\"><a href=\"#部署博客\" class=\"headerlink\" title=\"部署博客\"></a>部署博客</h2><p>文章编辑完后，使用命令生成，部署<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g      //生成静态文件</div><div class=\"line\">hexo d      //部署到github上</div></pre></td></tr></table></figure></p>\n<p>也可以直接执行以下命令，相当于上面两条命令一起执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d -g     //部署前先生成</div></pre></td></tr></table></figure></p>\n<p>部署完成后，访问<a href=\"https://yourname.github.io\">https://yourname.github.io</a> (例如我的<a href=\"https://tenny-peng.github.io\">https://tenny-peng.github.io</a>) ，就可以看到生成的文章。</p>\n<h1 id=\"使用主题\"><a href=\"#使用主题\" class=\"headerlink\" title=\"使用主题\"></a>使用主题</h1><p>主题可以使我们的博客更加个性化，更加美观，等等。<br>这里我使用了NexT主题，其他主题配置可参考其说明，下面以NexT为例。</p>\n<h2 id=\"安装NexT\"><a href=\"#安装NexT\" class=\"headerlink\" title=\"安装NexT\"></a>安装NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p>\n<p>如果你熟悉Git，建议你使用克隆最新版本的方式，之后的更新可以通过git pull来快速更新，而不用再次下载压缩包替换。这里我们使用git。</p>\n<p>命令行切换到hexo根目录，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>找到hexo根目录下的站点配置文件_config.yml，修改theme<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure></p>\n<h2 id=\"设定Scheme\"><a href=\"#设定Scheme\" class=\"headerlink\" title=\"设定Scheme\"></a>设定Scheme</h2><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>\n<ul>\n<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>\n<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>\n<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>\n</ul>\n<p>找到主题next目录下的_config.yml(<strong>注意</strong>：不是hexo根目录下的配置文件，根目录下的是全局博客配置，这个是针对某个主题的配置)，设定自己喜欢的Scheme，使用的去掉#，不使用的注释#。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Scheme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Schemes</div><div class=\"line\">#scheme: Muse</div><div class=\"line\">#scheme: Mist</div><div class=\"line\">scheme: Pisces</div></pre></td></tr></table></figure></p>\n<h2 id=\"站点设置\"><a href=\"#站点设置\" class=\"headerlink\" title=\"站点设置\"></a>站点设置</h2><p>编辑站点配置文件，设置博客标题，作者，语言等，更多配置可自行查询。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site</div><div class=\"line\">title: Tenny&apos;s Blog</div><div class=\"line\">author: Tenny Peng</div><div class=\"line\">language: zh-Hans     //简体中文</div></pre></td></tr></table></figure></p>\n<h2 id=\"菜单配置\"><a href=\"#菜单配置\" class=\"headerlink\" title=\"菜单配置\"></a>菜单配置</h2><p>编辑主题配置文件，设置首页分类标签等目录，更多配置可自行查询。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home: /</div><div class=\"line\">  categories: /categories</div><div class=\"line\">  about: /about</div><div class=\"line\">  archives: /archives</div><div class=\"line\">  tags: /tags</div></pre></td></tr></table></figure></p>\n<p>这里设定的目录都必须手动创建在hexo/source目录下，否则发布到github上是找不到的。</p>\n<h2 id=\"头像设置\"><a href=\"#头像设置\" class=\"headerlink\" title=\"头像设置\"></a>头像设置</h2><p>编辑主题配置文件，修改avatar(如没有可新建)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">avatar: /images/avatar.jpg</div></pre></td></tr></table></figure></p>\n<p>这里的图片需要放在主题目录下(themes/next/source/images/avatar.jpg)，而不是站点目录。</p>\n<h2 id=\"网站图标\"><a href=\"#网站图标\" class=\"headerlink\" title=\"网站图标\"></a>网站图标</h2><p>编辑主图配置文件，修改favicon<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">favicon: /favicon.ico</div></pre></td></tr></table></figure></p>\n<p>然后将favicon.ico放在hexo/source目录下即可。</p>\n<font size=\"5\">以上基本就完成了个人博客的搭建，更多信息可参考：</font>\n\n<p><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\">史上最详细的Hexo博客搭建图文教程</a></p>\n<p><a href=\"https://hexo.io/\">hexo官网</a></p>\n<p><a href=\"http://theme-next.iissnan.com/getting-started.html\">next文档</a></p>\n"},{"title":"Hello World!","date":"2017-04-08T09:34:50.000Z","_content":"\n# 开始动手，Hello World！！\n是时候编写你自己的第一个Java应用了。\n\n## 下载JDK\n你可以到这里[下载](http://www.oracle.com/technetwork/java/javase/downloads/index.html)JDK并安装。\n\n注意：下载的是**JDK**，而*不是*JRE。JRE是java运行环境，用于运行java程序；JDK是java开发工具包，用于开发java程序，其中包含了JRE，所以我们下载JDK就好。\n\n安装完成后，win + r 输入cmd，打开命令行窗口，输入\"java -version\"，看到类似如下结果就说明安装成功了。\n```\nC:\\Users\\Administrator>java -version\njava version \"1.8.0_102\"\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n```\n\n## 编辑工具\n这里用windows自带的记事本就可以。\n\n## 创建源文件\n在D盘新建一个目录myapplication(你也可以自己选择其他盘符及目录)，新建一个记事本文档，将下面代码粘贴或手动输入到文本里：\n```\n/**\n * The HelloWorldApp class implements an application that\n * simply prints \"Hello World!\" to standard output.\n */\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Display the string.\n    }\n}\n```\n注意：Java严格**区分大小写**，HelloWorldApp不等于helloWorldapp。\n\n将该文件保存为HelloWorldApp.java。\n\n## 编译\nwin + r，输入cmd，打开命令行窗口，输入\n```\ncd d:\\myapplication\n```\n切换到HelloWorldApp.java文件所在目录。\n\n切换目录使用如下命令：\n```\nC:\\>D:    //切换到D盘根目录\n\nD:\\>cd myapplication    //切换到当前目录下的myapplication目录\n\nD:\\myapplication>     //完成切换。。\n```\n\n继续输入:\n```\njavac HelloWorldApp.java\n```\n如果没有任何信息，应该就编译成功了，查看myapplication目录，发现多出一个HelloWorldApp.class文件，这个就是字节码文件。  \n如果出现错误提示，请检查文件名和文件内容是否和上述一致。\n\n## 运行\n输入java HelloWorldApp运行程序。\n```\nD:\\myapplication>java HelloWorldApp\nHello World!\n```\n看到打印出了\"Hello World!\"说明我们得程序运行成功了。  \n如果提示错误，请检查文件名和文件内容是否和上述一致。\n\n至此，第一个java应用程序就完成了。\n","source":"_posts/HelloWorld.md","raw":"---\ntitle: Hello World!\ndate: 2017-04-08 17:34:50\ntags: [java]\ncategories: Java学习记录\n---\n\n# 开始动手，Hello World！！\n是时候编写你自己的第一个Java应用了。\n\n## 下载JDK\n你可以到这里[下载](http://www.oracle.com/technetwork/java/javase/downloads/index.html)JDK并安装。\n\n注意：下载的是**JDK**，而*不是*JRE。JRE是java运行环境，用于运行java程序；JDK是java开发工具包，用于开发java程序，其中包含了JRE，所以我们下载JDK就好。\n\n安装完成后，win + r 输入cmd，打开命令行窗口，输入\"java -version\"，看到类似如下结果就说明安装成功了。\n```\nC:\\Users\\Administrator>java -version\njava version \"1.8.0_102\"\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n```\n\n## 编辑工具\n这里用windows自带的记事本就可以。\n\n## 创建源文件\n在D盘新建一个目录myapplication(你也可以自己选择其他盘符及目录)，新建一个记事本文档，将下面代码粘贴或手动输入到文本里：\n```\n/**\n * The HelloWorldApp class implements an application that\n * simply prints \"Hello World!\" to standard output.\n */\nclass HelloWorldApp {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\"); // Display the string.\n    }\n}\n```\n注意：Java严格**区分大小写**，HelloWorldApp不等于helloWorldapp。\n\n将该文件保存为HelloWorldApp.java。\n\n## 编译\nwin + r，输入cmd，打开命令行窗口，输入\n```\ncd d:\\myapplication\n```\n切换到HelloWorldApp.java文件所在目录。\n\n切换目录使用如下命令：\n```\nC:\\>D:    //切换到D盘根目录\n\nD:\\>cd myapplication    //切换到当前目录下的myapplication目录\n\nD:\\myapplication>     //完成切换。。\n```\n\n继续输入:\n```\njavac HelloWorldApp.java\n```\n如果没有任何信息，应该就编译成功了，查看myapplication目录，发现多出一个HelloWorldApp.class文件，这个就是字节码文件。  \n如果出现错误提示，请检查文件名和文件内容是否和上述一致。\n\n## 运行\n输入java HelloWorldApp运行程序。\n```\nD:\\myapplication>java HelloWorldApp\nHello World!\n```\n看到打印出了\"Hello World!\"说明我们得程序运行成功了。  \n如果提示错误，请检查文件名和文件内容是否和上述一致。\n\n至此，第一个java应用程序就完成了。\n","slug":"HelloWorld","published":1,"updated":"2017-04-21T03:15:47.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0ds000fiko07jkvwp04","content":"<h1 id=\"开始动手，Hello-World！！\"><a href=\"#开始动手，Hello-World！！\" class=\"headerlink\" title=\"开始动手，Hello World！！\"></a>开始动手，Hello World！！</h1><p>是时候编写你自己的第一个Java应用了。</p>\n<h2 id=\"下载JDK\"><a href=\"#下载JDK\" class=\"headerlink\" title=\"下载JDK\"></a>下载JDK</h2><p>你可以到这里<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"external\">下载</a>JDK并安装。</p>\n<p>注意：下载的是<strong>JDK</strong>，而<em>不是</em>JRE。JRE是java运行环境，用于运行java程序；JDK是java开发工具包，用于开发java程序，其中包含了JRE，所以我们下载JDK就好。</p>\n<p>安装完成后，win + r 输入cmd，打开命令行窗口，输入”java -version”，看到类似如下结果就说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Users\\Administrator&gt;java -version</div><div class=\"line\">java version &quot;1.8.0_102&quot;</div><div class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_102-b14)</div><div class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)</div></pre></td></tr></table></figure></p>\n<h2 id=\"编辑工具\"><a href=\"#编辑工具\" class=\"headerlink\" title=\"编辑工具\"></a>编辑工具</h2><p>这里用windows自带的记事本就可以。</p>\n<h2 id=\"创建源文件\"><a href=\"#创建源文件\" class=\"headerlink\" title=\"创建源文件\"></a>创建源文件</h2><p>在D盘新建一个目录myapplication(你也可以自己选择其他盘符及目录)，新建一个记事本文档，将下面代码粘贴或手动输入到文本里：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * The HelloWorldApp class implements an application that</div><div class=\"line\"> * simply prints &quot;Hello World!&quot; to standard output.</div><div class=\"line\"> */</div><div class=\"line\">class HelloWorldApp &#123;</div><div class=\"line\">    public static void main(String[] args) &#123;</div><div class=\"line\">        System.out.println(&quot;Hello World!&quot;); // Display the string.</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>注意：Java严格<strong>区分大小写</strong>，HelloWorldApp不等于helloWorldapp。</p>\n<p>将该文件保存为HelloWorldApp.java。</p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>win + r，输入cmd，打开命令行窗口，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd d:\\myapplication</div></pre></td></tr></table></figure></p>\n<p>切换到HelloWorldApp.java文件所在目录。</p>\n<p>切换目录使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\&gt;D:    //切换到D盘根目录</div><div class=\"line\"></div><div class=\"line\">D:\\&gt;cd myapplication    //切换到当前目录下的myapplication目录</div><div class=\"line\"></div><div class=\"line\">D:\\myapplication&gt;     //完成切换。。</div></pre></td></tr></table></figure></p>\n<p>继续输入:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">javac HelloWorldApp.java</div></pre></td></tr></table></figure></p>\n<p>如果没有任何信息，应该就编译成功了，查看myapplication目录，发现多出一个HelloWorldApp.class文件，这个就是字节码文件。<br>如果出现错误提示，请检查文件名和文件内容是否和上述一致。</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>输入java HelloWorldApp运行程序。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\myapplication&gt;java HelloWorldApp</div><div class=\"line\">Hello World!</div></pre></td></tr></table></figure></p>\n<p>看到打印出了”Hello World!”说明我们得程序运行成功了。<br>如果提示错误，请检查文件名和文件内容是否和上述一致。</p>\n<p>至此，第一个java应用程序就完成了。</p>\n","excerpt":"","more":"<h1 id=\"开始动手，Hello-World！！\"><a href=\"#开始动手，Hello-World！！\" class=\"headerlink\" title=\"开始动手，Hello World！！\"></a>开始动手，Hello World！！</h1><p>是时候编写你自己的第一个Java应用了。</p>\n<h2 id=\"下载JDK\"><a href=\"#下载JDK\" class=\"headerlink\" title=\"下载JDK\"></a>下载JDK</h2><p>你可以到这里<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">下载</a>JDK并安装。</p>\n<p>注意：下载的是<strong>JDK</strong>，而<em>不是</em>JRE。JRE是java运行环境，用于运行java程序；JDK是java开发工具包，用于开发java程序，其中包含了JRE，所以我们下载JDK就好。</p>\n<p>安装完成后，win + r 输入cmd，打开命令行窗口，输入”java -version”，看到类似如下结果就说明安装成功了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Users\\Administrator&gt;java -version</div><div class=\"line\">java version &quot;1.8.0_102&quot;</div><div class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_102-b14)</div><div class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)</div></pre></td></tr></table></figure></p>\n<h2 id=\"编辑工具\"><a href=\"#编辑工具\" class=\"headerlink\" title=\"编辑工具\"></a>编辑工具</h2><p>这里用windows自带的记事本就可以。</p>\n<h2 id=\"创建源文件\"><a href=\"#创建源文件\" class=\"headerlink\" title=\"创建源文件\"></a>创建源文件</h2><p>在D盘新建一个目录myapplication(你也可以自己选择其他盘符及目录)，新建一个记事本文档，将下面代码粘贴或手动输入到文本里：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * The HelloWorldApp class implements an application that</div><div class=\"line\"> * simply prints &quot;Hello World!&quot; to standard output.</div><div class=\"line\"> */</div><div class=\"line\">class HelloWorldApp &#123;</div><div class=\"line\">    public static void main(String[] args) &#123;</div><div class=\"line\">        System.out.println(&quot;Hello World!&quot;); // Display the string.</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>注意：Java严格<strong>区分大小写</strong>，HelloWorldApp不等于helloWorldapp。</p>\n<p>将该文件保存为HelloWorldApp.java。</p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>win + r，输入cmd，打开命令行窗口，输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd d:\\myapplication</div></pre></td></tr></table></figure></p>\n<p>切换到HelloWorldApp.java文件所在目录。</p>\n<p>切换目录使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\&gt;D:    //切换到D盘根目录</div><div class=\"line\"></div><div class=\"line\">D:\\&gt;cd myapplication    //切换到当前目录下的myapplication目录</div><div class=\"line\"></div><div class=\"line\">D:\\myapplication&gt;     //完成切换。。</div></pre></td></tr></table></figure></p>\n<p>继续输入:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">javac HelloWorldApp.java</div></pre></td></tr></table></figure></p>\n<p>如果没有任何信息，应该就编译成功了，查看myapplication目录，发现多出一个HelloWorldApp.class文件，这个就是字节码文件。<br>如果出现错误提示，请检查文件名和文件内容是否和上述一致。</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>输入java HelloWorldApp运行程序。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">D:\\myapplication&gt;java HelloWorldApp</div><div class=\"line\">Hello World!</div></pre></td></tr></table></figure></p>\n<p>看到打印出了”Hello World!”说明我们得程序运行成功了。<br>如果提示错误，请检查文件名和文件内容是否和上述一致。</p>\n<p>至此，第一个java应用程序就完成了。</p>\n"},{"title":"hexo-next主题添加打赏功能","date":"2017-04-05T06:38:24.000Z","_content":"next主题集成了打赏功能，使用起来比较简单。\n\n首先获取微信收款二维码和支付宝收款二维码：\n\n微信：点击右上角的加号\"+\"，点击\"收付款\"，点击\"我要收款\"，就可以看到自己的收款二维码了。还可以点击\"设置金额\"，之后保存图片(名字可修改为wechatpay.png)。\n\n支付宝： 同理，点击右上角的加号\"+\"，点击\"收钱\",出现二维码，也可以设置金额，之后保存图片(名字可修改为ailpay.jpg)。\n\n我们可以在source目录下建立一个images文件夹，将上面保存的图片放入。\n\n微信和支付宝生成的二维码都有外框，不喜欢外框的话可以利用美图秀秀等软件进行剪裁。选定宽度和高度并勾选锁定剪裁尺寸，一般都是剪裁一个正方形，将剪裁框拖到合适地方，点击\"剪裁按钮\"，再Ctrl + s 保存即可（支付宝图片同理）。\n![剪裁图片](hexo-next主题添加打赏功能/20170408140902.png)\n\n找到主题next下的配置文件_config.yml，添加信息如下：\n```\n# reward\nreward_comment: 如果觉得我的文章对您有用，请随意打赏。您的支持将鼓励我继续创作！\nwechatpay: /images/wechatpay.png\nalipay: /images/alipay.jpg\n```\nhexo发布，文章下面就会出现一个赏字，点开效果如下：\n![打赏效果](hexo-next主题添加打赏功能/20170405151647.png)\n\n以上就成功添加了打赏功能(虽然基本不会有人打赏。。。)\n","source":"_posts/hexo-next主题添加打赏功能.md","raw":"---\ntitle: hexo-next主题添加打赏功能\ndate: 2017-04-05 14:38:24\ntags: [hexo,next]\ncategories: hexo+github博客\n---\nnext主题集成了打赏功能，使用起来比较简单。\n\n首先获取微信收款二维码和支付宝收款二维码：\n\n微信：点击右上角的加号\"+\"，点击\"收付款\"，点击\"我要收款\"，就可以看到自己的收款二维码了。还可以点击\"设置金额\"，之后保存图片(名字可修改为wechatpay.png)。\n\n支付宝： 同理，点击右上角的加号\"+\"，点击\"收钱\",出现二维码，也可以设置金额，之后保存图片(名字可修改为ailpay.jpg)。\n\n我们可以在source目录下建立一个images文件夹，将上面保存的图片放入。\n\n微信和支付宝生成的二维码都有外框，不喜欢外框的话可以利用美图秀秀等软件进行剪裁。选定宽度和高度并勾选锁定剪裁尺寸，一般都是剪裁一个正方形，将剪裁框拖到合适地方，点击\"剪裁按钮\"，再Ctrl + s 保存即可（支付宝图片同理）。\n![剪裁图片](hexo-next主题添加打赏功能/20170408140902.png)\n\n找到主题next下的配置文件_config.yml，添加信息如下：\n```\n# reward\nreward_comment: 如果觉得我的文章对您有用，请随意打赏。您的支持将鼓励我继续创作！\nwechatpay: /images/wechatpay.png\nalipay: /images/alipay.jpg\n```\nhexo发布，文章下面就会出现一个赏字，点开效果如下：\n![打赏效果](hexo-next主题添加打赏功能/20170405151647.png)\n\n以上就成功添加了打赏功能(虽然基本不会有人打赏。。。)\n","slug":"hexo-next主题添加打赏功能","published":1,"updated":"2017-04-21T06:10:49.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0dw000jiko0i8c112kl","content":"<p>next主题集成了打赏功能，使用起来比较简单。</p>\n<p>首先获取微信收款二维码和支付宝收款二维码：</p>\n<p>微信：点击右上角的加号”+”，点击”收付款”，点击”我要收款”，就可以看到自己的收款二维码了。还可以点击”设置金额”，之后保存图片(名字可修改为wechatpay.png)。</p>\n<p>支付宝： 同理，点击右上角的加号”+”，点击”收钱”,出现二维码，也可以设置金额，之后保存图片(名字可修改为ailpay.jpg)。</p>\n<p>我们可以在source目录下建立一个images文件夹，将上面保存的图片放入。</p>\n<p>微信和支付宝生成的二维码都有外框，不喜欢外框的话可以利用美图秀秀等软件进行剪裁。选定宽度和高度并勾选锁定剪裁尺寸，一般都是剪裁一个正方形，将剪裁框拖到合适地方，点击”剪裁按钮”，再Ctrl + s 保存即可（支付宝图片同理）。<br><img src=\"/2017/04/05/hexo-next主题添加打赏功能/20170408140902.png\" alt=\"剪裁图片\"></p>\n<p>找到主题next下的配置文件_config.yml，添加信息如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># reward</div><div class=\"line\">reward_comment: 如果觉得我的文章对您有用，请随意打赏。您的支持将鼓励我继续创作！</div><div class=\"line\">wechatpay: /images/wechatpay.png</div><div class=\"line\">alipay: /images/alipay.jpg</div></pre></td></tr></table></figure></p>\n<p>hexo发布，文章下面就会出现一个赏字，点开效果如下：<br><img src=\"/2017/04/05/hexo-next主题添加打赏功能/20170405151647.png\" alt=\"打赏效果\"></p>\n<p>以上就成功添加了打赏功能(虽然基本不会有人打赏。。。)</p>\n","excerpt":"","more":"<p>next主题集成了打赏功能，使用起来比较简单。</p>\n<p>首先获取微信收款二维码和支付宝收款二维码：</p>\n<p>微信：点击右上角的加号”+”，点击”收付款”，点击”我要收款”，就可以看到自己的收款二维码了。还可以点击”设置金额”，之后保存图片(名字可修改为wechatpay.png)。</p>\n<p>支付宝： 同理，点击右上角的加号”+”，点击”收钱”,出现二维码，也可以设置金额，之后保存图片(名字可修改为ailpay.jpg)。</p>\n<p>我们可以在source目录下建立一个images文件夹，将上面保存的图片放入。</p>\n<p>微信和支付宝生成的二维码都有外框，不喜欢外框的话可以利用美图秀秀等软件进行剪裁。选定宽度和高度并勾选锁定剪裁尺寸，一般都是剪裁一个正方形，将剪裁框拖到合适地方，点击”剪裁按钮”，再Ctrl + s 保存即可（支付宝图片同理）。<br><img src=\"/2017/04/05/hexo-next主题添加打赏功能/20170408140902.png\" alt=\"剪裁图片\"></p>\n<p>找到主题next下的配置文件_config.yml，添加信息如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># reward</div><div class=\"line\">reward_comment: 如果觉得我的文章对您有用，请随意打赏。您的支持将鼓励我继续创作！</div><div class=\"line\">wechatpay: /images/wechatpay.png</div><div class=\"line\">alipay: /images/alipay.jpg</div></pre></td></tr></table></figure></p>\n<p>hexo发布，文章下面就会出现一个赏字，点开效果如下：<br><img src=\"/2017/04/05/hexo-next主题添加打赏功能/20170405151647.png\" alt=\"打赏效果\"></p>\n<p>以上就成功添加了打赏功能(虽然基本不会有人打赏。。。)</p>\n"},{"layout":"title","title":"spring加载多个xml遇到的问题","date":"2017-04-27T01:36:25.000Z","_content":"\n## 问题出现\n之前学习spring整合redis，spring整合activemq，单独测试没有问题。后来想把他们一起部署启动，结果报错\n```\nCould not resolve placeholder 'redis.maxTotal' in string value \"${redis.maxTotal}\"\n```\n\n## 查找原因\n查了一会找到了原因。因为我的spring-redis.xml和spring-activemq.xml都写了一个\n```\n<context:property-placeholder location=\"classpath:conf/xxx.properties\" />\n```\n而Spring容器采用反射扫描的发现机制，在探测到Spring容器中有一个org.springframework.beans.factory.config.PropertyPlaceholderConfigurer的Bean就会停止对剩余PropertyPlaceholderConfigurer的扫描。\n\n而<context:property-placeholder/>这个基于命名空间的配置，其实内部就是创建一个PropertyPlaceholderConfigurer Bean而已。换句话说，即Spring容器仅允许**最多定义一个**PropertyPlaceholderConfigurer(或<context:property-placeholder/>)，其余的会被Spring**忽略**掉（其实Spring如果提供一个警告就好了）。\n\n这样的话，其实就只加载了第一个properties文件，后面的并没有加载，自然也就找不到'redis.maxTotal'了。\n\n## 尝试解决\n按照网上的办法，去掉每个xml单独的context:property-placeholder，再写一个xml文件一次性加载所有资源文件，并引入之前单独的所有xml文件。\n\n先将web文件的\n```\ncontext-param>\n\t<param-name>contextConfigLocation</param-name>\n\t<param-value>\n        classpath:spring-activemq.xml,\n        classpath:spring-redis.xml\n\t</param-value>\n</context-param>\n```\n改为\n```\ncontext-param>\n\t\t<param-name>contextConfigLocation</param-name>\n\t\t<param-value>\n\t\t\tclasspath:applicationContext.xml\n\t\t</param-value>\n\t</context-param>\n```\n编写这个applicationContext.xml如下：\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:p=\"http://www.springframework.org/schema/p\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n\t\t\t\t\t\thttp://www.springframework.org/schema/context\n\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\">\n\n    <context:property-placeholder location=\"classpath:conf/*.properties\" />\n\n\t<import resource=\"activemq/spring-activemq.xml\" />\n\n\t<import resource=\"redis/spring-redis.xml\" />\n\n</beans>\n```\n这样部署启动应该就可以了。\n\n## 新的问题\n按道理应该启动成功，不过我这里又遇到另一个问题\n```\nCannot convert value of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found\n```\n\n## 再查原因\n查看自己的spring-redis.xml\n```\n<bean id=\"connectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\np:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n</bean>\n\n<bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n    <property name=\"connectionFactory\" ref=\"connectionFactory\" />\n    <property name=\"keySerializer\" ref=\"keySerializer\" />\n</bean>\n```\n并没有需要'javax.jms.ConnectionFactory'，根据问题在网上搜索，在一篇博客看到了'redis也有个bean叫connectionFactory'的字眼。于是想到自己应该也是bean name重复了。查看spring-activemq.xml\n```\n<bean id=\"connectionFactory\" class=\"org.springframework.jms.connection.SingleConnectionFactory\">  \n    <property name=\"targetConnectionFactory\" ref=\"pooledConnectionFactory\"/>  \n</bean>\n\n<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  \n<bean id=\"jmsTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">  \n    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>  \n    <property name=\"defaultDestinationName\" value=\"${activemq.queue.name}\"/>  \n</bean>\n```\n\n## 解决问题\n问题就很明显了，spring-redis.xml和spring-activemq.xml都有connectionFactory这个bean。于是修改了spring-redis.xml中的bean name\n```\n<bean id=\"redisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\np:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n</bean>\n\n<bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n    <property name=\"connectionFactory\" ref=\"redisConnectionFactory\" />\n    <property name=\"keySerializer\" ref=\"keySerializer\" />\n</bean>\n```\n再次部署启动，OK。\n\n参考博客：http://www.iteye.com/topic/1131688  \n　　　　　http://blog.csdn.net/AlbertFly/article/details/51503079\n","source":"_posts/spring加载多个xml遇到的问题.md","raw":"---\nlayout: title\ntitle: spring加载多个xml遇到的问题\ndate: 2017-04-27 09:36:25\ntags: [spring]\ncategories: spring\n---\n\n## 问题出现\n之前学习spring整合redis，spring整合activemq，单独测试没有问题。后来想把他们一起部署启动，结果报错\n```\nCould not resolve placeholder 'redis.maxTotal' in string value \"${redis.maxTotal}\"\n```\n\n## 查找原因\n查了一会找到了原因。因为我的spring-redis.xml和spring-activemq.xml都写了一个\n```\n<context:property-placeholder location=\"classpath:conf/xxx.properties\" />\n```\n而Spring容器采用反射扫描的发现机制，在探测到Spring容器中有一个org.springframework.beans.factory.config.PropertyPlaceholderConfigurer的Bean就会停止对剩余PropertyPlaceholderConfigurer的扫描。\n\n而<context:property-placeholder/>这个基于命名空间的配置，其实内部就是创建一个PropertyPlaceholderConfigurer Bean而已。换句话说，即Spring容器仅允许**最多定义一个**PropertyPlaceholderConfigurer(或<context:property-placeholder/>)，其余的会被Spring**忽略**掉（其实Spring如果提供一个警告就好了）。\n\n这样的话，其实就只加载了第一个properties文件，后面的并没有加载，自然也就找不到'redis.maxTotal'了。\n\n## 尝试解决\n按照网上的办法，去掉每个xml单独的context:property-placeholder，再写一个xml文件一次性加载所有资源文件，并引入之前单独的所有xml文件。\n\n先将web文件的\n```\ncontext-param>\n\t<param-name>contextConfigLocation</param-name>\n\t<param-value>\n        classpath:spring-activemq.xml,\n        classpath:spring-redis.xml\n\t</param-value>\n</context-param>\n```\n改为\n```\ncontext-param>\n\t\t<param-name>contextConfigLocation</param-name>\n\t\t<param-value>\n\t\t\tclasspath:applicationContext.xml\n\t\t</param-value>\n\t</context-param>\n```\n编写这个applicationContext.xml如下：\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:p=\"http://www.springframework.org/schema/p\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n\t\t\t\t\t\thttp://www.springframework.org/schema/context\n\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\">\n\n    <context:property-placeholder location=\"classpath:conf/*.properties\" />\n\n\t<import resource=\"activemq/spring-activemq.xml\" />\n\n\t<import resource=\"redis/spring-redis.xml\" />\n\n</beans>\n```\n这样部署启动应该就可以了。\n\n## 新的问题\n按道理应该启动成功，不过我这里又遇到另一个问题\n```\nCannot convert value of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found\n```\n\n## 再查原因\n查看自己的spring-redis.xml\n```\n<bean id=\"connectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\np:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n</bean>\n\n<bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n    <property name=\"connectionFactory\" ref=\"connectionFactory\" />\n    <property name=\"keySerializer\" ref=\"keySerializer\" />\n</bean>\n```\n并没有需要'javax.jms.ConnectionFactory'，根据问题在网上搜索，在一篇博客看到了'redis也有个bean叫connectionFactory'的字眼。于是想到自己应该也是bean name重复了。查看spring-activemq.xml\n```\n<bean id=\"connectionFactory\" class=\"org.springframework.jms.connection.SingleConnectionFactory\">  \n    <property name=\"targetConnectionFactory\" ref=\"pooledConnectionFactory\"/>  \n</bean>\n\n<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  \n<bean id=\"jmsTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">  \n    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>  \n    <property name=\"defaultDestinationName\" value=\"${activemq.queue.name}\"/>  \n</bean>\n```\n\n## 解决问题\n问题就很明显了，spring-redis.xml和spring-activemq.xml都有connectionFactory这个bean。于是修改了spring-redis.xml中的bean name\n```\n<bean id=\"redisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\np:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n</bean>\n\n<bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n    <property name=\"connectionFactory\" ref=\"redisConnectionFactory\" />\n    <property name=\"keySerializer\" ref=\"keySerializer\" />\n</bean>\n```\n再次部署启动，OK。\n\n参考博客：http://www.iteye.com/topic/1131688  \n　　　　　http://blog.csdn.net/AlbertFly/article/details/51503079\n","slug":"spring加载多个xml遇到的问题","published":1,"updated":"2017-04-27T02:33:40.069Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0e0000liko0puxv7h54","content":"<h2 id=\"问题出现\"><a href=\"#问题出现\" class=\"headerlink\" title=\"问题出现\"></a>问题出现</h2><p>之前学习spring整合redis，spring整合activemq，单独测试没有问题。后来想把他们一起部署启动，结果报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Could not resolve placeholder &apos;redis.maxTotal&apos; in string value &quot;$&#123;redis.maxTotal&#125;&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查找原因\"><a href=\"#查找原因\" class=\"headerlink\" title=\"查找原因\"></a>查找原因</h2><p>查了一会找到了原因。因为我的spring-redis.xml和spring-activemq.xml都写了一个<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;context:property-placeholder location=&quot;classpath:conf/xxx.properties&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>而Spring容器采用反射扫描的发现机制，在探测到Spring容器中有一个org.springframework.beans.factory.config.PropertyPlaceholderConfigurer的Bean就会停止对剩余PropertyPlaceholderConfigurer的扫描。</p>\n<p>而<context:property-placeholder>这个基于命名空间的配置，其实内部就是创建一个PropertyPlaceholderConfigurer Bean而已。换句话说，即Spring容器仅允许<strong>最多定义一个</strong>PropertyPlaceholderConfigurer(或<context:property-placeholder>)，其余的会被Spring<strong>忽略</strong>掉（其实Spring如果提供一个警告就好了）。</context:property-placeholder></context:property-placeholder></p>\n<p>这样的话，其实就只加载了第一个properties文件，后面的并没有加载，自然也就找不到’redis.maxTotal’了。</p>\n<h2 id=\"尝试解决\"><a href=\"#尝试解决\" class=\"headerlink\" title=\"尝试解决\"></a>尝试解决</h2><p>按照网上的办法，去掉每个xml单独的context:property-placeholder，再写一个xml文件一次性加载所有资源文件，并引入之前单独的所有xml文件。</p>\n<p>先将web文件的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">context-param&gt;</div><div class=\"line\">\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class=\"line\">\t&lt;param-value&gt;</div><div class=\"line\">        classpath:spring-activemq.xml,</div><div class=\"line\">        classpath:spring-redis.xml</div><div class=\"line\">\t&lt;/param-value&gt;</div><div class=\"line\">&lt;/context-param&gt;</div></pre></td></tr></table></figure></p>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">context-param&gt;</div><div class=\"line\">\t\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class=\"line\">\t\t&lt;param-value&gt;</div><div class=\"line\">\t\t\tclasspath:applicationContext.xml</div><div class=\"line\">\t\t&lt;/param-value&gt;</div><div class=\"line\">\t&lt;/context-param&gt;</div></pre></td></tr></table></figure></p>\n<p>编写这个applicationContext.xml如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\txmlns:p=&quot;http://www.springframework.org/schema/p&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:conf/*.properties&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;import resource=&quot;activemq/spring-activemq.xml&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;import resource=&quot;redis/spring-redis.xml&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure></p>\n<p>这样部署启动应该就可以了。</p>\n<h2 id=\"新的问题\"><a href=\"#新的问题\" class=\"headerlink\" title=\"新的问题\"></a>新的问题</h2><p>按道理应该启动成功，不过我这里又遇到另一个问题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cannot convert value of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] to required type [javax.jms.ConnectionFactory] for property &apos;connectionFactory&apos;: no matching editors or conversion strategy found</div></pre></td></tr></table></figure></p>\n<h2 id=\"再查原因\"><a href=\"#再查原因\" class=\"headerlink\" title=\"再查原因\"></a>再查原因</h2><p>查看自己的spring-redis.xml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">p:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;property name=&quot;keySerializer&quot; ref=&quot;keySerializer&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>并没有需要’javax.jms.ConnectionFactory’，根据问题在网上搜索，在一篇博客看到了’redis也有个bean叫connectionFactory’的字眼。于是想到自己应该也是bean name重复了。查看spring-activemq.xml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.jms.connection.SingleConnectionFactory&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;targetConnectionFactory&quot; ref=&quot;pooledConnectionFactory&quot;/&gt;  </div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 --&gt;  </div><div class=\"line\">&lt;bean id=&quot;jmsTemplate&quot; class=&quot;org.springframework.jms.core.JmsTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot;/&gt;  </div><div class=\"line\">    &lt;property name=&quot;defaultDestinationName&quot; value=&quot;$&#123;activemq.queue.name&#125;&quot;/&gt;  </div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><p>问题就很明显了，spring-redis.xml和spring-activemq.xml都有connectionFactory这个bean。于是修改了spring-redis.xml中的bean name<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;redisConnectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">p:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;redisConnectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;property name=&quot;keySerializer&quot; ref=&quot;keySerializer&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>再次部署启动，OK。</p>\n<p>参考博客：<a href=\"http://www.iteye.com/topic/1131688\" target=\"_blank\" rel=\"external\">http://www.iteye.com/topic/1131688</a><br>　　　　　<a href=\"http://blog.csdn.net/AlbertFly/article/details/51503079\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/AlbertFly/article/details/51503079</a></p>\n","excerpt":"","more":"<h2 id=\"问题出现\"><a href=\"#问题出现\" class=\"headerlink\" title=\"问题出现\"></a>问题出现</h2><p>之前学习spring整合redis，spring整合activemq，单独测试没有问题。后来想把他们一起部署启动，结果报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Could not resolve placeholder &apos;redis.maxTotal&apos; in string value &quot;$&#123;redis.maxTotal&#125;&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查找原因\"><a href=\"#查找原因\" class=\"headerlink\" title=\"查找原因\"></a>查找原因</h2><p>查了一会找到了原因。因为我的spring-redis.xml和spring-activemq.xml都写了一个<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;context:property-placeholder location=&quot;classpath:conf/xxx.properties&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>而Spring容器采用反射扫描的发现机制，在探测到Spring容器中有一个org.springframework.beans.factory.config.PropertyPlaceholderConfigurer的Bean就会停止对剩余PropertyPlaceholderConfigurer的扫描。</p>\n<p>而<context:property-placeholder>这个基于命名空间的配置，其实内部就是创建一个PropertyPlaceholderConfigurer Bean而已。换句话说，即Spring容器仅允许<strong>最多定义一个</strong>PropertyPlaceholderConfigurer(或<context:property-placeholder>)，其余的会被Spring<strong>忽略</strong>掉（其实Spring如果提供一个警告就好了）。</context:property-placeholder></context:property-placeholder></p>\n<p>这样的话，其实就只加载了第一个properties文件，后面的并没有加载，自然也就找不到’redis.maxTotal’了。</p>\n<h2 id=\"尝试解决\"><a href=\"#尝试解决\" class=\"headerlink\" title=\"尝试解决\"></a>尝试解决</h2><p>按照网上的办法，去掉每个xml单独的context:property-placeholder，再写一个xml文件一次性加载所有资源文件，并引入之前单独的所有xml文件。</p>\n<p>先将web文件的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">context-param&gt;</div><div class=\"line\">\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class=\"line\">\t&lt;param-value&gt;</div><div class=\"line\">        classpath:spring-activemq.xml,</div><div class=\"line\">        classpath:spring-redis.xml</div><div class=\"line\">\t&lt;/param-value&gt;</div><div class=\"line\">&lt;/context-param&gt;</div></pre></td></tr></table></figure></p>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">context-param&gt;</div><div class=\"line\">\t\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class=\"line\">\t\t&lt;param-value&gt;</div><div class=\"line\">\t\t\tclasspath:applicationContext.xml</div><div class=\"line\">\t\t&lt;/param-value&gt;</div><div class=\"line\">\t&lt;/context-param&gt;</div></pre></td></tr></table></figure></p>\n<p>编写这个applicationContext.xml如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\txmlns:p=&quot;http://www.springframework.org/schema/p&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:conf/*.properties&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;import resource=&quot;activemq/spring-activemq.xml&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;import resource=&quot;redis/spring-redis.xml&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure></p>\n<p>这样部署启动应该就可以了。</p>\n<h2 id=\"新的问题\"><a href=\"#新的问题\" class=\"headerlink\" title=\"新的问题\"></a>新的问题</h2><p>按道理应该启动成功，不过我这里又遇到另一个问题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cannot convert value of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] to required type [javax.jms.ConnectionFactory] for property &apos;connectionFactory&apos;: no matching editors or conversion strategy found</div></pre></td></tr></table></figure></p>\n<h2 id=\"再查原因\"><a href=\"#再查原因\" class=\"headerlink\" title=\"再查原因\"></a>再查原因</h2><p>查看自己的spring-redis.xml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">p:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;property name=&quot;keySerializer&quot; ref=&quot;keySerializer&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>并没有需要’javax.jms.ConnectionFactory’，根据问题在网上搜索，在一篇博客看到了’redis也有个bean叫connectionFactory’的字眼。于是想到自己应该也是bean name重复了。查看spring-activemq.xml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.jms.connection.SingleConnectionFactory&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;targetConnectionFactory&quot; ref=&quot;pooledConnectionFactory&quot;/&gt;  </div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 --&gt;  </div><div class=\"line\">&lt;bean id=&quot;jmsTemplate&quot; class=&quot;org.springframework.jms.core.JmsTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot;/&gt;  </div><div class=\"line\">    &lt;property name=&quot;defaultDestinationName&quot; value=&quot;$&#123;activemq.queue.name&#125;&quot;/&gt;  </div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><p>问题就很明显了，spring-redis.xml和spring-activemq.xml都有connectionFactory这个bean。于是修改了spring-redis.xml中的bean name<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;redisConnectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">p:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">    &lt;property name=&quot;connectionFactory&quot; ref=&quot;redisConnectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;property name=&quot;keySerializer&quot; ref=&quot;keySerializer&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>再次部署启动，OK。</p>\n<p>参考博客：<a href=\"http://www.iteye.com/topic/1131688\">http://www.iteye.com/topic/1131688</a><br>　　　　　<a href=\"http://blog.csdn.net/AlbertFly/article/details/51503079\">http://blog.csdn.net/AlbertFly/article/details/51503079</a></p>\n"},{"layout":"title","title":"redis入门","date":"2017-04-15T00:54:10.000Z","_content":"\n# redis简介\n\nRedis 是一个高性能的key-value数据库。\n\n* Redis可基于内存亦可持久化。\n* Redis 支持存储的value类型丰富，包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型）\n* Redis性能极高，读的速度可高达110000次/s，写的速度可高达81000次/s 。\n* Redis的所有操作都是原子性的，Redis还支持几个操作合并后的原子性执行。\n\n# Redis 下载安装\n\nRedis官方并不支持Windows。 但是，微软针对Win64自己开发了一个windows版的redis并共享到github上。\n\n点击[https://github.com/MSOpenTech/redis/releases](https://github.com/MSOpenTech/redis/releases)下载。\n\n选择你喜欢的安装方式，这里我选择压缩版。\n![下载redis](redis入门/20170415092253.png)\n\n安装/解压缩后到redis目录找到redis-server.exe和redis-cli.exe\n![redis目录](redis入门/20170415094655.png)\n\n双击redis-server.exe启动redis服务\n![redis服务](redis入门/20170415095002.png)\n\n双击redis-cli.exe启动客户端，用来访问redis服务。\n![redis客户端](redis入门/20170415095226.png)\n\n测试一下，设置x的值为1并获取x。\n![redis测试](redis入门/20170415095445.png)\n\n# 使用redis\nredis使用key-value来存储数据。\n\n## set & get\n使用set命令设置值，并用get命令获取值。\n```\n> set name \"tenny\"\nOK\n> get name\n\"tenny\"\n```\n\n## del\ndel删除一个key\n```\n> del name\n(integer) 1\n> get name\n(nil)\n```\n\n## incr\nincr递增一个值，如果key不存在则创造它并初始化值为1\n```\n> set connections 10\nOK\n> incr connections\n(integer) 11\n> incr connections\n(integer) 12\n\n> del connections\n(integer) 1\n> incr connections    //connections不存在，初始化为1\n(integer) 1\n```\n\n## setnx\nsetnx(set-if-not-exists)，如果key不存在才改变值。\n```\n> set name \"panda\"\nOK\n> get name\n\"panda\"\n> setnx name \"tenny\"    //因为name存在所以不会改变值\n(integer) 0\n> get name\n\"panda\"\n\n> get age\n(nil)\n> setnx age 22    //age不存在，赋值为22\n(integer) 1\n> get age\n\"22\"\n```\n\n## expire & ttl\nexpire设置生存时间，ttl查看剩余时间。\n```\n> set name \"tenny\"\nOK\n> expire name 120   //设置name生存时间为120秒\n(integer) 1\n> ttl name\n(integer) 80    //剩余80秒\n> ttl name      //2分钟后\n(integer) -2    //-2表示name这个key已经不存在了。\n> get name\n(nil)\n\n> set name \"tenny\"\nOK\n> ttl name\n(integer) -1    //默认-1表示永久存在\n> expire name 120\n(integer) 1\n> ttl name\n(integer) 118\n> get name\n\"tenny\"\n> set name \"panda\"    //设置值会重置存在时间\nOK\n> ttl name\n(integer) -1\n```\n\n## list操作：rpush & lpush & llen & lrange & lpop & rpop\n\n* rpush在list末尾添加元素\n```\n> rpush color \"blue\"    //[bule]\n(integer) 1\n> rpush color \"red\"   //[bule, red]\n(integer) 2\n```\n\n* lpush在list开头添加元素\n```\n> lpush color \"yellow\"    //[yellow, bule, red]\n(integer) 3\n```\n\n* llen查看list长度\n```\n> llen color\n(integer) 3\n```\n\n* lrange查看list内容，接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到list末尾。\n```\n> lrange color 0 2\n1) \"yellow\"\n2) \"blue\"\n3) \"red\"\n> lrange color 0 1\n1) \"yellow\"\n2) \"blue\"\n> lrange color 1 2\n1) \"blue\"\n2) \"red\"\n> lrange color 1 2\n1) \"blue\"\n2) \"red\"\n```\n\n* lpop移除list第一个元素并返回它\n```\n> lpop color\n\"yellow\"\n> llen color\n(integer) 2\n> lrange color 0 -1\n1) \"blue\"\n2) \"red\"\n```\n\n* rpop移除list最后一个元素并返回它\n```\n> rpop color\n\"red\"\n> llen color\n(integer) 1\n> lrange color 0 -1\n1) \"blue\"\n```\n\n## set操作：sadd & srem & sismember & smembers & sunion\nset类似list，但是元素没有顺序且只能出现一次。\n\n* sadd添加一个元素到set\n```\n> sadd superpowers \"flight\"   //[\"flight\"]\n(integer) 1\n> sadd superpowers \"x-ray vision\"   //[\"flight\", \"x-ray vision\"]\n(integer) 1\n> sadd superpowers \"reflexes\"   //[\"flight\", \"x-ray vision\", \"reflexes\"]\n(integer) 1\n> SADD superpowers \"flight\"   //重复添加无效\n(integer) 0\n```\n\n* srem从set中移除一个元素\n```\n> srem superpowers \"reflexes\"   //[\"flight\", \"x-ray vision\"]\n1\n```\n\n* sismember测试一个元素是否存在于set，存在返回1，不存在返回0\n```\n> sismember superpowers \"flight\"\n(integer) 1\n> sismember superpowers \"reflexes\"\n(integer) 0\n```\n\n* smembers查看set所有元素\n```\n> sismember superpowers\n1) \"x-ray vision\"\n2) \"flight\"\n```\n\n* sunion联合多个set并返回它们的合集\n```\n> sadd birdpowers \"pecking\"\n(integer) 1\n> sadd birdpowers \"flight\"\n(integer) 1\n> smembers birdpowers\n1) \"pecking\"\n2) \"flight\"\n> smembers superpowers\n1) \"x-ray vision\"\n2) \"flight\"\n> sunion superpowers birdpowers   //无序的 sunion birdpowers superpowers结果一样\n1) \"pecking\"\n2) \"flight\"\n3) \"x-ray vision\"\n```\n\n## sorted set操作：zadd zrange\n有序集合(sorted set)类似集合，不过它每个元素有一个关联值，通过这个关联值对元素进行排序。\n\n* zadd为一个有序集合添加元素\n```\n> zadd hackers 1940 \"Alan Kay\"\n(integer) 1\n> zadd hackers 1906 \"Grace Hopper\"\n(integer) 1\n> zadd hackers 1953 \"Richard Stallman\"\n(integer) 1\n> zadd hackers 1965 \"Yukihiro Matsumoto\"\n(integer) 1\n> zadd hackers 1916 \"Claude Shannon\"\n(integer) 1\n> zadd hackers 1969 \"Linus Torvalds\"\n(integer) 1\n> zadd hackers 1957 \"Sophie Wilson\"\n(integer) 1\n> zadd hackers 1912 \"Alan Turing\"\n(integer) 1\n```\n\n* zrange类似于lrange，查看sorted set元素。接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到末尾\n```\n> zrange hackers 0 -1\n1) \"Grace Hopper\"\n2) \"Alan Turing\"\n3) \"Claude Shannon\"\n4) \"Alan Kay\"\n5) \"Richard Stallman\"\n6) \"Sophie Wilson\"\n7) \"Yukihiro Matsumoto\"\n8) \"Linus Torvalds\"\n```\n可以看到元素以年份递增排序。\n```\n> ZRANGE hackers 2 4\n1) \"Claude Shannon\"\n2) \"Alan Kay\"\n3) \"Richard Stallman\"\n```\n\n## hash操作：hset & hget & hgetall & hmset & hincrby & hdel\n hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。\n\n * hset添加值\n ```\n> hset user name \"tenny\"\n(integer) 1\n> hset user email \"tenny@example.com\"\n(integer) 1\n> hset user password \"cutepanda\"\n(integer) 1\n```\n\n* hget获取值\n```\n> hget user name\n\"tenny\"\n```\n\n* hgetall获取所有值\n```\n> hgetall user\n1) \"name\"\n2) \"tenny\"\n3) \"email\"\n4) \"tenny@example.com\"\n5) \"password\"\n6) \"cutepanda\"\n```\n\n* hmset一次性设置多个值\n```\n> hmset user1 name \"tenny1\" password \"cutepanda1\" email \"tenny1@example.com\"\nOK\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n```\n可以使用hset继续添加或修改\n```\n> hset user1 age 22\n(integer) 1\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n7) \"age\"\n8) \"22\"\n> hset user1 age 24   //已存在的值重复设定返回0，新值返回1\n(integer) 0\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n7) \"age\"\n8) \"24\"\n```\n\n* hincrby增加数值型域的值\n```\n> hset user visits 10\n(integer) 1\n> hincrby user visits 1\n(integer) 11\n> hincrby user visits 1\n(integer) 12\n```\n\n* hdel删除指定的域\n```\n> hdel user visits\n(integer) 1\n> hdel user age   //删除不存在的域返回0\n(integer) 0\n> hdel user visits\n(integer) 0\n> hincrby user visits 20    //字段不存在则默认设置为0后再执行此增加操作\n(integer) 20\n```\n\n<font size=\"5\">以上介绍了redis的一些简单命令，可以访问[redis中文官方网站](http://www.redis.cn/commands.html)了解更多。</font>\n","source":"_posts/redis入门.md","raw":"---\nlayout: title\ntitle: redis入门\ndate: 2017-04-15 08:54:10\ntags: redis\ncategories: redis\n---\n\n# redis简介\n\nRedis 是一个高性能的key-value数据库。\n\n* Redis可基于内存亦可持久化。\n* Redis 支持存储的value类型丰富，包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型）\n* Redis性能极高，读的速度可高达110000次/s，写的速度可高达81000次/s 。\n* Redis的所有操作都是原子性的，Redis还支持几个操作合并后的原子性执行。\n\n# Redis 下载安装\n\nRedis官方并不支持Windows。 但是，微软针对Win64自己开发了一个windows版的redis并共享到github上。\n\n点击[https://github.com/MSOpenTech/redis/releases](https://github.com/MSOpenTech/redis/releases)下载。\n\n选择你喜欢的安装方式，这里我选择压缩版。\n![下载redis](redis入门/20170415092253.png)\n\n安装/解压缩后到redis目录找到redis-server.exe和redis-cli.exe\n![redis目录](redis入门/20170415094655.png)\n\n双击redis-server.exe启动redis服务\n![redis服务](redis入门/20170415095002.png)\n\n双击redis-cli.exe启动客户端，用来访问redis服务。\n![redis客户端](redis入门/20170415095226.png)\n\n测试一下，设置x的值为1并获取x。\n![redis测试](redis入门/20170415095445.png)\n\n# 使用redis\nredis使用key-value来存储数据。\n\n## set & get\n使用set命令设置值，并用get命令获取值。\n```\n> set name \"tenny\"\nOK\n> get name\n\"tenny\"\n```\n\n## del\ndel删除一个key\n```\n> del name\n(integer) 1\n> get name\n(nil)\n```\n\n## incr\nincr递增一个值，如果key不存在则创造它并初始化值为1\n```\n> set connections 10\nOK\n> incr connections\n(integer) 11\n> incr connections\n(integer) 12\n\n> del connections\n(integer) 1\n> incr connections    //connections不存在，初始化为1\n(integer) 1\n```\n\n## setnx\nsetnx(set-if-not-exists)，如果key不存在才改变值。\n```\n> set name \"panda\"\nOK\n> get name\n\"panda\"\n> setnx name \"tenny\"    //因为name存在所以不会改变值\n(integer) 0\n> get name\n\"panda\"\n\n> get age\n(nil)\n> setnx age 22    //age不存在，赋值为22\n(integer) 1\n> get age\n\"22\"\n```\n\n## expire & ttl\nexpire设置生存时间，ttl查看剩余时间。\n```\n> set name \"tenny\"\nOK\n> expire name 120   //设置name生存时间为120秒\n(integer) 1\n> ttl name\n(integer) 80    //剩余80秒\n> ttl name      //2分钟后\n(integer) -2    //-2表示name这个key已经不存在了。\n> get name\n(nil)\n\n> set name \"tenny\"\nOK\n> ttl name\n(integer) -1    //默认-1表示永久存在\n> expire name 120\n(integer) 1\n> ttl name\n(integer) 118\n> get name\n\"tenny\"\n> set name \"panda\"    //设置值会重置存在时间\nOK\n> ttl name\n(integer) -1\n```\n\n## list操作：rpush & lpush & llen & lrange & lpop & rpop\n\n* rpush在list末尾添加元素\n```\n> rpush color \"blue\"    //[bule]\n(integer) 1\n> rpush color \"red\"   //[bule, red]\n(integer) 2\n```\n\n* lpush在list开头添加元素\n```\n> lpush color \"yellow\"    //[yellow, bule, red]\n(integer) 3\n```\n\n* llen查看list长度\n```\n> llen color\n(integer) 3\n```\n\n* lrange查看list内容，接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到list末尾。\n```\n> lrange color 0 2\n1) \"yellow\"\n2) \"blue\"\n3) \"red\"\n> lrange color 0 1\n1) \"yellow\"\n2) \"blue\"\n> lrange color 1 2\n1) \"blue\"\n2) \"red\"\n> lrange color 1 2\n1) \"blue\"\n2) \"red\"\n```\n\n* lpop移除list第一个元素并返回它\n```\n> lpop color\n\"yellow\"\n> llen color\n(integer) 2\n> lrange color 0 -1\n1) \"blue\"\n2) \"red\"\n```\n\n* rpop移除list最后一个元素并返回它\n```\n> rpop color\n\"red\"\n> llen color\n(integer) 1\n> lrange color 0 -1\n1) \"blue\"\n```\n\n## set操作：sadd & srem & sismember & smembers & sunion\nset类似list，但是元素没有顺序且只能出现一次。\n\n* sadd添加一个元素到set\n```\n> sadd superpowers \"flight\"   //[\"flight\"]\n(integer) 1\n> sadd superpowers \"x-ray vision\"   //[\"flight\", \"x-ray vision\"]\n(integer) 1\n> sadd superpowers \"reflexes\"   //[\"flight\", \"x-ray vision\", \"reflexes\"]\n(integer) 1\n> SADD superpowers \"flight\"   //重复添加无效\n(integer) 0\n```\n\n* srem从set中移除一个元素\n```\n> srem superpowers \"reflexes\"   //[\"flight\", \"x-ray vision\"]\n1\n```\n\n* sismember测试一个元素是否存在于set，存在返回1，不存在返回0\n```\n> sismember superpowers \"flight\"\n(integer) 1\n> sismember superpowers \"reflexes\"\n(integer) 0\n```\n\n* smembers查看set所有元素\n```\n> sismember superpowers\n1) \"x-ray vision\"\n2) \"flight\"\n```\n\n* sunion联合多个set并返回它们的合集\n```\n> sadd birdpowers \"pecking\"\n(integer) 1\n> sadd birdpowers \"flight\"\n(integer) 1\n> smembers birdpowers\n1) \"pecking\"\n2) \"flight\"\n> smembers superpowers\n1) \"x-ray vision\"\n2) \"flight\"\n> sunion superpowers birdpowers   //无序的 sunion birdpowers superpowers结果一样\n1) \"pecking\"\n2) \"flight\"\n3) \"x-ray vision\"\n```\n\n## sorted set操作：zadd zrange\n有序集合(sorted set)类似集合，不过它每个元素有一个关联值，通过这个关联值对元素进行排序。\n\n* zadd为一个有序集合添加元素\n```\n> zadd hackers 1940 \"Alan Kay\"\n(integer) 1\n> zadd hackers 1906 \"Grace Hopper\"\n(integer) 1\n> zadd hackers 1953 \"Richard Stallman\"\n(integer) 1\n> zadd hackers 1965 \"Yukihiro Matsumoto\"\n(integer) 1\n> zadd hackers 1916 \"Claude Shannon\"\n(integer) 1\n> zadd hackers 1969 \"Linus Torvalds\"\n(integer) 1\n> zadd hackers 1957 \"Sophie Wilson\"\n(integer) 1\n> zadd hackers 1912 \"Alan Turing\"\n(integer) 1\n```\n\n* zrange类似于lrange，查看sorted set元素。接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到末尾\n```\n> zrange hackers 0 -1\n1) \"Grace Hopper\"\n2) \"Alan Turing\"\n3) \"Claude Shannon\"\n4) \"Alan Kay\"\n5) \"Richard Stallman\"\n6) \"Sophie Wilson\"\n7) \"Yukihiro Matsumoto\"\n8) \"Linus Torvalds\"\n```\n可以看到元素以年份递增排序。\n```\n> ZRANGE hackers 2 4\n1) \"Claude Shannon\"\n2) \"Alan Kay\"\n3) \"Richard Stallman\"\n```\n\n## hash操作：hset & hget & hgetall & hmset & hincrby & hdel\n hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。\n\n * hset添加值\n ```\n> hset user name \"tenny\"\n(integer) 1\n> hset user email \"tenny@example.com\"\n(integer) 1\n> hset user password \"cutepanda\"\n(integer) 1\n```\n\n* hget获取值\n```\n> hget user name\n\"tenny\"\n```\n\n* hgetall获取所有值\n```\n> hgetall user\n1) \"name\"\n2) \"tenny\"\n3) \"email\"\n4) \"tenny@example.com\"\n5) \"password\"\n6) \"cutepanda\"\n```\n\n* hmset一次性设置多个值\n```\n> hmset user1 name \"tenny1\" password \"cutepanda1\" email \"tenny1@example.com\"\nOK\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n```\n可以使用hset继续添加或修改\n```\n> hset user1 age 22\n(integer) 1\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n7) \"age\"\n8) \"22\"\n> hset user1 age 24   //已存在的值重复设定返回0，新值返回1\n(integer) 0\n> hgetall user1\n1) \"name\"\n2) \"tenny1\"\n3) \"password\"\n4) \"cutepanda1\"\n5) \"email\"\n6) \"tenny1@example.com\"\n7) \"age\"\n8) \"24\"\n```\n\n* hincrby增加数值型域的值\n```\n> hset user visits 10\n(integer) 1\n> hincrby user visits 1\n(integer) 11\n> hincrby user visits 1\n(integer) 12\n```\n\n* hdel删除指定的域\n```\n> hdel user visits\n(integer) 1\n> hdel user age   //删除不存在的域返回0\n(integer) 0\n> hdel user visits\n(integer) 0\n> hincrby user visits 20    //字段不存在则默认设置为0后再执行此增加操作\n(integer) 20\n```\n\n<font size=\"5\">以上介绍了redis的一些简单命令，可以访问[redis中文官方网站](http://www.redis.cn/commands.html)了解更多。</font>\n","slug":"redis入门","published":1,"updated":"2017-04-19T08:47:10.318Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0e7000qiko0ohnrm1nw","content":"<h1 id=\"redis简介\"><a href=\"#redis简介\" class=\"headerlink\" title=\"redis简介\"></a>redis简介</h1><p>Redis 是一个高性能的key-value数据库。</p>\n<ul>\n<li>Redis可基于内存亦可持久化。</li>\n<li>Redis 支持存储的value类型丰富，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）</li>\n<li>Redis性能极高，读的速度可高达110000次/s，写的速度可高达81000次/s 。</li>\n<li>Redis的所有操作都是原子性的，Redis还支持几个操作合并后的原子性执行。</li>\n</ul>\n<h1 id=\"Redis-下载安装\"><a href=\"#Redis-下载安装\" class=\"headerlink\" title=\"Redis 下载安装\"></a>Redis 下载安装</h1><p>Redis官方并不支持Windows。 但是，微软针对Win64自己开发了一个windows版的redis并共享到github上。</p>\n<p>点击<a href=\"https://github.com/MSOpenTech/redis/releases\" target=\"_blank\" rel=\"external\">https://github.com/MSOpenTech/redis/releases</a>下载。</p>\n<p>选择你喜欢的安装方式，这里我选择压缩版。<br><img src=\"/2017/04/15/redis入门/20170415092253.png\" alt=\"下载redis\"></p>\n<p>安装/解压缩后到redis目录找到redis-server.exe和redis-cli.exe<br><img src=\"/2017/04/15/redis入门/20170415094655.png\" alt=\"redis目录\"></p>\n<p>双击redis-server.exe启动redis服务<br><img src=\"/2017/04/15/redis入门/20170415095002.png\" alt=\"redis服务\"></p>\n<p>双击redis-cli.exe启动客户端，用来访问redis服务。<br><img src=\"/2017/04/15/redis入门/20170415095226.png\" alt=\"redis客户端\"></p>\n<p>测试一下，设置x的值为1并获取x。<br><img src=\"/2017/04/15/redis入门/20170415095445.png\" alt=\"redis测试\"></p>\n<h1 id=\"使用redis\"><a href=\"#使用redis\" class=\"headerlink\" title=\"使用redis\"></a>使用redis</h1><p>redis使用key-value来存储数据。</p>\n<h2 id=\"set-amp-get\"><a href=\"#set-amp-get\" class=\"headerlink\" title=\"set &amp; get\"></a>set &amp; get</h2><p>使用set命令设置值，并用get命令获取值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;tenny&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a>del</h2><p>del删除一个key<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; del name</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; get name</div><div class=\"line\">(nil)</div></pre></td></tr></table></figure></p>\n<h2 id=\"incr\"><a href=\"#incr\" class=\"headerlink\" title=\"incr\"></a>incr</h2><p>incr递增一个值，如果key不存在则创造它并初始化值为1<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set connections 10</div><div class=\"line\">OK</div><div class=\"line\">&gt; incr connections</div><div class=\"line\">(integer) 11</div><div class=\"line\">&gt; incr connections</div><div class=\"line\">(integer) 12</div><div class=\"line\"></div><div class=\"line\">&gt; del connections</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; incr connections    //connections不存在，初始化为1</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure></p>\n<h2 id=\"setnx\"><a href=\"#setnx\" class=\"headerlink\" title=\"setnx\"></a>setnx</h2><p>setnx(set-if-not-exists)，如果key不存在才改变值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;panda&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;panda&quot;</div><div class=\"line\">&gt; setnx name &quot;tenny&quot;    //因为name存在所以不会改变值</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;panda&quot;</div><div class=\"line\"></div><div class=\"line\">&gt; get age</div><div class=\"line\">(nil)</div><div class=\"line\">&gt; setnx age 22    //age不存在，赋值为22</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; get age</div><div class=\"line\">&quot;22&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"expire-amp-ttl\"><a href=\"#expire-amp-ttl\" class=\"headerlink\" title=\"expire &amp; ttl\"></a>expire &amp; ttl</h2><p>expire设置生存时间，ttl查看剩余时间。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; expire name 120   //设置name生存时间为120秒</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) 80    //剩余80秒</div><div class=\"line\">&gt; ttl name      //2分钟后</div><div class=\"line\">(integer) -2    //-2表示name这个key已经不存在了。</div><div class=\"line\">&gt; get name</div><div class=\"line\">(nil)</div><div class=\"line\"></div><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) -1    //默认-1表示永久存在</div><div class=\"line\">&gt; expire name 120</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) 118</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;tenny&quot;</div><div class=\"line\">&gt; set name &quot;panda&quot;    //设置值会重置存在时间</div><div class=\"line\">OK</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) -1</div></pre></td></tr></table></figure></p>\n<h2 id=\"list操作：rpush-amp-lpush-amp-llen-amp-lrange-amp-lpop-amp-rpop\"><a href=\"#list操作：rpush-amp-lpush-amp-llen-amp-lrange-amp-lpop-amp-rpop\" class=\"headerlink\" title=\"list操作：rpush &amp; lpush &amp; llen &amp; lrange &amp; lpop &amp; rpop\"></a>list操作：rpush &amp; lpush &amp; llen &amp; lrange &amp; lpop &amp; rpop</h2><ul>\n<li><p>rpush在list末尾添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; rpush color &quot;blue&quot;    //[bule]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; rpush color &quot;red&quot;   //[bule, red]</div><div class=\"line\">(integer) 2</div></pre></td></tr></table></figure>\n</li>\n<li><p>lpush在list开头添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lpush color &quot;yellow&quot;    //[yellow, bule, red]</div><div class=\"line\">(integer) 3</div></pre></td></tr></table></figure>\n</li>\n<li><p>llen查看list长度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 3</div></pre></td></tr></table></figure>\n</li>\n<li><p>lrange查看list内容，接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到list末尾。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lrange color 0 2</div><div class=\"line\">1) &quot;yellow&quot;</div><div class=\"line\">2) &quot;blue&quot;</div><div class=\"line\">3) &quot;red&quot;</div><div class=\"line\">&gt; lrange color 0 1</div><div class=\"line\">1) &quot;yellow&quot;</div><div class=\"line\">2) &quot;blue&quot;</div><div class=\"line\">&gt; lrange color 1 2</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div><div class=\"line\">&gt; lrange color 1 2</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>lpop移除list第一个元素并返回它</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lpop color</div><div class=\"line\">&quot;yellow&quot;</div><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 2</div><div class=\"line\">&gt; lrange color 0 -1</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>rpop移除list最后一个元素并返回它</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; rpop color</div><div class=\"line\">&quot;red&quot;</div><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; lrange color 0 -1</div><div class=\"line\">1) &quot;blue&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"set操作：sadd-amp-srem-amp-sismember-amp-smembers-amp-sunion\"><a href=\"#set操作：sadd-amp-srem-amp-sismember-amp-smembers-amp-sunion\" class=\"headerlink\" title=\"set操作：sadd &amp; srem &amp; sismember &amp; smembers &amp; sunion\"></a>set操作：sadd &amp; srem &amp; sismember &amp; smembers &amp; sunion</h2><p>set类似list，但是元素没有顺序且只能出现一次。</p>\n<ul>\n<li><p>sadd添加一个元素到set</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sadd superpowers &quot;flight&quot;   //[&quot;flight&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd superpowers &quot;x-ray vision&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd superpowers &quot;reflexes&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;, &quot;reflexes&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; SADD superpowers &quot;flight&quot;   //重复添加无效</div><div class=\"line\">(integer) 0</div></pre></td></tr></table></figure>\n</li>\n<li><p>srem从set中移除一个元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; srem superpowers &quot;reflexes&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;]</div><div class=\"line\">1</div></pre></td></tr></table></figure>\n</li>\n<li><p>sismember测试一个元素是否存在于set，存在返回1，不存在返回0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sismember superpowers &quot;flight&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sismember superpowers &quot;reflexes&quot;</div><div class=\"line\">(integer) 0</div></pre></td></tr></table></figure>\n</li>\n<li><p>smembers查看set所有元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sismember superpowers</div><div class=\"line\">1) &quot;x-ray vision&quot;</div><div class=\"line\">2) &quot;flight&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>sunion联合多个set并返回它们的合集</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sadd birdpowers &quot;pecking&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd birdpowers &quot;flight&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; smembers birdpowers</div><div class=\"line\">1) &quot;pecking&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">&gt; smembers superpowers</div><div class=\"line\">1) &quot;x-ray vision&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">&gt; sunion superpowers birdpowers   //无序的 sunion birdpowers superpowers结果一样</div><div class=\"line\">1) &quot;pecking&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">3) &quot;x-ray vision&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"sorted-set操作：zadd-zrange\"><a href=\"#sorted-set操作：zadd-zrange\" class=\"headerlink\" title=\"sorted set操作：zadd zrange\"></a>sorted set操作：zadd zrange</h2><p>有序集合(sorted set)类似集合，不过它每个元素有一个关联值，通过这个关联值对元素进行排序。</p>\n<ul>\n<li><p>zadd为一个有序集合添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; zadd hackers 1940 &quot;Alan Kay&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1906 &quot;Grace Hopper&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1953 &quot;Richard Stallman&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1965 &quot;Yukihiro Matsumoto&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1916 &quot;Claude Shannon&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1969 &quot;Linus Torvalds&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1957 &quot;Sophie Wilson&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1912 &quot;Alan Turing&quot;</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure>\n</li>\n<li><p>zrange类似于lrange，查看sorted set元素。接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到末尾</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; zrange hackers 0 -1</div><div class=\"line\">1) &quot;Grace Hopper&quot;</div><div class=\"line\">2) &quot;Alan Turing&quot;</div><div class=\"line\">3) &quot;Claude Shannon&quot;</div><div class=\"line\">4) &quot;Alan Kay&quot;</div><div class=\"line\">5) &quot;Richard Stallman&quot;</div><div class=\"line\">6) &quot;Sophie Wilson&quot;</div><div class=\"line\">7) &quot;Yukihiro Matsumoto&quot;</div><div class=\"line\">8) &quot;Linus Torvalds&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以看到元素以年份递增排序。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ZRANGE hackers 2 4</div><div class=\"line\">1) &quot;Claude Shannon&quot;</div><div class=\"line\">2) &quot;Alan Kay&quot;</div><div class=\"line\">3) &quot;Richard Stallman&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"hash操作：hset-amp-hget-amp-hgetall-amp-hmset-amp-hincrby-amp-hdel\"><a href=\"#hash操作：hset-amp-hget-amp-hgetall-amp-hmset-amp-hincrby-amp-hdel\" class=\"headerlink\" title=\"hash操作：hset &amp; hget &amp; hgetall &amp; hmset &amp; hincrby &amp; hdel\"></a>hash操作：hset &amp; hget &amp; hgetall &amp; hmset &amp; hincrby &amp; hdel</h2><p> hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。</p>\n<ul>\n<li>hset添加值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user name &quot;tenny&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hset user email &quot;tenny@example.com&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hset user password &quot;cutepanda&quot;</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>hget获取值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hget user name</div><div class=\"line\">&quot;tenny&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>hgetall获取所有值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hgetall user</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny&quot;</div><div class=\"line\">3) &quot;email&quot;</div><div class=\"line\">4) &quot;tenny@example.com&quot;</div><div class=\"line\">5) &quot;password&quot;</div><div class=\"line\">6) &quot;cutepanda&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>hmset一次性设置多个值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hmset user1 name &quot;tenny1&quot; password &quot;cutepanda1&quot; email &quot;tenny1@example.com&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以使用hset继续添加或修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user1 age 22</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div><div class=\"line\">7) &quot;age&quot;</div><div class=\"line\">8) &quot;22&quot;</div><div class=\"line\">&gt; hset user1 age 24   //已存在的值重复设定返回0，新值返回1</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div><div class=\"line\">7) &quot;age&quot;</div><div class=\"line\">8) &quot;24&quot;</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>hincrby增加数值型域的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user visits 10</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hincrby user visits 1</div><div class=\"line\">(integer) 11</div><div class=\"line\">&gt; hincrby user visits 1</div><div class=\"line\">(integer) 12</div></pre></td></tr></table></figure>\n</li>\n<li><p>hdel删除指定的域</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hdel user visits</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hdel user age   //删除不存在的域返回0</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hdel user visits</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hincrby user visits 20    //字段不存在则默认设置为0后再执行此增加操作</div><div class=\"line\">(integer) 20</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<font size=\"5\">以上介绍了redis的一些简单命令，可以访问<a href=\"http://www.redis.cn/commands.html\" target=\"_blank\" rel=\"external\">redis中文官方网站</a>了解更多。</font>\n","excerpt":"","more":"<h1 id=\"redis简介\"><a href=\"#redis简介\" class=\"headerlink\" title=\"redis简介\"></a>redis简介</h1><p>Redis 是一个高性能的key-value数据库。</p>\n<ul>\n<li>Redis可基于内存亦可持久化。</li>\n<li>Redis 支持存储的value类型丰富，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）</li>\n<li>Redis性能极高，读的速度可高达110000次/s，写的速度可高达81000次/s 。</li>\n<li>Redis的所有操作都是原子性的，Redis还支持几个操作合并后的原子性执行。</li>\n</ul>\n<h1 id=\"Redis-下载安装\"><a href=\"#Redis-下载安装\" class=\"headerlink\" title=\"Redis 下载安装\"></a>Redis 下载安装</h1><p>Redis官方并不支持Windows。 但是，微软针对Win64自己开发了一个windows版的redis并共享到github上。</p>\n<p>点击<a href=\"https://github.com/MSOpenTech/redis/releases\">https://github.com/MSOpenTech/redis/releases</a>下载。</p>\n<p>选择你喜欢的安装方式，这里我选择压缩版。<br><img src=\"/2017/04/15/redis入门/20170415092253.png\" alt=\"下载redis\"></p>\n<p>安装/解压缩后到redis目录找到redis-server.exe和redis-cli.exe<br><img src=\"/2017/04/15/redis入门/20170415094655.png\" alt=\"redis目录\"></p>\n<p>双击redis-server.exe启动redis服务<br><img src=\"/2017/04/15/redis入门/20170415095002.png\" alt=\"redis服务\"></p>\n<p>双击redis-cli.exe启动客户端，用来访问redis服务。<br><img src=\"/2017/04/15/redis入门/20170415095226.png\" alt=\"redis客户端\"></p>\n<p>测试一下，设置x的值为1并获取x。<br><img src=\"/2017/04/15/redis入门/20170415095445.png\" alt=\"redis测试\"></p>\n<h1 id=\"使用redis\"><a href=\"#使用redis\" class=\"headerlink\" title=\"使用redis\"></a>使用redis</h1><p>redis使用key-value来存储数据。</p>\n<h2 id=\"set-amp-get\"><a href=\"#set-amp-get\" class=\"headerlink\" title=\"set &amp; get\"></a>set &amp; get</h2><p>使用set命令设置值，并用get命令获取值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;tenny&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a>del</h2><p>del删除一个key<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; del name</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; get name</div><div class=\"line\">(nil)</div></pre></td></tr></table></figure></p>\n<h2 id=\"incr\"><a href=\"#incr\" class=\"headerlink\" title=\"incr\"></a>incr</h2><p>incr递增一个值，如果key不存在则创造它并初始化值为1<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set connections 10</div><div class=\"line\">OK</div><div class=\"line\">&gt; incr connections</div><div class=\"line\">(integer) 11</div><div class=\"line\">&gt; incr connections</div><div class=\"line\">(integer) 12</div><div class=\"line\"></div><div class=\"line\">&gt; del connections</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; incr connections    //connections不存在，初始化为1</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure></p>\n<h2 id=\"setnx\"><a href=\"#setnx\" class=\"headerlink\" title=\"setnx\"></a>setnx</h2><p>setnx(set-if-not-exists)，如果key不存在才改变值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;panda&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;panda&quot;</div><div class=\"line\">&gt; setnx name &quot;tenny&quot;    //因为name存在所以不会改变值</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;panda&quot;</div><div class=\"line\"></div><div class=\"line\">&gt; get age</div><div class=\"line\">(nil)</div><div class=\"line\">&gt; setnx age 22    //age不存在，赋值为22</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; get age</div><div class=\"line\">&quot;22&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"expire-amp-ttl\"><a href=\"#expire-amp-ttl\" class=\"headerlink\" title=\"expire &amp; ttl\"></a>expire &amp; ttl</h2><p>expire设置生存时间，ttl查看剩余时间。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; expire name 120   //设置name生存时间为120秒</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) 80    //剩余80秒</div><div class=\"line\">&gt; ttl name      //2分钟后</div><div class=\"line\">(integer) -2    //-2表示name这个key已经不存在了。</div><div class=\"line\">&gt; get name</div><div class=\"line\">(nil)</div><div class=\"line\"></div><div class=\"line\">&gt; set name &quot;tenny&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) -1    //默认-1表示永久存在</div><div class=\"line\">&gt; expire name 120</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) 118</div><div class=\"line\">&gt; get name</div><div class=\"line\">&quot;tenny&quot;</div><div class=\"line\">&gt; set name &quot;panda&quot;    //设置值会重置存在时间</div><div class=\"line\">OK</div><div class=\"line\">&gt; ttl name</div><div class=\"line\">(integer) -1</div></pre></td></tr></table></figure></p>\n<h2 id=\"list操作：rpush-amp-lpush-amp-llen-amp-lrange-amp-lpop-amp-rpop\"><a href=\"#list操作：rpush-amp-lpush-amp-llen-amp-lrange-amp-lpop-amp-rpop\" class=\"headerlink\" title=\"list操作：rpush &amp; lpush &amp; llen &amp; lrange &amp; lpop &amp; rpop\"></a>list操作：rpush &amp; lpush &amp; llen &amp; lrange &amp; lpop &amp; rpop</h2><ul>\n<li><p>rpush在list末尾添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; rpush color &quot;blue&quot;    //[bule]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; rpush color &quot;red&quot;   //[bule, red]</div><div class=\"line\">(integer) 2</div></pre></td></tr></table></figure>\n</li>\n<li><p>lpush在list开头添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lpush color &quot;yellow&quot;    //[yellow, bule, red]</div><div class=\"line\">(integer) 3</div></pre></td></tr></table></figure>\n</li>\n<li><p>llen查看list长度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 3</div></pre></td></tr></table></figure>\n</li>\n<li><p>lrange查看list内容，接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到list末尾。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lrange color 0 2</div><div class=\"line\">1) &quot;yellow&quot;</div><div class=\"line\">2) &quot;blue&quot;</div><div class=\"line\">3) &quot;red&quot;</div><div class=\"line\">&gt; lrange color 0 1</div><div class=\"line\">1) &quot;yellow&quot;</div><div class=\"line\">2) &quot;blue&quot;</div><div class=\"line\">&gt; lrange color 1 2</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div><div class=\"line\">&gt; lrange color 1 2</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>lpop移除list第一个元素并返回它</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; lpop color</div><div class=\"line\">&quot;yellow&quot;</div><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 2</div><div class=\"line\">&gt; lrange color 0 -1</div><div class=\"line\">1) &quot;blue&quot;</div><div class=\"line\">2) &quot;red&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>rpop移除list最后一个元素并返回它</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; rpop color</div><div class=\"line\">&quot;red&quot;</div><div class=\"line\">&gt; llen color</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; lrange color 0 -1</div><div class=\"line\">1) &quot;blue&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"set操作：sadd-amp-srem-amp-sismember-amp-smembers-amp-sunion\"><a href=\"#set操作：sadd-amp-srem-amp-sismember-amp-smembers-amp-sunion\" class=\"headerlink\" title=\"set操作：sadd &amp; srem &amp; sismember &amp; smembers &amp; sunion\"></a>set操作：sadd &amp; srem &amp; sismember &amp; smembers &amp; sunion</h2><p>set类似list，但是元素没有顺序且只能出现一次。</p>\n<ul>\n<li><p>sadd添加一个元素到set</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sadd superpowers &quot;flight&quot;   //[&quot;flight&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd superpowers &quot;x-ray vision&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd superpowers &quot;reflexes&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;, &quot;reflexes&quot;]</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; SADD superpowers &quot;flight&quot;   //重复添加无效</div><div class=\"line\">(integer) 0</div></pre></td></tr></table></figure>\n</li>\n<li><p>srem从set中移除一个元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; srem superpowers &quot;reflexes&quot;   //[&quot;flight&quot;, &quot;x-ray vision&quot;]</div><div class=\"line\">1</div></pre></td></tr></table></figure>\n</li>\n<li><p>sismember测试一个元素是否存在于set，存在返回1，不存在返回0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sismember superpowers &quot;flight&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sismember superpowers &quot;reflexes&quot;</div><div class=\"line\">(integer) 0</div></pre></td></tr></table></figure>\n</li>\n<li><p>smembers查看set所有元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sismember superpowers</div><div class=\"line\">1) &quot;x-ray vision&quot;</div><div class=\"line\">2) &quot;flight&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>sunion联合多个set并返回它们的合集</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; sadd birdpowers &quot;pecking&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; sadd birdpowers &quot;flight&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; smembers birdpowers</div><div class=\"line\">1) &quot;pecking&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">&gt; smembers superpowers</div><div class=\"line\">1) &quot;x-ray vision&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">&gt; sunion superpowers birdpowers   //无序的 sunion birdpowers superpowers结果一样</div><div class=\"line\">1) &quot;pecking&quot;</div><div class=\"line\">2) &quot;flight&quot;</div><div class=\"line\">3) &quot;x-ray vision&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"sorted-set操作：zadd-zrange\"><a href=\"#sorted-set操作：zadd-zrange\" class=\"headerlink\" title=\"sorted set操作：zadd zrange\"></a>sorted set操作：zadd zrange</h2><p>有序集合(sorted set)类似集合，不过它每个元素有一个关联值，通过这个关联值对元素进行排序。</p>\n<ul>\n<li><p>zadd为一个有序集合添加元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; zadd hackers 1940 &quot;Alan Kay&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1906 &quot;Grace Hopper&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1953 &quot;Richard Stallman&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1965 &quot;Yukihiro Matsumoto&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1916 &quot;Claude Shannon&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1969 &quot;Linus Torvalds&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1957 &quot;Sophie Wilson&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; zadd hackers 1912 &quot;Alan Turing&quot;</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure>\n</li>\n<li><p>zrange类似于lrange，查看sorted set元素。接受两个参数，开始index和结尾index，如果结尾index为-1，表示直到末尾</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; zrange hackers 0 -1</div><div class=\"line\">1) &quot;Grace Hopper&quot;</div><div class=\"line\">2) &quot;Alan Turing&quot;</div><div class=\"line\">3) &quot;Claude Shannon&quot;</div><div class=\"line\">4) &quot;Alan Kay&quot;</div><div class=\"line\">5) &quot;Richard Stallman&quot;</div><div class=\"line\">6) &quot;Sophie Wilson&quot;</div><div class=\"line\">7) &quot;Yukihiro Matsumoto&quot;</div><div class=\"line\">8) &quot;Linus Torvalds&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以看到元素以年份递增排序。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ZRANGE hackers 2 4</div><div class=\"line\">1) &quot;Claude Shannon&quot;</div><div class=\"line\">2) &quot;Alan Kay&quot;</div><div class=\"line\">3) &quot;Richard Stallman&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"hash操作：hset-amp-hget-amp-hgetall-amp-hmset-amp-hincrby-amp-hdel\"><a href=\"#hash操作：hset-amp-hget-amp-hgetall-amp-hmset-amp-hincrby-amp-hdel\" class=\"headerlink\" title=\"hash操作：hset &amp; hget &amp; hgetall &amp; hmset &amp; hincrby &amp; hdel\"></a>hash操作：hset &amp; hget &amp; hgetall &amp; hmset &amp; hincrby &amp; hdel</h2><p> hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。</p>\n<ul>\n<li>hset添加值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user name &quot;tenny&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hset user email &quot;tenny@example.com&quot;</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hset user password &quot;cutepanda&quot;</div><div class=\"line\">(integer) 1</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>hget获取值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hget user name</div><div class=\"line\">&quot;tenny&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>hgetall获取所有值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hgetall user</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny&quot;</div><div class=\"line\">3) &quot;email&quot;</div><div class=\"line\">4) &quot;tenny@example.com&quot;</div><div class=\"line\">5) &quot;password&quot;</div><div class=\"line\">6) &quot;cutepanda&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>hmset一次性设置多个值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hmset user1 name &quot;tenny1&quot; password &quot;cutepanda1&quot; email &quot;tenny1@example.com&quot;</div><div class=\"line\">OK</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以使用hset继续添加或修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user1 age 22</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div><div class=\"line\">7) &quot;age&quot;</div><div class=\"line\">8) &quot;22&quot;</div><div class=\"line\">&gt; hset user1 age 24   //已存在的值重复设定返回0，新值返回1</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hgetall user1</div><div class=\"line\">1) &quot;name&quot;</div><div class=\"line\">2) &quot;tenny1&quot;</div><div class=\"line\">3) &quot;password&quot;</div><div class=\"line\">4) &quot;cutepanda1&quot;</div><div class=\"line\">5) &quot;email&quot;</div><div class=\"line\">6) &quot;tenny1@example.com&quot;</div><div class=\"line\">7) &quot;age&quot;</div><div class=\"line\">8) &quot;24&quot;</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>hincrby增加数值型域的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hset user visits 10</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hincrby user visits 1</div><div class=\"line\">(integer) 11</div><div class=\"line\">&gt; hincrby user visits 1</div><div class=\"line\">(integer) 12</div></pre></td></tr></table></figure>\n</li>\n<li><p>hdel删除指定的域</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hdel user visits</div><div class=\"line\">(integer) 1</div><div class=\"line\">&gt; hdel user age   //删除不存在的域返回0</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hdel user visits</div><div class=\"line\">(integer) 0</div><div class=\"line\">&gt; hincrby user visits 20    //字段不存在则默认设置为0后再执行此增加操作</div><div class=\"line\">(integer) 20</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<font size=\"5\">以上介绍了redis的一些简单命令，可以访问<a href=\"http://www.redis.cn/commands.html\">redis中文官方网站</a>了解更多。</font>\n"},{"layout":"title","title":"spring整合dubbo(zookeeper)","date":"2017-05-04T01:47:17.000Z","_content":"\n# dubbo是什么\nDubbo是阿里巴巴公司开源的一个高性能优秀的分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。可以和Spring框架无缝集成。\n\n主要核心部件\n* 远程通讯：提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。\n* 集群容错：提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。\n* 自动发现：基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。\n\n# dubbo能做什么\n* 透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。\n* 软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。\n* 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。\n\n# dubbo的架构\n![dubbo架构图](spring整合dubbo-zookeeper/dubbo架构图.png)\n\n节点角色说明：\n* Provider：暴露服务方称之为“服务提供者”。\n* Consumer：调用远程服务方称之为“服务消费者”。\n* Registry：服务注册与发现的中心目录服务称之为“服务注册中心”。\n* Monitor：统计服务的调用次数和调用时间的日志服务称之为“服务监控中心”。\n* Container：服务运行容器。\n\n调用关系说明：\n0. 服务容器负责启动，加载，运行服务提供者。\n\n1. 服务提供者在启动时，向注册中心注册自己提供的服务。\n\n2. 服务消费者在启动时，向注册中心订阅自己所需的服务。\n\n3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。\n\n4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。\n\n5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。\n\n# spring集成使用\nDubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。\n\n##  下载zookeeper\nzookeeper是一个分布式服务框架，本例使用zookeeper管理dubbo服务。下载地址：http://www.apache.org/dyn/closer.cgi/zookeeper/  下载后解压即可，进\n入zookeeper根目录下的bin目录，如D:\\devsoft\\zookeeper-3.4.8\\bin，双击zkServer.cmd启动注册中心服务。\n\n## 服务提供者\n新建一个maven工程，作为服务提供方。\n\n### pom.xml\n除了基本的spring等依赖，额外添加dubbo和zkclient依赖：\n```\n<!-- spring dubbo 整合 -->\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>dubbo</artifactId>\n    <version>2.5.3</version>\n</dependency>\n\n<!-- dubbo注册在zookeeper上，必须引用zkclient -->\n<dependency>\n    <groupId>com.github.sgroschupf</groupId>\n    <artifactId>zkclient</artifactId>\n    <version>0.1</version>\n</dependency>\n```\n\n### spring-dubbo.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   \txmlns:dubbo=\"http://code.alibabatech.com/schema/dubbo\"\n   \txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd\">\n\n    <!-- 提供方应用信息，用于计算依赖关系 -->\n    <dubbo:application name=\"dubbo_service_provider\" />\n\n    <!--使用zookeeper注册中心暴露和发现服务地址 -->\n    <dubbo:registry address=\"zookeeper://127.0.0.1:2181\" />\n\n    <!-- 用dubbo协议在20880端口暴露服务 -->  \n    <dubbo:protocol name=\"dubbo\" port=\"20880\" />\n\n    <!-- 声明需要暴露的服务接口 -->  \n    <dubbo:service interface=\"com.news.service.IDubboService\" ref=\"dubboService\" />\n\n    <!-- 具体的实现bean -->  \n    <bean id=\"dubboService\" class=\"com.news.service.impl.DubboServiceImpl\" />\n\n</beans>\n```\n\n### IDubboService & DubboServiceImpl\n```\npackage com.news.service;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic interface IDubboService {\n\tpublic void sayHello(String name);\n}\n```\n```\npackage com.news.service.impl;\n\nimport com.news.service.IDubboService;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class DubboServiceImpl implements IDubboService {\n\n\t@Override\n\tpublic void sayHello(String name) {\n\t\tSystem.out.println(\"hello: \" + name);\n\t}\n\n}\n```\n\n### TestDubbo.java\n```\npackage news;\n\nimport java.io.IOException;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestDubbo {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"dubbo/spring-dubbo.xml\");\n\n\t\tSystem.in.read(); // 为保证服务一直开着，利用输入流的阻塞来模拟\n\t}\n\n}\n```\n运行TestDubbo.java，我们的服务提供方就完成了。\n\n## 服务消费者\n再新建一个maven工程，作为服务消费者。\n\n### pom.xml\n消费者引入之前服务提供者的服务(这里引用了整个项目，实际中项目会分层，只需引用对应的service层即可)。\n```\n<dependency>\n  <groupId>org.news</groupId>\n  <artifactId>news</artifactId>\n  <version>${news.version}</version>\n</dependency>\n```\n服务提供者对应的工程信息：\n```\n<groupId>org.news</groupId>\n<artifactId>news</artifactId>\n<packaging>war</packaging>\n<version>0.0.1</version>\n```\n\n### spring-dubbo.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   \txmlns:dubbo=\"http://code.alibabatech.com/schema/dubbo\"\n   \txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd\">\n\n    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->\n    <dubbo:application name=\"dubbo_service_consumer\" />\n\n    <!--使用zookeeper注册中心暴露和发现服务地址 -->\n    <dubbo:registry protocol=\"zookeeper\" address=\"127.0.0.1:2181\" />\n\n    <!-- 生成远程服务代理，可以像使用本地bean一样使用userService -->  \n    <dubbo:reference id=\"dubboService\" interface=\"com.news.service.IDubboService\"/>\n\n</beans>\n```\n这里的\"dubbo:application name\"虽然说名字不要一样，实际测试一样也没啥问题。。。\n\n### TestDubbo.java\n```\npackage test;\n\nimport java.io.IOException;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport com.news.service.IDubboService;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestDubbo {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-dubbo.xml\");\n\t\tIDubboService dubboService = (IDubboService) context.getBean(\"dubboService\");\n\t\tdubboService.sayHello(\"dubbo\");\n\t}\n\n}\n```\n运行TestDubbo.java，可以发现服务提供方的控制台输出\n```\nhello: dubbo\n```\n说明服务已经被调用成功了。\n\n# dubbo管理页面\n网上搜索dubbo控制台页面，下载dubbo-admin.war。\n自己下载的地址：http://www.pc6.com/softview/SoftView_468561.html\n\n### 使用方法\n先把tomcat下的webapps\\ROOT目录下内容清空，将war包解压，解压的内容放进ROOT目录下。进入tomcat下的bin目录，运行startup.bat。\n\n运行如果出现类似如下错误\n```\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'URIType' of bean class [com.alibaba.citrus.service.uribroker.uri.GenericURIBroker]: Bean property 'URIType' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n```\n因为使用的jdk版本为1.8，不支持dubbo-admin中编写的方法。参考：http://blog.csdn.net/liutengteng130/article/details/47112683\n\n解决办法可以降低jdk版本到1.7，但是项目都用了1.8，不想单独为它改环境变量。另一个办法是：\n找到tomcat/bin目录中的setclasspath.bat，修改setclasspath.bat文件：\n```\nif \"\"%1\"\" == \"\"debug\"\" goto needJavaHome\n\nset JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71\n\nrem Otherwise either JRE or JDK are fine\nif not \"%JRE_HOME%\" == \"\" goto gotJreHome\nif not \"%JAVA_HOME%\" == \"\" goto gotJavaHome\necho Neither the JAVA_HOME nor the JRE_HOME environment variable is defined\necho At least one of these environment variable is needed to run this program\ngoto exit\n```\n在合适位置加上这一行：set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71\n\n### 查看页面\n启动成功后，浏览器输入http://localhost:8080/ 就可以访问了。\n\n第一次进入要求输入账号密码，默认root/root。\n* 管理页面\n![管理页面](spring整合dubbo-zookeeper/20170504111203.png)\n\n* 应用页面\n![应用页面](spring整合dubbo-zookeeper/20170504112120.png)\n\n* 提供者页面\n![提供者页面](spring整合dubbo-zookeeper/20170504112507.png)\n\n* 消费者页面\n![消费者页面](spring整合dubbo-zookeeper/20170504112642.png)\n\n* 服务页面\n![服务页面](spring整合dubbo-zookeeper/20170504112741.png)\n\n参考博客：http://www.cnblogs.com/Javame/p/3632473.html\n","source":"_posts/spring整合dubbo-zookeeper.md","raw":"---\nlayout: title\ntitle: spring整合dubbo(zookeeper)\ndate: 2017-05-04 09:47:17\ntags: [spring, dubbo]\ncategories: dubbo\n---\n\n# dubbo是什么\nDubbo是阿里巴巴公司开源的一个高性能优秀的分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。可以和Spring框架无缝集成。\n\n主要核心部件\n* 远程通讯：提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。\n* 集群容错：提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。\n* 自动发现：基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。\n\n# dubbo能做什么\n* 透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。\n* 软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。\n* 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。\n\n# dubbo的架构\n![dubbo架构图](spring整合dubbo-zookeeper/dubbo架构图.png)\n\n节点角色说明：\n* Provider：暴露服务方称之为“服务提供者”。\n* Consumer：调用远程服务方称之为“服务消费者”。\n* Registry：服务注册与发现的中心目录服务称之为“服务注册中心”。\n* Monitor：统计服务的调用次数和调用时间的日志服务称之为“服务监控中心”。\n* Container：服务运行容器。\n\n调用关系说明：\n0. 服务容器负责启动，加载，运行服务提供者。\n\n1. 服务提供者在启动时，向注册中心注册自己提供的服务。\n\n2. 服务消费者在启动时，向注册中心订阅自己所需的服务。\n\n3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。\n\n4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。\n\n5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。\n\n# spring集成使用\nDubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。\n\n##  下载zookeeper\nzookeeper是一个分布式服务框架，本例使用zookeeper管理dubbo服务。下载地址：http://www.apache.org/dyn/closer.cgi/zookeeper/  下载后解压即可，进\n入zookeeper根目录下的bin目录，如D:\\devsoft\\zookeeper-3.4.8\\bin，双击zkServer.cmd启动注册中心服务。\n\n## 服务提供者\n新建一个maven工程，作为服务提供方。\n\n### pom.xml\n除了基本的spring等依赖，额外添加dubbo和zkclient依赖：\n```\n<!-- spring dubbo 整合 -->\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>dubbo</artifactId>\n    <version>2.5.3</version>\n</dependency>\n\n<!-- dubbo注册在zookeeper上，必须引用zkclient -->\n<dependency>\n    <groupId>com.github.sgroschupf</groupId>\n    <artifactId>zkclient</artifactId>\n    <version>0.1</version>\n</dependency>\n```\n\n### spring-dubbo.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   \txmlns:dubbo=\"http://code.alibabatech.com/schema/dubbo\"\n   \txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd\">\n\n    <!-- 提供方应用信息，用于计算依赖关系 -->\n    <dubbo:application name=\"dubbo_service_provider\" />\n\n    <!--使用zookeeper注册中心暴露和发现服务地址 -->\n    <dubbo:registry address=\"zookeeper://127.0.0.1:2181\" />\n\n    <!-- 用dubbo协议在20880端口暴露服务 -->  \n    <dubbo:protocol name=\"dubbo\" port=\"20880\" />\n\n    <!-- 声明需要暴露的服务接口 -->  \n    <dubbo:service interface=\"com.news.service.IDubboService\" ref=\"dubboService\" />\n\n    <!-- 具体的实现bean -->  \n    <bean id=\"dubboService\" class=\"com.news.service.impl.DubboServiceImpl\" />\n\n</beans>\n```\n\n### IDubboService & DubboServiceImpl\n```\npackage com.news.service;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic interface IDubboService {\n\tpublic void sayHello(String name);\n}\n```\n```\npackage com.news.service.impl;\n\nimport com.news.service.IDubboService;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class DubboServiceImpl implements IDubboService {\n\n\t@Override\n\tpublic void sayHello(String name) {\n\t\tSystem.out.println(\"hello: \" + name);\n\t}\n\n}\n```\n\n### TestDubbo.java\n```\npackage news;\n\nimport java.io.IOException;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestDubbo {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"dubbo/spring-dubbo.xml\");\n\n\t\tSystem.in.read(); // 为保证服务一直开着，利用输入流的阻塞来模拟\n\t}\n\n}\n```\n运行TestDubbo.java，我们的服务提供方就完成了。\n\n## 服务消费者\n再新建一个maven工程，作为服务消费者。\n\n### pom.xml\n消费者引入之前服务提供者的服务(这里引用了整个项目，实际中项目会分层，只需引用对应的service层即可)。\n```\n<dependency>\n  <groupId>org.news</groupId>\n  <artifactId>news</artifactId>\n  <version>${news.version}</version>\n</dependency>\n```\n服务提供者对应的工程信息：\n```\n<groupId>org.news</groupId>\n<artifactId>news</artifactId>\n<packaging>war</packaging>\n<version>0.0.1</version>\n```\n\n### spring-dubbo.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   \txmlns:dubbo=\"http://code.alibabatech.com/schema/dubbo\"\n   \txsi:schemaLocation=\"http://www.springframework.org/schema/beans\n\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo\n\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd\">\n\n    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->\n    <dubbo:application name=\"dubbo_service_consumer\" />\n\n    <!--使用zookeeper注册中心暴露和发现服务地址 -->\n    <dubbo:registry protocol=\"zookeeper\" address=\"127.0.0.1:2181\" />\n\n    <!-- 生成远程服务代理，可以像使用本地bean一样使用userService -->  \n    <dubbo:reference id=\"dubboService\" interface=\"com.news.service.IDubboService\"/>\n\n</beans>\n```\n这里的\"dubbo:application name\"虽然说名字不要一样，实际测试一样也没啥问题。。。\n\n### TestDubbo.java\n```\npackage test;\n\nimport java.io.IOException;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport com.news.service.IDubboService;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestDubbo {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-dubbo.xml\");\n\t\tIDubboService dubboService = (IDubboService) context.getBean(\"dubboService\");\n\t\tdubboService.sayHello(\"dubbo\");\n\t}\n\n}\n```\n运行TestDubbo.java，可以发现服务提供方的控制台输出\n```\nhello: dubbo\n```\n说明服务已经被调用成功了。\n\n# dubbo管理页面\n网上搜索dubbo控制台页面，下载dubbo-admin.war。\n自己下载的地址：http://www.pc6.com/softview/SoftView_468561.html\n\n### 使用方法\n先把tomcat下的webapps\\ROOT目录下内容清空，将war包解压，解压的内容放进ROOT目录下。进入tomcat下的bin目录，运行startup.bat。\n\n运行如果出现类似如下错误\n```\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'URIType' of bean class [com.alibaba.citrus.service.uribroker.uri.GenericURIBroker]: Bean property 'URIType' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n```\n因为使用的jdk版本为1.8，不支持dubbo-admin中编写的方法。参考：http://blog.csdn.net/liutengteng130/article/details/47112683\n\n解决办法可以降低jdk版本到1.7，但是项目都用了1.8，不想单独为它改环境变量。另一个办法是：\n找到tomcat/bin目录中的setclasspath.bat，修改setclasspath.bat文件：\n```\nif \"\"%1\"\" == \"\"debug\"\" goto needJavaHome\n\nset JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71\n\nrem Otherwise either JRE or JDK are fine\nif not \"%JRE_HOME%\" == \"\" goto gotJreHome\nif not \"%JAVA_HOME%\" == \"\" goto gotJavaHome\necho Neither the JAVA_HOME nor the JRE_HOME environment variable is defined\necho At least one of these environment variable is needed to run this program\ngoto exit\n```\n在合适位置加上这一行：set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71\n\n### 查看页面\n启动成功后，浏览器输入http://localhost:8080/ 就可以访问了。\n\n第一次进入要求输入账号密码，默认root/root。\n* 管理页面\n![管理页面](spring整合dubbo-zookeeper/20170504111203.png)\n\n* 应用页面\n![应用页面](spring整合dubbo-zookeeper/20170504112120.png)\n\n* 提供者页面\n![提供者页面](spring整合dubbo-zookeeper/20170504112507.png)\n\n* 消费者页面\n![消费者页面](spring整合dubbo-zookeeper/20170504112642.png)\n\n* 服务页面\n![服务页面](spring整合dubbo-zookeeper/20170504112741.png)\n\n参考博客：http://www.cnblogs.com/Javame/p/3632473.html\n","slug":"spring整合dubbo-zookeeper","published":1,"updated":"2017-05-04T06:15:27.017Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0eb000tiko0f8fdbgvl","content":"<h1 id=\"dubbo是什么\"><a href=\"#dubbo是什么\" class=\"headerlink\" title=\"dubbo是什么\"></a>dubbo是什么</h1><p>Dubbo是阿里巴巴公司开源的一个高性能优秀的分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。可以和Spring框架无缝集成。</p>\n<p>主要核心部件</p>\n<ul>\n<li>远程通讯：提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。</li>\n<li>集群容错：提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。</li>\n<li>自动发现：基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</li>\n</ul>\n<h1 id=\"dubbo能做什么\"><a href=\"#dubbo能做什么\" class=\"headerlink\" title=\"dubbo能做什么\"></a>dubbo能做什么</h1><ul>\n<li>透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。</li>\n<li>软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。</li>\n<li>服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。</li>\n</ul>\n<h1 id=\"dubbo的架构\"><a href=\"#dubbo的架构\" class=\"headerlink\" title=\"dubbo的架构\"></a>dubbo的架构</h1><p><img src=\"/2017/05/04/spring整合dubbo-zookeeper/dubbo架构图.png\" alt=\"dubbo架构图\"></p>\n<p>节点角色说明：</p>\n<ul>\n<li>Provider：暴露服务方称之为“服务提供者”。</li>\n<li>Consumer：调用远程服务方称之为“服务消费者”。</li>\n<li>Registry：服务注册与发现的中心目录服务称之为“服务注册中心”。</li>\n<li>Monitor：统计服务的调用次数和调用时间的日志服务称之为“服务监控中心”。</li>\n<li>Container：服务运行容器。</li>\n</ul>\n<p>调用关系说明：</p>\n<ol>\n<li><p>服务容器负责启动，加载，运行服务提供者。</p>\n</li>\n<li><p>服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n</li>\n<li><p>服务消费者在启动时，向注册中心订阅自己所需的服务。</p>\n</li>\n<li><p>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</p>\n</li>\n<li><p>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n</li>\n<li><p>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p>\n</li>\n</ol>\n<h1 id=\"spring集成使用\"><a href=\"#spring集成使用\" class=\"headerlink\" title=\"spring集成使用\"></a>spring集成使用</h1><p>Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。</p>\n<h2 id=\"下载zookeeper\"><a href=\"#下载zookeeper\" class=\"headerlink\" title=\"下载zookeeper\"></a>下载zookeeper</h2><p>zookeeper是一个分布式服务框架，本例使用zookeeper管理dubbo服务。下载地址：<a href=\"http://www.apache.org/dyn/closer.cgi/zookeeper/\" target=\"_blank\" rel=\"external\">http://www.apache.org/dyn/closer.cgi/zookeeper/</a>  下载后解压即可，进<br>入zookeeper根目录下的bin目录，如D:\\devsoft\\zookeeper-3.4.8\\bin，双击zkServer.cmd启动注册中心服务。</p>\n<h2 id=\"服务提供者\"><a href=\"#服务提供者\" class=\"headerlink\" title=\"服务提供者\"></a>服务提供者</h2><p>新建一个maven工程，作为服务提供方。</p>\n<h3 id=\"pom-xml\"><a href=\"#pom-xml\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h3><p>除了基本的spring等依赖，额外添加dubbo和zkclient依赖：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- spring dubbo 整合 --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;dubbo&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.5.3&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- dubbo注册在zookeeper上，必须引用zkclient --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.github.sgroschupf&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;0.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"spring-dubbo-xml\"><a href=\"#spring-dubbo-xml\" class=\"headerlink\" title=\"spring-dubbo.xml\"></a>spring-dubbo.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">   \txmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot;</div><div class=\"line\">   \txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;</div><div class=\"line\">    &lt;dubbo:application name=&quot;dubbo_service_provider&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!--使用zookeeper注册中心暴露和发现服务地址 --&gt;</div><div class=\"line\">    &lt;dubbo:registry address=&quot;zookeeper://127.0.0.1:2181&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;  </div><div class=\"line\">    &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 声明需要暴露的服务接口 --&gt;  </div><div class=\"line\">    &lt;dubbo:service interface=&quot;com.news.service.IDubboService&quot; ref=&quot;dubboService&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 具体的实现bean --&gt;  </div><div class=\"line\">    &lt;bean id=&quot;dubboService&quot; class=&quot;com.news.service.impl.DubboServiceImpl&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"IDubboService-amp-DubboServiceImpl\"><a href=\"#IDubboService-amp-DubboServiceImpl\" class=\"headerlink\" title=\"IDubboService &amp; DubboServiceImpl\"></a>IDubboService &amp; DubboServiceImpl</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.service;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public interface IDubboService &#123;</div><div class=\"line\">\tpublic void sayHello(String name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.service.impl;</div><div class=\"line\"></div><div class=\"line\">import com.news.service.IDubboService;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class DubboServiceImpl implements IDubboService &#123;</div><div class=\"line\"></div><div class=\"line\">\t@Override</div><div class=\"line\">\tpublic void sayHello(String name) &#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;hello: &quot; + name);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TestDubbo-java\"><a href=\"#TestDubbo-java\" class=\"headerlink\" title=\"TestDubbo.java\"></a>TestDubbo.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package news;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestDubbo &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) throws IOException &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;dubbo/spring-dubbo.xml&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.in.read(); // 为保证服务一直开着，利用输入流的阻塞来模拟</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行TestDubbo.java，我们的服务提供方就完成了。</p>\n<h2 id=\"服务消费者\"><a href=\"#服务消费者\" class=\"headerlink\" title=\"服务消费者\"></a>服务消费者</h2><p>再新建一个maven工程，作为服务消费者。</p>\n<h3 id=\"pom-xml-1\"><a href=\"#pom-xml-1\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h3><p>消费者引入之前服务提供者的服务(这里引用了整个项目，实际中项目会分层，只需引用对应的service层即可)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.news&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;news&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;$&#123;news.version&#125;&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>服务提供者对应的工程信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;groupId&gt;org.news&lt;/groupId&gt;</div><div class=\"line\">&lt;artifactId&gt;news&lt;/artifactId&gt;</div><div class=\"line\">&lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">&lt;version&gt;0.0.1&lt;/version&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"spring-dubbo-xml-1\"><a href=\"#spring-dubbo-xml-1\" class=\"headerlink\" title=\"spring-dubbo.xml\"></a>spring-dubbo.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">   \txmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot;</div><div class=\"line\">   \txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&gt;</div><div class=\"line\">    &lt;dubbo:application name=&quot;dubbo_service_consumer&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!--使用zookeeper注册中心暴露和发现服务地址 --&gt;</div><div class=\"line\">    &lt;dubbo:registry protocol=&quot;zookeeper&quot; address=&quot;127.0.0.1:2181&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 生成远程服务代理，可以像使用本地bean一样使用userService --&gt;  </div><div class=\"line\">    &lt;dubbo:reference id=&quot;dubboService&quot; interface=&quot;com.news.service.IDubboService&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<p>这里的”dubbo:application name”虽然说名字不要一样，实际测试一样也没啥问题。。。</p>\n<h3 id=\"TestDubbo-java-1\"><a href=\"#TestDubbo-java-1\" class=\"headerlink\" title=\"TestDubbo.java\"></a>TestDubbo.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">package test;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">import com.news.service.IDubboService;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestDubbo &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) throws IOException &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-dubbo.xml&quot;);</div><div class=\"line\">\t\tIDubboService dubboService = (IDubboService) context.getBean(&quot;dubboService&quot;);</div><div class=\"line\">\t\tdubboService.sayHello(&quot;dubbo&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行TestDubbo.java，可以发现服务提供方的控制台输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hello: dubbo</div></pre></td></tr></table></figure></p>\n<p>说明服务已经被调用成功了。</p>\n<h1 id=\"dubbo管理页面\"><a href=\"#dubbo管理页面\" class=\"headerlink\" title=\"dubbo管理页面\"></a>dubbo管理页面</h1><p>网上搜索dubbo控制台页面，下载dubbo-admin.war。<br>自己下载的地址：<a href=\"http://www.pc6.com/softview/SoftView_468561.html\" target=\"_blank\" rel=\"external\">http://www.pc6.com/softview/SoftView_468561.html</a></p>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><p>先把tomcat下的webapps\\ROOT目录下内容清空，将war包解压，解压的内容放进ROOT目录下。进入tomcat下的bin目录，运行startup.bat。</p>\n<p>运行如果出现类似如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property &apos;URIType&apos; of bean class [com.alibaba.citrus.service.uribroker.uri.GenericURIBroker]: Bean property &apos;URIType&apos; is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?</div></pre></td></tr></table></figure></p>\n<p>因为使用的jdk版本为1.8，不支持dubbo-admin中编写的方法。参考：<a href=\"http://blog.csdn.net/liutengteng130/article/details/47112683\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/liutengteng130/article/details/47112683</a></p>\n<p>解决办法可以降低jdk版本到1.7，但是项目都用了1.8，不想单独为它改环境变量。另一个办法是：<br>找到tomcat/bin目录中的setclasspath.bat，修改setclasspath.bat文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">if &quot;&quot;%1&quot;&quot; == &quot;&quot;debug&quot;&quot; goto needJavaHome</div><div class=\"line\"></div><div class=\"line\">set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71</div><div class=\"line\"></div><div class=\"line\">rem Otherwise either JRE or JDK are fine</div><div class=\"line\">if not &quot;%JRE_HOME%&quot; == &quot;&quot; goto gotJreHome</div><div class=\"line\">if not &quot;%JAVA_HOME%&quot; == &quot;&quot; goto gotJavaHome</div><div class=\"line\">echo Neither the JAVA_HOME nor the JRE_HOME environment variable is defined</div><div class=\"line\">echo At least one of these environment variable is needed to run this program</div><div class=\"line\">goto exit</div></pre></td></tr></table></figure></p>\n<p>在合适位置加上这一行：set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71</p>\n<h3 id=\"查看页面\"><a href=\"#查看页面\" class=\"headerlink\" title=\"查看页面\"></a>查看页面</h3><p>启动成功后，浏览器输入<a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"external\">http://localhost:8080/</a> 就可以访问了。</p>\n<p>第一次进入要求输入账号密码，默认root/root。</p>\n<ul>\n<li><p>管理页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504111203.png\" alt=\"管理页面\"></p>\n</li>\n<li><p>应用页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112120.png\" alt=\"应用页面\"></p>\n</li>\n<li><p>提供者页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112507.png\" alt=\"提供者页面\"></p>\n</li>\n<li><p>消费者页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112642.png\" alt=\"消费者页面\"></p>\n</li>\n<li><p>服务页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112741.png\" alt=\"服务页面\"></p>\n</li>\n</ul>\n<p>参考博客：<a href=\"http://www.cnblogs.com/Javame/p/3632473.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/Javame/p/3632473.html</a></p>\n","excerpt":"","more":"<h1 id=\"dubbo是什么\"><a href=\"#dubbo是什么\" class=\"headerlink\" title=\"dubbo是什么\"></a>dubbo是什么</h1><p>Dubbo是阿里巴巴公司开源的一个高性能优秀的分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。可以和Spring框架无缝集成。</p>\n<p>主要核心部件</p>\n<ul>\n<li>远程通讯：提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。</li>\n<li>集群容错：提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。</li>\n<li>自动发现：基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</li>\n</ul>\n<h1 id=\"dubbo能做什么\"><a href=\"#dubbo能做什么\" class=\"headerlink\" title=\"dubbo能做什么\"></a>dubbo能做什么</h1><ul>\n<li>透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。</li>\n<li>软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。</li>\n<li>服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。</li>\n</ul>\n<h1 id=\"dubbo的架构\"><a href=\"#dubbo的架构\" class=\"headerlink\" title=\"dubbo的架构\"></a>dubbo的架构</h1><p><img src=\"/2017/05/04/spring整合dubbo-zookeeper/dubbo架构图.png\" alt=\"dubbo架构图\"></p>\n<p>节点角色说明：</p>\n<ul>\n<li>Provider：暴露服务方称之为“服务提供者”。</li>\n<li>Consumer：调用远程服务方称之为“服务消费者”。</li>\n<li>Registry：服务注册与发现的中心目录服务称之为“服务注册中心”。</li>\n<li>Monitor：统计服务的调用次数和调用时间的日志服务称之为“服务监控中心”。</li>\n<li>Container：服务运行容器。</li>\n</ul>\n<p>调用关系说明：</p>\n<ol>\n<li><p>服务容器负责启动，加载，运行服务提供者。</p>\n</li>\n<li><p>服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n</li>\n<li><p>服务消费者在启动时，向注册中心订阅自己所需的服务。</p>\n</li>\n<li><p>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</p>\n</li>\n<li><p>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n</li>\n<li><p>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p>\n</li>\n</ol>\n<h1 id=\"spring集成使用\"><a href=\"#spring集成使用\" class=\"headerlink\" title=\"spring集成使用\"></a>spring集成使用</h1><p>Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。</p>\n<h2 id=\"下载zookeeper\"><a href=\"#下载zookeeper\" class=\"headerlink\" title=\"下载zookeeper\"></a>下载zookeeper</h2><p>zookeeper是一个分布式服务框架，本例使用zookeeper管理dubbo服务。下载地址：<a href=\"http://www.apache.org/dyn/closer.cgi/zookeeper/\">http://www.apache.org/dyn/closer.cgi/zookeeper/</a>  下载后解压即可，进<br>入zookeeper根目录下的bin目录，如D:\\devsoft\\zookeeper-3.4.8\\bin，双击zkServer.cmd启动注册中心服务。</p>\n<h2 id=\"服务提供者\"><a href=\"#服务提供者\" class=\"headerlink\" title=\"服务提供者\"></a>服务提供者</h2><p>新建一个maven工程，作为服务提供方。</p>\n<h3 id=\"pom-xml\"><a href=\"#pom-xml\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h3><p>除了基本的spring等依赖，额外添加dubbo和zkclient依赖：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- spring dubbo 整合 --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;dubbo&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.5.3&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- dubbo注册在zookeeper上，必须引用zkclient --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.github.sgroschupf&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;0.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"spring-dubbo-xml\"><a href=\"#spring-dubbo-xml\" class=\"headerlink\" title=\"spring-dubbo.xml\"></a>spring-dubbo.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">   \txmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot;</div><div class=\"line\">   \txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;</div><div class=\"line\">    &lt;dubbo:application name=&quot;dubbo_service_provider&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!--使用zookeeper注册中心暴露和发现服务地址 --&gt;</div><div class=\"line\">    &lt;dubbo:registry address=&quot;zookeeper://127.0.0.1:2181&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;  </div><div class=\"line\">    &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 声明需要暴露的服务接口 --&gt;  </div><div class=\"line\">    &lt;dubbo:service interface=&quot;com.news.service.IDubboService&quot; ref=&quot;dubboService&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 具体的实现bean --&gt;  </div><div class=\"line\">    &lt;bean id=&quot;dubboService&quot; class=&quot;com.news.service.impl.DubboServiceImpl&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"IDubboService-amp-DubboServiceImpl\"><a href=\"#IDubboService-amp-DubboServiceImpl\" class=\"headerlink\" title=\"IDubboService &amp; DubboServiceImpl\"></a>IDubboService &amp; DubboServiceImpl</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.service;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public interface IDubboService &#123;</div><div class=\"line\">\tpublic void sayHello(String name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.service.impl;</div><div class=\"line\"></div><div class=\"line\">import com.news.service.IDubboService;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class DubboServiceImpl implements IDubboService &#123;</div><div class=\"line\"></div><div class=\"line\">\t@Override</div><div class=\"line\">\tpublic void sayHello(String name) &#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;hello: &quot; + name);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TestDubbo-java\"><a href=\"#TestDubbo-java\" class=\"headerlink\" title=\"TestDubbo.java\"></a>TestDubbo.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package news;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestDubbo &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) throws IOException &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;dubbo/spring-dubbo.xml&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.in.read(); // 为保证服务一直开着，利用输入流的阻塞来模拟</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行TestDubbo.java，我们的服务提供方就完成了。</p>\n<h2 id=\"服务消费者\"><a href=\"#服务消费者\" class=\"headerlink\" title=\"服务消费者\"></a>服务消费者</h2><p>再新建一个maven工程，作为服务消费者。</p>\n<h3 id=\"pom-xml-1\"><a href=\"#pom-xml-1\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h3><p>消费者引入之前服务提供者的服务(这里引用了整个项目，实际中项目会分层，只需引用对应的service层即可)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.news&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;news&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;$&#123;news.version&#125;&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>服务提供者对应的工程信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;groupId&gt;org.news&lt;/groupId&gt;</div><div class=\"line\">&lt;artifactId&gt;news&lt;/artifactId&gt;</div><div class=\"line\">&lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">&lt;version&gt;0.0.1&lt;/version&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"spring-dubbo-xml-1\"><a href=\"#spring-dubbo-xml-1\" class=\"headerlink\" title=\"spring-dubbo.xml\"></a>spring-dubbo.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">   \txmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot;</div><div class=\"line\">   \txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo</div><div class=\"line\">\t\t\t\t       \thttp://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&gt;</div><div class=\"line\">    &lt;dubbo:application name=&quot;dubbo_service_consumer&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!--使用zookeeper注册中心暴露和发现服务地址 --&gt;</div><div class=\"line\">    &lt;dubbo:registry protocol=&quot;zookeeper&quot; address=&quot;127.0.0.1:2181&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;!-- 生成远程服务代理，可以像使用本地bean一样使用userService --&gt;  </div><div class=\"line\">    &lt;dubbo:reference id=&quot;dubboService&quot; interface=&quot;com.news.service.IDubboService&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<p>这里的”dubbo:application name”虽然说名字不要一样，实际测试一样也没啥问题。。。</p>\n<h3 id=\"TestDubbo-java-1\"><a href=\"#TestDubbo-java-1\" class=\"headerlink\" title=\"TestDubbo.java\"></a>TestDubbo.java</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">package test;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">import com.news.service.IDubboService;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestDubbo &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) throws IOException &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-dubbo.xml&quot;);</div><div class=\"line\">\t\tIDubboService dubboService = (IDubboService) context.getBean(&quot;dubboService&quot;);</div><div class=\"line\">\t\tdubboService.sayHello(&quot;dubbo&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行TestDubbo.java，可以发现服务提供方的控制台输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hello: dubbo</div></pre></td></tr></table></figure></p>\n<p>说明服务已经被调用成功了。</p>\n<h1 id=\"dubbo管理页面\"><a href=\"#dubbo管理页面\" class=\"headerlink\" title=\"dubbo管理页面\"></a>dubbo管理页面</h1><p>网上搜索dubbo控制台页面，下载dubbo-admin.war。<br>自己下载的地址：<a href=\"http://www.pc6.com/softview/SoftView_468561.html\">http://www.pc6.com/softview/SoftView_468561.html</a></p>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><p>先把tomcat下的webapps\\ROOT目录下内容清空，将war包解压，解压的内容放进ROOT目录下。进入tomcat下的bin目录，运行startup.bat。</p>\n<p>运行如果出现类似如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property &apos;URIType&apos; of bean class [com.alibaba.citrus.service.uribroker.uri.GenericURIBroker]: Bean property &apos;URIType&apos; is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?</div></pre></td></tr></table></figure></p>\n<p>因为使用的jdk版本为1.8，不支持dubbo-admin中编写的方法。参考：<a href=\"http://blog.csdn.net/liutengteng130/article/details/47112683\">http://blog.csdn.net/liutengteng130/article/details/47112683</a></p>\n<p>解决办法可以降低jdk版本到1.7，但是项目都用了1.8，不想单独为它改环境变量。另一个办法是：<br>找到tomcat/bin目录中的setclasspath.bat，修改setclasspath.bat文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">if &quot;&quot;%1&quot;&quot; == &quot;&quot;debug&quot;&quot; goto needJavaHome</div><div class=\"line\"></div><div class=\"line\">set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71</div><div class=\"line\"></div><div class=\"line\">rem Otherwise either JRE or JDK are fine</div><div class=\"line\">if not &quot;%JRE_HOME%&quot; == &quot;&quot; goto gotJreHome</div><div class=\"line\">if not &quot;%JAVA_HOME%&quot; == &quot;&quot; goto gotJavaHome</div><div class=\"line\">echo Neither the JAVA_HOME nor the JRE_HOME environment variable is defined</div><div class=\"line\">echo At least one of these environment variable is needed to run this program</div><div class=\"line\">goto exit</div></pre></td></tr></table></figure></p>\n<p>在合适位置加上这一行：set JAVA_HOME=D:\\devsoft\\Java\\jdk1.7.0_71</p>\n<h3 id=\"查看页面\"><a href=\"#查看页面\" class=\"headerlink\" title=\"查看页面\"></a>查看页面</h3><p>启动成功后，浏览器输入<a href=\"http://localhost:8080/\">http://localhost:8080/</a> 就可以访问了。</p>\n<p>第一次进入要求输入账号密码，默认root/root。</p>\n<ul>\n<li><p>管理页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504111203.png\" alt=\"管理页面\"></p>\n</li>\n<li><p>应用页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112120.png\" alt=\"应用页面\"></p>\n</li>\n<li><p>提供者页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112507.png\" alt=\"提供者页面\"></p>\n</li>\n<li><p>消费者页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112642.png\" alt=\"消费者页面\"></p>\n</li>\n<li><p>服务页面<br><img src=\"/2017/05/04/spring整合dubbo-zookeeper/20170504112741.png\" alt=\"服务页面\"></p>\n</li>\n</ul>\n<p>参考博客：<a href=\"http://www.cnblogs.com/Javame/p/3632473.html\">http://www.cnblogs.com/Javame/p/3632473.html</a></p>\n"},{"layout":"title","title":"redis设置密码","date":"2017-04-19T08:48:43.000Z","_content":"\n设置密码有两种方式。\n1. 命令行设置密码。\n\n  运行cmd切换到redis根目录，先启动服务端\n  ```\n  >redis-server.exe\n  ```\n  另开一个cmd切换到redis根目录，启动客户端\n  ```\n  >redis-cli.exe -h 127.0.0.1 -p 6379\n  ```\n  客户端使用config get requirepass命令查看密码\n  ```\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"\"    //默认空\n  ```\n  客户端使用config set requirepass yourpassword命令设置密码\n  ```\n  >config set requirepass 123456\n  >OK\n  ```\n  一旦设置密码，必须先验证通过密码，否则所有操作不可用\n  ```\n  >config get requirepass\n  (error)NOAUTH Authentication required\n  ```\n  使用auth password验证密码\n  ```\n  >auth 123456\n  >OK\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"123456\"\n  ```\n  也可以退出重新登录\n  ```\n  redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456\n  ```\n  命令行设置的密码在服务重启后失效，所以一般不使用这种方式。\n\n2. 配置文件设置密码\n\n  在redis根目录下找到redis.windows.conf配置文件，搜索requirepass，找到注释密码行，添加密码如下：\n  ```\n  # requirepass foobared\n  requirepass tenny     //注意，行前不能有空格\n  ```\n  重启服务后，客户端重新登录后发现\n  ```\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"\"\n  ```\n  密码还是空？\n\n  网上查询后的办法：创建redis-server.exe 的快捷方式， 右键快捷方式属性，在目标后面增加redis.windows.conf， 这里就是关键，你虽然修改了.conf文件，但是exe却没有使用这个conf，所以我们需要**手动指定**一下exe按照**修改后的conf**运行，就OK了。\n\n  所以，这里我再一次重启redis服务(指定配置文件)\n  ```\n  >redis-server.exe redis.windows.conf\n  ```\n  客户端再重新登录，OK了。\n  ```\n  >redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"123456\"\n  ```\n\n  疑问: redis目录下有两个配置文件redis.windows.conf和redis.windows-server.conf，看到网上有的人用前者有的人用后者，不清楚到底该用哪一个。看了下两个文件又没啥区别，个人就用前者了。\n","source":"_posts/redis设置密码.md","raw":"---\nlayout: title\ntitle: redis设置密码\ndate: 2017-04-19 16:48:43\ntags: redis\ncategories: redis\n---\n\n设置密码有两种方式。\n1. 命令行设置密码。\n\n  运行cmd切换到redis根目录，先启动服务端\n  ```\n  >redis-server.exe\n  ```\n  另开一个cmd切换到redis根目录，启动客户端\n  ```\n  >redis-cli.exe -h 127.0.0.1 -p 6379\n  ```\n  客户端使用config get requirepass命令查看密码\n  ```\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"\"    //默认空\n  ```\n  客户端使用config set requirepass yourpassword命令设置密码\n  ```\n  >config set requirepass 123456\n  >OK\n  ```\n  一旦设置密码，必须先验证通过密码，否则所有操作不可用\n  ```\n  >config get requirepass\n  (error)NOAUTH Authentication required\n  ```\n  使用auth password验证密码\n  ```\n  >auth 123456\n  >OK\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"123456\"\n  ```\n  也可以退出重新登录\n  ```\n  redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456\n  ```\n  命令行设置的密码在服务重启后失效，所以一般不使用这种方式。\n\n2. 配置文件设置密码\n\n  在redis根目录下找到redis.windows.conf配置文件，搜索requirepass，找到注释密码行，添加密码如下：\n  ```\n  # requirepass foobared\n  requirepass tenny     //注意，行前不能有空格\n  ```\n  重启服务后，客户端重新登录后发现\n  ```\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"\"\n  ```\n  密码还是空？\n\n  网上查询后的办法：创建redis-server.exe 的快捷方式， 右键快捷方式属性，在目标后面增加redis.windows.conf， 这里就是关键，你虽然修改了.conf文件，但是exe却没有使用这个conf，所以我们需要**手动指定**一下exe按照**修改后的conf**运行，就OK了。\n\n  所以，这里我再一次重启redis服务(指定配置文件)\n  ```\n  >redis-server.exe redis.windows.conf\n  ```\n  客户端再重新登录，OK了。\n  ```\n  >redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456\n  >config get requirepass\n  1)\"requirepass\"\n  2)\"123456\"\n  ```\n\n  疑问: redis目录下有两个配置文件redis.windows.conf和redis.windows-server.conf，看到网上有的人用前者有的人用后者，不清楚到底该用哪一个。看了下两个文件又没啥区别，个人就用前者了。\n","slug":"redis设置密码","published":1,"updated":"2017-04-19T09:25:56.658Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0eg000xiko0v76sojqe","content":"<p>设置密码有两种方式。</p>\n<ol>\n<li><p>命令行设置密码。</p>\n<p>运行cmd切换到redis根目录，先启动服务端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-server.exe</div></pre></td></tr></table></figure>\n<p>另开一个cmd切换到redis根目录，启动客户端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-cli.exe -h 127.0.0.1 -p 6379</div></pre></td></tr></table></figure>\n<p>客户端使用config get requirepass命令查看密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;&quot;    //默认空</div></pre></td></tr></table></figure>\n<p>客户端使用config set requirepass yourpassword命令设置密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config set requirepass 123456</div><div class=\"line\">&gt;OK</div></pre></td></tr></table></figure>\n<p>一旦设置密码，必须先验证通过密码，否则所有操作不可用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">(error)NOAUTH Authentication required</div></pre></td></tr></table></figure>\n<p>使用auth password验证密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;auth 123456</div><div class=\"line\">&gt;OK</div><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;123456&quot;</div></pre></td></tr></table></figure>\n<p>也可以退出重新登录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456</div></pre></td></tr></table></figure>\n<p>命令行设置的密码在服务重启后失效，所以一般不使用这种方式。</p>\n</li>\n<li><p>配置文件设置密码</p>\n<p>在redis根目录下找到redis.windows.conf配置文件，搜索requirepass，找到注释密码行，添加密码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># requirepass foobared</div><div class=\"line\">requirepass tenny     //注意，行前不能有空格</div></pre></td></tr></table></figure>\n<p>重启服务后，客户端重新登录后发现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;&quot;</div></pre></td></tr></table></figure>\n<p>密码还是空？</p>\n<p>网上查询后的办法：创建redis-server.exe 的快捷方式， 右键快捷方式属性，在目标后面增加redis.windows.conf， 这里就是关键，你虽然修改了.conf文件，但是exe却没有使用这个conf，所以我们需要<strong>手动指定</strong>一下exe按照<strong>修改后的conf</strong>运行，就OK了。</p>\n<p>所以，这里我再一次重启redis服务(指定配置文件)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-server.exe redis.windows.conf</div></pre></td></tr></table></figure>\n<p>客户端再重新登录，OK了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456</div><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;123456&quot;</div></pre></td></tr></table></figure>\n<p>疑问: redis目录下有两个配置文件redis.windows.conf和redis.windows-server.conf，看到网上有的人用前者有的人用后者，不清楚到底该用哪一个。看了下两个文件又没啥区别，个人就用前者了。</p>\n</li>\n</ol>\n","excerpt":"","more":"<p>设置密码有两种方式。</p>\n<ol>\n<li><p>命令行设置密码。</p>\n<p>运行cmd切换到redis根目录，先启动服务端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-server.exe</div></pre></td></tr></table></figure>\n<p>另开一个cmd切换到redis根目录，启动客户端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-cli.exe -h 127.0.0.1 -p 6379</div></pre></td></tr></table></figure>\n<p>客户端使用config get requirepass命令查看密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;&quot;    //默认空</div></pre></td></tr></table></figure>\n<p>客户端使用config set requirepass yourpassword命令设置密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config set requirepass 123456</div><div class=\"line\">&gt;OK</div></pre></td></tr></table></figure>\n<p>一旦设置密码，必须先验证通过密码，否则所有操作不可用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">(error)NOAUTH Authentication required</div></pre></td></tr></table></figure>\n<p>使用auth password验证密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;auth 123456</div><div class=\"line\">&gt;OK</div><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;123456&quot;</div></pre></td></tr></table></figure>\n<p>也可以退出重新登录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456</div></pre></td></tr></table></figure>\n<p>命令行设置的密码在服务重启后失效，所以一般不使用这种方式。</p>\n</li>\n<li><p>配置文件设置密码</p>\n<p>在redis根目录下找到redis.windows.conf配置文件，搜索requirepass，找到注释密码行，添加密码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># requirepass foobared</div><div class=\"line\">requirepass tenny     //注意，行前不能有空格</div></pre></td></tr></table></figure>\n<p>重启服务后，客户端重新登录后发现</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;&quot;</div></pre></td></tr></table></figure>\n<p>密码还是空？</p>\n<p>网上查询后的办法：创建redis-server.exe 的快捷方式， 右键快捷方式属性，在目标后面增加redis.windows.conf， 这里就是关键，你虽然修改了.conf文件，但是exe却没有使用这个conf，所以我们需要<strong>手动指定</strong>一下exe按照<strong>修改后的conf</strong>运行，就OK了。</p>\n<p>所以，这里我再一次重启redis服务(指定配置文件)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-server.exe redis.windows.conf</div></pre></td></tr></table></figure>\n<p>客户端再重新登录，OK了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456</div><div class=\"line\">&gt;config get requirepass</div><div class=\"line\">1)&quot;requirepass&quot;</div><div class=\"line\">2)&quot;123456&quot;</div></pre></td></tr></table></figure>\n<p>疑问: redis目录下有两个配置文件redis.windows.conf和redis.windows-server.conf，看到网上有的人用前者有的人用后者，不清楚到底该用哪一个。看了下两个文件又没啥区别，个人就用前者了。</p>\n</li>\n</ol>\n"},{"title":"hexo引用本地图片","date":"2017-04-03T12:03:30.000Z","_content":"\n### markdown文章里引用图片有两种方式。\n\n一种是直接引用互联网上的图片，使用绝对路径  http://xxx.com/xxx.jpg\n\n一种是使用本地图片。\n\n因为最后要发布到网上，所以引用本地图片路径必须是相对路径xxx/xxx.png\n\n### 这里讲如何引用本地图片。\n\n首先在站点_config.yml 中找到\"post_asset_folder\"属性，将其设置为\"true\"。Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder。当设置post_asset_folder为true参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。\n\n启动cmd,切换到hexo的目录下执行\n```\nnpm install https://github.com/CodeFalling/hexo-asset-image --save\n```\n等待一段时即可。\n\n 安装完成后用hexo新建文章的时候_posts目录下面会多出一个和文章同名的文件夹。图片就可以放在该文件夹下面使用。\n\n![hexo new1](MarkDown引用本地图片/20170404161617.png)\n\n![hexo new2](MarkDown引用本地图片/20170404161920.png)\n\n把你要引用的图片放在同名目录下,如下引用即可。\n\n```\n![xxx](testpic/xxxxxx.png)\n```\n\n个人感觉也可以不装这个插件，自己手动建立同名文件夹也可以的。但是装了还是方便，毕竟hexo新建文章能初始化一些信息。\n\n再说下本人踩过的坑。在source目录下建立images文件夹存放图片，然后通过../images/xxx.png引用，感觉是没什么问题的，实际在本地也没问题。但是上传到github就不对了。github上去找寻的路径类似\nhttps://tenny-peng.github.io/2017/04/04/images/xxx.png。\n很明显这是找不到的，因为发布后2017/04/04下只有文章，没有其他文件或文件夹。也试过在_posts下建立images,通过images/xxx.png引用，结果是一样的。\n\n然后建立了同名文件夹，到github上查看发布后的文件才发现，对于每个md文件，生成一个同名的文件夹，里面有一个index.html文件是md文件转化的内容，我们当初自建的同名文件夹下的图片也在该文件夹下，例如，在github上，对于testpic.md,生成一个testpic文件夹，里面有一个index.html,其内容就是我们得testpic.md里编写的内容，而我们当时正好建立了同名的文件夹来存放图片，此时，这些图片也到了github下的同名文件夹。如此一来，引用就没有问题了。\n\n![本地目录](MarkDown引用本地图片/20170404164607.png)\n\n![github目录](MarkDown引用本地图片/20170404164402.png)\n","source":"_posts/MarkDown引用本地图片.md","raw":"---\ntitle: hexo引用本地图片\ndate: 2017-04-03 20:03:30\ntags: [markdown]\ncategories: markdown\n---\n\n### markdown文章里引用图片有两种方式。\n\n一种是直接引用互联网上的图片，使用绝对路径  http://xxx.com/xxx.jpg\n\n一种是使用本地图片。\n\n因为最后要发布到网上，所以引用本地图片路径必须是相对路径xxx/xxx.png\n\n### 这里讲如何引用本地图片。\n\n首先在站点_config.yml 中找到\"post_asset_folder\"属性，将其设置为\"true\"。Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder。当设置post_asset_folder为true参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。\n\n启动cmd,切换到hexo的目录下执行\n```\nnpm install https://github.com/CodeFalling/hexo-asset-image --save\n```\n等待一段时即可。\n\n 安装完成后用hexo新建文章的时候_posts目录下面会多出一个和文章同名的文件夹。图片就可以放在该文件夹下面使用。\n\n![hexo new1](MarkDown引用本地图片/20170404161617.png)\n\n![hexo new2](MarkDown引用本地图片/20170404161920.png)\n\n把你要引用的图片放在同名目录下,如下引用即可。\n\n```\n![xxx](testpic/xxxxxx.png)\n```\n\n个人感觉也可以不装这个插件，自己手动建立同名文件夹也可以的。但是装了还是方便，毕竟hexo新建文章能初始化一些信息。\n\n再说下本人踩过的坑。在source目录下建立images文件夹存放图片，然后通过../images/xxx.png引用，感觉是没什么问题的，实际在本地也没问题。但是上传到github就不对了。github上去找寻的路径类似\nhttps://tenny-peng.github.io/2017/04/04/images/xxx.png。\n很明显这是找不到的，因为发布后2017/04/04下只有文章，没有其他文件或文件夹。也试过在_posts下建立images,通过images/xxx.png引用，结果是一样的。\n\n然后建立了同名文件夹，到github上查看发布后的文件才发现，对于每个md文件，生成一个同名的文件夹，里面有一个index.html文件是md文件转化的内容，我们当初自建的同名文件夹下的图片也在该文件夹下，例如，在github上，对于testpic.md,生成一个testpic文件夹，里面有一个index.html,其内容就是我们得testpic.md里编写的内容，而我们当时正好建立了同名的文件夹来存放图片，此时，这些图片也到了github下的同名文件夹。如此一来，引用就没有问题了。\n\n![本地目录](MarkDown引用本地图片/20170404164607.png)\n\n![github目录](MarkDown引用本地图片/20170404164402.png)\n","slug":"MarkDown引用本地图片","published":1,"updated":"2017-04-05T02:51:59.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0ej000yiko0temregsi","content":"<h3 id=\"markdown文章里引用图片有两种方式。\"><a href=\"#markdown文章里引用图片有两种方式。\" class=\"headerlink\" title=\"markdown文章里引用图片有两种方式。\"></a>markdown文章里引用图片有两种方式。</h3><p>一种是直接引用互联网上的图片，使用绝对路径  <a href=\"http://xxx.com/xxx.jpg\" target=\"_blank\" rel=\"external\">http://xxx.com/xxx.jpg</a></p>\n<p>一种是使用本地图片。</p>\n<p>因为最后要发布到网上，所以引用本地图片路径必须是相对路径xxx/xxx.png</p>\n<h3 id=\"这里讲如何引用本地图片。\"><a href=\"#这里讲如何引用本地图片。\" class=\"headerlink\" title=\"这里讲如何引用本地图片。\"></a>这里讲如何引用本地图片。</h3><p>首先在站点_config.yml 中找到”post_asset_folder”属性，将其设置为”true”。Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder。当设置post_asset_folder为true参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p>\n<p>启动cmd,切换到hexo的目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p>\n<p>等待一段时即可。</p>\n<p> 安装完成后用hexo新建文章的时候_posts目录下面会多出一个和文章同名的文件夹。图片就可以放在该文件夹下面使用。</p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404161617.png\" alt=\"hexo new1\"></p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404161920.png\" alt=\"hexo new2\"></p>\n<p>把你要引用的图片放在同名目录下,如下引用即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![xxx](testpic/xxxxxx.png)</div></pre></td></tr></table></figure>\n<p>个人感觉也可以不装这个插件，自己手动建立同名文件夹也可以的。但是装了还是方便，毕竟hexo新建文章能初始化一些信息。</p>\n<p>再说下本人踩过的坑。在source目录下建立images文件夹存放图片，然后通过../images/xxx.png引用，感觉是没什么问题的，实际在本地也没问题。但是上传到github就不对了。github上去找寻的路径类似<br><a href=\"https://tenny-peng.github.io/2017/04/04/images/xxx.png。\">https://tenny-peng.github.io/2017/04/04/images/xxx.png。</a><br>很明显这是找不到的，因为发布后2017/04/04下只有文章，没有其他文件或文件夹。也试过在_posts下建立images,通过images/xxx.png引用，结果是一样的。</p>\n<p>然后建立了同名文件夹，到github上查看发布后的文件才发现，对于每个md文件，生成一个同名的文件夹，里面有一个index.html文件是md文件转化的内容，我们当初自建的同名文件夹下的图片也在该文件夹下，例如，在github上，对于testpic.md,生成一个testpic文件夹，里面有一个index.html,其内容就是我们得testpic.md里编写的内容，而我们当时正好建立了同名的文件夹来存放图片，此时，这些图片也到了github下的同名文件夹。如此一来，引用就没有问题了。</p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404164607.png\" alt=\"本地目录\"></p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404164402.png\" alt=\"github目录\"></p>\n","excerpt":"","more":"<h3 id=\"markdown文章里引用图片有两种方式。\"><a href=\"#markdown文章里引用图片有两种方式。\" class=\"headerlink\" title=\"markdown文章里引用图片有两种方式。\"></a>markdown文章里引用图片有两种方式。</h3><p>一种是直接引用互联网上的图片，使用绝对路径  <a href=\"http://xxx.com/xxx.jpg\">http://xxx.com/xxx.jpg</a></p>\n<p>一种是使用本地图片。</p>\n<p>因为最后要发布到网上，所以引用本地图片路径必须是相对路径xxx/xxx.png</p>\n<h3 id=\"这里讲如何引用本地图片。\"><a href=\"#这里讲如何引用本地图片。\" class=\"headerlink\" title=\"这里讲如何引用本地图片。\"></a>这里讲如何引用本地图片。</h3><p>首先在站点_config.yml 中找到”post_asset_folder”属性，将其设置为”true”。Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder。当设置post_asset_folder为true参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p>\n<p>启动cmd,切换到hexo的目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p>\n<p>等待一段时即可。</p>\n<p> 安装完成后用hexo新建文章的时候_posts目录下面会多出一个和文章同名的文件夹。图片就可以放在该文件夹下面使用。</p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404161617.png\" alt=\"hexo new1\"></p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404161920.png\" alt=\"hexo new2\"></p>\n<p>把你要引用的图片放在同名目录下,如下引用即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![xxx](testpic/xxxxxx.png)</div></pre></td></tr></table></figure>\n<p>个人感觉也可以不装这个插件，自己手动建立同名文件夹也可以的。但是装了还是方便，毕竟hexo新建文章能初始化一些信息。</p>\n<p>再说下本人踩过的坑。在source目录下建立images文件夹存放图片，然后通过../images/xxx.png引用，感觉是没什么问题的，实际在本地也没问题。但是上传到github就不对了。github上去找寻的路径类似<br><a href=\"https://tenny-peng.github.io/2017/04/04/images/xxx.png。\">https://tenny-peng.github.io/2017/04/04/images/xxx.png。</a><br>很明显这是找不到的，因为发布后2017/04/04下只有文章，没有其他文件或文件夹。也试过在_posts下建立images,通过images/xxx.png引用，结果是一样的。</p>\n<p>然后建立了同名文件夹，到github上查看发布后的文件才发现，对于每个md文件，生成一个同名的文件夹，里面有一个index.html文件是md文件转化的内容，我们当初自建的同名文件夹下的图片也在该文件夹下，例如，在github上，对于testpic.md,生成一个testpic文件夹，里面有一个index.html,其内容就是我们得testpic.md里编写的内容，而我们当时正好建立了同名的文件夹来存放图片，此时，这些图片也到了github下的同名文件夹。如此一来，引用就没有问题了。</p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404164607.png\" alt=\"本地目录\"></p>\n<p><img src=\"/2017/04/03/MarkDown引用本地图片/20170404164402.png\" alt=\"github目录\"></p>\n"},{"layout":"title","title":"修复TortoiseGit图标不显示","date":"2017-04-04T03:35:14.000Z","_content":"\n1. win + r 打开运行，输入regedit.exe打开注册表\n\n2. 找到HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\n\n3. 修改符串值 \"Max Cached Icons\" (如没有则新建)值为 \"10000\"(切换到十进制)。\n![注册表](修复TortoiseGit图标不显示/20170404114101.png)\n\n4. Ctrl + Alt + Del 打开任务管理器,找到explorer.explorer\n![任务管理器](修复TortoiseGit图标不显示/20170404114741.png)\n\n5. 右键选中explorer.exe，在弹出选项中选择\"结束进程\",这个时候会发现电脑底部状态栏没有了，不用担心。\n\n6. 任务管理器上方的\"文件\"选项，点击\"新建任务(运行)\"，输入explorer.exe，确定即可。\n![重启explorer](修复TortoiseGit图标不显示/20170404115205.png)\n\n由于Windows Explorer Shell 支持的 Overlay Icon 最多 15 个，Windows 自身使用了 4 个，只剩 11 个可扩展使用。我们在这里调节了它的最大图标数。\nexplorer.exe是Windows程序管理器或者文件资源管理器，它用于管理Windows图形壳，包括桌面和文件管理，重启explorer.exe就可以看到我们的修改了。\n","source":"_posts/修复TortoiseGit图标不显示.md","raw":"---\nlayout: title\ntitle: 修复TortoiseGit图标不显示\ndate: 2017-04-04 11:35:14\ntags: TortoiseGit\ncategories: TortoiseGit\n---\n\n1. win + r 打开运行，输入regedit.exe打开注册表\n\n2. 找到HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\n\n3. 修改符串值 \"Max Cached Icons\" (如没有则新建)值为 \"10000\"(切换到十进制)。\n![注册表](修复TortoiseGit图标不显示/20170404114101.png)\n\n4. Ctrl + Alt + Del 打开任务管理器,找到explorer.explorer\n![任务管理器](修复TortoiseGit图标不显示/20170404114741.png)\n\n5. 右键选中explorer.exe，在弹出选项中选择\"结束进程\",这个时候会发现电脑底部状态栏没有了，不用担心。\n\n6. 任务管理器上方的\"文件\"选项，点击\"新建任务(运行)\"，输入explorer.exe，确定即可。\n![重启explorer](修复TortoiseGit图标不显示/20170404115205.png)\n\n由于Windows Explorer Shell 支持的 Overlay Icon 最多 15 个，Windows 自身使用了 4 个，只剩 11 个可扩展使用。我们在这里调节了它的最大图标数。\nexplorer.exe是Windows程序管理器或者文件资源管理器，它用于管理Windows图形壳，包括桌面和文件管理，重启explorer.exe就可以看到我们的修改了。\n","slug":"修复TortoiseGit图标不显示","published":1,"updated":"2017-04-05T02:51:59.788Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0em0010iko0jmumpuqx","content":"<ol>\n<li><p>win + r 打开运行，输入regedit.exe打开注册表</p>\n</li>\n<li><p>找到HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer</p>\n</li>\n<li><p>修改符串值 “Max Cached Icons” (如没有则新建)值为 “10000”(切换到十进制)。<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404114101.png\" alt=\"注册表\"></p>\n</li>\n<li><p>Ctrl + Alt + Del 打开任务管理器,找到explorer.explorer<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404114741.png\" alt=\"任务管理器\"></p>\n</li>\n<li><p>右键选中explorer.exe，在弹出选项中选择”结束进程”,这个时候会发现电脑底部状态栏没有了，不用担心。</p>\n</li>\n<li><p>任务管理器上方的”文件”选项，点击”新建任务(运行)”，输入explorer.exe，确定即可。<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404115205.png\" alt=\"重启explorer\"></p>\n</li>\n</ol>\n<p>由于Windows Explorer Shell 支持的 Overlay Icon 最多 15 个，Windows 自身使用了 4 个，只剩 11 个可扩展使用。我们在这里调节了它的最大图标数。<br>explorer.exe是Windows程序管理器或者文件资源管理器，它用于管理Windows图形壳，包括桌面和文件管理，重启explorer.exe就可以看到我们的修改了。</p>\n","excerpt":"","more":"<ol>\n<li><p>win + r 打开运行，输入regedit.exe打开注册表</p>\n</li>\n<li><p>找到HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer</p>\n</li>\n<li><p>修改符串值 “Max Cached Icons” (如没有则新建)值为 “10000”(切换到十进制)。<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404114101.png\" alt=\"注册表\"></p>\n</li>\n<li><p>Ctrl + Alt + Del 打开任务管理器,找到explorer.explorer<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404114741.png\" alt=\"任务管理器\"></p>\n</li>\n<li><p>右键选中explorer.exe，在弹出选项中选择”结束进程”,这个时候会发现电脑底部状态栏没有了，不用担心。</p>\n</li>\n<li><p>任务管理器上方的”文件”选项，点击”新建任务(运行)”，输入explorer.exe，确定即可。<br><img src=\"/2017/04/04/修复TortoiseGit图标不显示/20170404115205.png\" alt=\"重启explorer\"></p>\n</li>\n</ol>\n<p>由于Windows Explorer Shell 支持的 Overlay Icon 最多 15 个，Windows 自身使用了 4 个，只剩 11 个可扩展使用。我们在这里调节了它的最大图标数。<br>explorer.exe是Windows程序管理器或者文件资源管理器，它用于管理Windows图形壳，包括桌面和文件管理，重启explorer.exe就可以看到我们的修改了。</p>\n"},{"layout":"title","title":"spring整合redis","date":"2017-04-21T02:02:06.000Z","_content":"\n# 概念简介：\n\n* Redis：一款开源的Key-Value数据库。\n* Jedis：Redis官方推出的一款面向Java的客户端，提供了很多接口供Java语言调用。\n* Spring Data Redis：SDR是Spring官方推出，可以算是Spring框架集成Redis操作的一个子框架，封装了Redis的很多命令，可以很方便的使用Spring操作Redis数据库。\n\n这三个究竟有什么区别呢？可以简单的这么理解，Redis是用ANSI C写的一个基于内存的Key-Value数据库，而Jedis是Redis官方推出的面向Java的Client，提供了很多接口和方法，可以让Java操作使用Redis，而Spring Data Redis是对Jedis进行了封装，集成了Jedis的一些命令和方法，可以与Spring整合。在后面的配置文件（spring-redis.xml）中可以看到，Spring是通过Jedis类来初始化connectionFactory的。\n\n# spring整合redis\n\n1. maven添加依赖配置\n```\n  <dependency>\n    <groupId>org.springframework.data</groupId>\n    <artifactId>spring-data-redis</artifactId>\n  \t<version>1.4.1.RELEASE</version>\n  </dependency>\n\n  <dependency>\n  \t<groupId>redis.clients</groupId>\n  \t<artifactId>jedis</artifactId>\n  \t<version>2.6.1</version>\n  </dependency>\n```\n\n2. redis.properties\n```\n# Redis settings\nredis.host=localhost\nredis.port=6379\nredis.pass=tenny\nredis.maxTotal=200\nredis.maxIdle=50\nredis.minIdle=300\nredis.maxWaitMillis=1000\nredis.testOnBorrow=true\n```\n\n3. spring-redis.xml\n```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  <beans xmlns=\"http://www.springframework.org/schema/beans\"\n  \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  \txmlns:context=\"http://www.springframework.org/schema/context\"\n  \txmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n  \txmlns:p=\"http://www.springframework.org/schema/p\"\n  \txmlns:c=\"http://www.springframework.org/schema/c\"\n  \txsi:schemaLocation=\"http://www.springframework.org/schema/beans  \n                          http://www.springframework.org/schema/beans/spring-beans.xsd  \n                          http://www.springframework.org/schema/context  \n                          http://www.springframework.org/schema/context/spring-context.xsd  \n                          http://www.springframework.org/schema/mvc  \n                          http://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n\n      <context:property-placeholder location=\"classpath:redis.properties\" />  \n\n      <bean id=\"poolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">  \n          <property name=\"maxTotal\" value=\"${redis.maxTotal}\" />\n          <property name=\"maxIdle\" value=\"${redis.maxIdle}\" />\n          <property name=\"minIdle\" value=\"${redis.minIdle}\" />\n          <property name=\"maxWaitMillis\" value=\"${redis.maxWaitMillis}\" />\n          <property name=\"testOnBorrow\" value=\"${redis.testOnBorrow}\" />\n      </bean>\n\n      <bean id=\"connectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\n  \t\tp:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n      </bean>  \n\n      <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n          <property name=\"connectionFactory\" ref=\"connectionFactory\" />\n      </bean>\n\n      <bean id=\"cacheManager\" class=\"org.springframework.data.redis.cache.RedisCacheManager\" c:template-ref=\"redisTemplate\">\n          <property name=\"usePrefix\" value=\"true\" />\n          <property name=\"cacheNames\">\n              <set>\n                  <value>t</value>\n                  <value>c</value>\n              </set>\n          </property>\n      </bean>\n\n  </beans>  \n```\n\n4. 定义User实体\n```\n  import java.io.Serializable;\n  import java.util.Date;\n\n  public class User implements Serializable {\n\n  \tprivate static final long serialVersionUID = -6683628971480535063L;\n\n  \tprivate Integer id;\n\n  \tprivate String username;\n\n  \tprivate String password;\n\n  \tprivate Integer type;\n\n  \tprivate Date createTime;\n\n  \tpublic Integer getId() {\n  \t\treturn id;\n  \t}\n\n  \tpublic void setId(Integer id) {\n  \t\tthis.id = id;\n  \t}\n\n  \tpublic String getUsername() {\n  \t\treturn username;\n  \t}\n\n  \tpublic void setUsername(String username) {\n  \t\tthis.username = username == null ? null : username.trim();\n  \t}\n\n  \tpublic String getPassword() {\n  \t\treturn password;\n  \t}\n\n  \tpublic void setPassword(String password) {\n  \t\tthis.password = password == null ? null : password.trim();\n  \t}\n\n  \tpublic Integer getType() {\n  \t\treturn type;\n  \t}\n\n  \tpublic void setType(Integer type) {\n  \t\tthis.type = type;\n  \t}\n\n  \tpublic Date getCreateTime() {\n  \t\treturn createTime;\n  \t}\n\n  \tpublic void setCreateTime(Date createTime) {\n  \t\tthis.createTime = createTime;\n  \t}\n\n  }\n```\n\n5. 测试\n```\n  import java.util.Date;\n  import org.springframework.cache.Cache;\n  import org.springframework.cache.Cache.ValueWrapper;\n  import org.springframework.context.support.ClassPathXmlApplicationContext;\n  import org.springframework.data.redis.cache.RedisCacheManager;\n  import com.news.pojo.User;\n\n  public class TestRedis {\n\n  \t@SuppressWarnings(\"resource\")\n  \tpublic static void main(String[] args) {\n  \t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-redis.xml\");\n  \t\tRedisCacheManager cacheManager = (RedisCacheManager) context.getBean(\"cacheManager\");\n  \t\tSystem.out.println(\"cacheNames: \" + cacheManager.getCacheNames());\n  \t\tCache cacheT = cacheManager.getCache(\"t\");\n  \t\tCache cacheC = cacheManager.getCache(\"c\");\n\n  \t\tUser user1 = new User();\n  \t\tuser1.setId(1);\n  \t\tuser1.setUsername(\"tenny\");\n  \t\tuser1.setPassword(\"admin\");\n  \t\tuser1.setType(1);\n  \t\tuser1.setCreateTime(new Date());\n  \t\tUser user2 = new User();\n  \t\tuser2.setId(2);\n  \t\tuser2.setUsername(\"panda\");\n  \t\tuser2.setPassword(\"xiaobai\");\n  \t\tuser2.setType(2);\n  \t\tuser2.setCreateTime(new Date());\n\n  \t\tSystem.out.println(\"put two user into cacheT...\");\n  \t\tcacheT.put(\"user1\", user1);\n  \t\tcacheT.put(\"user2\", user2);\n  \t\tSystem.out.println(\"put name and age into cacheC...\");\n  \t\tcacheC.put(\"name\", \"tenny\");\n  \t\tcacheC.put(\"age\", 25);\n\n  \t\tSystem.out.println(\"get two user from cacheT\");\n  \t\tUser value1 = cacheT.get(\"user1\", User.class);\n  \t\tSystem.out.println(value1.toString());\n  \t\tValueWrapper value2 = cacheT.get(\"user2\");\n  \t\tSystem.out.println(value2.get());\n\n  \t\tSystem.out.println(\"get two user from cacheC\");\n  \t\tValueWrapper value3 = cacheC.get(\"name\");\n  \t\tSystem.out.println(value3.get());\n  \t\tValueWrapper value4 = cacheC.get(\"age\");\n  \t\tSystem.out.println(value4.get());\n\n  \t}\n  }\n```\n\n6. 测试结果\n```\n  cacheNames: [t, c]\n  put two user into cacheT...\n  put name and age into cacheC...\n  get two user from cacheT\n  com.news.pojo.User@2ea227af\n  com.news.pojo.User@4386f16\n  get two field from cacheC\n  tenny\n  25\n```\n\n7. 直接使用redisTemplate\n```\n\n  @SuppressWarnings(\"unchecked\")\n  RedisTemplate<String, User> redisTemplate = (RedisTemplate<String, User>) context.getBean(\"redisTemplate\");\n  System.out.println(\"put two user into redisTemplate...\");\n  redisTemplate.opsForHash().put(\"user\", \"user1\", user1);\n  redisTemplate.opsForHash().put(\"user\", \"user2\", user2);\n  System.out.println(\"gut two user from redisTemplate...\");\n  User redisUser1 = (User) redisTemplate.opsForHash().get(\"user\", \"user1\");\n  System.out.println(redisUser1);\n  User redisUser2 = (User) redisTemplate.opsForHash().get(\"user\", \"user2\");\n  System.out.println(redisUser2);\n\n  @SuppressWarnings(\"unchecked\")\n  RedisTemplate<String, String> redisTemplate2 = (RedisTemplate<String, String>) context.getBean(\"redisTemplate\");\n  System.out.println(\"put color list into redisTemplate2...\");\n  redisTemplate2.opsForList().leftPush(\"color\", \"blue\");\n  redisTemplate2.opsForList().leftPush(\"color\", \"red\");\n  redisTemplate2.opsForList().rightPush(\"color\", \"yellow\");\n  System.out.println(\"gut color list from redisTemplate2...\");\n  List<String> colorList = redisTemplate2.opsForList().range(\"color\", 0, -1);\n  System.out.println(colorList);\n```\n\n8. redisTemplate测试结果\n```\nput two user into redisTemplate...\ngut two user from redisTemplate...\ncom.news.pojo.User@4313f5bc\ncom.news.pojo.User@7f010382\nput color list into redisTemplate2...\ngut color list from redisTemplate2...\n[red, blue, yellow]\n```\n","source":"_posts/spring整合redis.md","raw":"---\nlayout: title\ntitle: spring整合redis\ndate: 2017-04-21 10:02:06\ntags: [spring, redis]\ncategories: redis\n---\n\n# 概念简介：\n\n* Redis：一款开源的Key-Value数据库。\n* Jedis：Redis官方推出的一款面向Java的客户端，提供了很多接口供Java语言调用。\n* Spring Data Redis：SDR是Spring官方推出，可以算是Spring框架集成Redis操作的一个子框架，封装了Redis的很多命令，可以很方便的使用Spring操作Redis数据库。\n\n这三个究竟有什么区别呢？可以简单的这么理解，Redis是用ANSI C写的一个基于内存的Key-Value数据库，而Jedis是Redis官方推出的面向Java的Client，提供了很多接口和方法，可以让Java操作使用Redis，而Spring Data Redis是对Jedis进行了封装，集成了Jedis的一些命令和方法，可以与Spring整合。在后面的配置文件（spring-redis.xml）中可以看到，Spring是通过Jedis类来初始化connectionFactory的。\n\n# spring整合redis\n\n1. maven添加依赖配置\n```\n  <dependency>\n    <groupId>org.springframework.data</groupId>\n    <artifactId>spring-data-redis</artifactId>\n  \t<version>1.4.1.RELEASE</version>\n  </dependency>\n\n  <dependency>\n  \t<groupId>redis.clients</groupId>\n  \t<artifactId>jedis</artifactId>\n  \t<version>2.6.1</version>\n  </dependency>\n```\n\n2. redis.properties\n```\n# Redis settings\nredis.host=localhost\nredis.port=6379\nredis.pass=tenny\nredis.maxTotal=200\nredis.maxIdle=50\nredis.minIdle=300\nredis.maxWaitMillis=1000\nredis.testOnBorrow=true\n```\n\n3. spring-redis.xml\n```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  <beans xmlns=\"http://www.springframework.org/schema/beans\"\n  \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  \txmlns:context=\"http://www.springframework.org/schema/context\"\n  \txmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n  \txmlns:p=\"http://www.springframework.org/schema/p\"\n  \txmlns:c=\"http://www.springframework.org/schema/c\"\n  \txsi:schemaLocation=\"http://www.springframework.org/schema/beans  \n                          http://www.springframework.org/schema/beans/spring-beans.xsd  \n                          http://www.springframework.org/schema/context  \n                          http://www.springframework.org/schema/context/spring-context.xsd  \n                          http://www.springframework.org/schema/mvc  \n                          http://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n\n      <context:property-placeholder location=\"classpath:redis.properties\" />  \n\n      <bean id=\"poolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">  \n          <property name=\"maxTotal\" value=\"${redis.maxTotal}\" />\n          <property name=\"maxIdle\" value=\"${redis.maxIdle}\" />\n          <property name=\"minIdle\" value=\"${redis.minIdle}\" />\n          <property name=\"maxWaitMillis\" value=\"${redis.maxWaitMillis}\" />\n          <property name=\"testOnBorrow\" value=\"${redis.testOnBorrow}\" />\n      </bean>\n\n      <bean id=\"connectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\n  \t\tp:hostName=\"${redis.host}\" p:port=\"${redis.port}\" p:password=\"${redis.pass}\" c:poolConfig-ref=\"poolConfig\">\n      </bean>  \n\n      <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">  \n          <property name=\"connectionFactory\" ref=\"connectionFactory\" />\n      </bean>\n\n      <bean id=\"cacheManager\" class=\"org.springframework.data.redis.cache.RedisCacheManager\" c:template-ref=\"redisTemplate\">\n          <property name=\"usePrefix\" value=\"true\" />\n          <property name=\"cacheNames\">\n              <set>\n                  <value>t</value>\n                  <value>c</value>\n              </set>\n          </property>\n      </bean>\n\n  </beans>  \n```\n\n4. 定义User实体\n```\n  import java.io.Serializable;\n  import java.util.Date;\n\n  public class User implements Serializable {\n\n  \tprivate static final long serialVersionUID = -6683628971480535063L;\n\n  \tprivate Integer id;\n\n  \tprivate String username;\n\n  \tprivate String password;\n\n  \tprivate Integer type;\n\n  \tprivate Date createTime;\n\n  \tpublic Integer getId() {\n  \t\treturn id;\n  \t}\n\n  \tpublic void setId(Integer id) {\n  \t\tthis.id = id;\n  \t}\n\n  \tpublic String getUsername() {\n  \t\treturn username;\n  \t}\n\n  \tpublic void setUsername(String username) {\n  \t\tthis.username = username == null ? null : username.trim();\n  \t}\n\n  \tpublic String getPassword() {\n  \t\treturn password;\n  \t}\n\n  \tpublic void setPassword(String password) {\n  \t\tthis.password = password == null ? null : password.trim();\n  \t}\n\n  \tpublic Integer getType() {\n  \t\treturn type;\n  \t}\n\n  \tpublic void setType(Integer type) {\n  \t\tthis.type = type;\n  \t}\n\n  \tpublic Date getCreateTime() {\n  \t\treturn createTime;\n  \t}\n\n  \tpublic void setCreateTime(Date createTime) {\n  \t\tthis.createTime = createTime;\n  \t}\n\n  }\n```\n\n5. 测试\n```\n  import java.util.Date;\n  import org.springframework.cache.Cache;\n  import org.springframework.cache.Cache.ValueWrapper;\n  import org.springframework.context.support.ClassPathXmlApplicationContext;\n  import org.springframework.data.redis.cache.RedisCacheManager;\n  import com.news.pojo.User;\n\n  public class TestRedis {\n\n  \t@SuppressWarnings(\"resource\")\n  \tpublic static void main(String[] args) {\n  \t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-redis.xml\");\n  \t\tRedisCacheManager cacheManager = (RedisCacheManager) context.getBean(\"cacheManager\");\n  \t\tSystem.out.println(\"cacheNames: \" + cacheManager.getCacheNames());\n  \t\tCache cacheT = cacheManager.getCache(\"t\");\n  \t\tCache cacheC = cacheManager.getCache(\"c\");\n\n  \t\tUser user1 = new User();\n  \t\tuser1.setId(1);\n  \t\tuser1.setUsername(\"tenny\");\n  \t\tuser1.setPassword(\"admin\");\n  \t\tuser1.setType(1);\n  \t\tuser1.setCreateTime(new Date());\n  \t\tUser user2 = new User();\n  \t\tuser2.setId(2);\n  \t\tuser2.setUsername(\"panda\");\n  \t\tuser2.setPassword(\"xiaobai\");\n  \t\tuser2.setType(2);\n  \t\tuser2.setCreateTime(new Date());\n\n  \t\tSystem.out.println(\"put two user into cacheT...\");\n  \t\tcacheT.put(\"user1\", user1);\n  \t\tcacheT.put(\"user2\", user2);\n  \t\tSystem.out.println(\"put name and age into cacheC...\");\n  \t\tcacheC.put(\"name\", \"tenny\");\n  \t\tcacheC.put(\"age\", 25);\n\n  \t\tSystem.out.println(\"get two user from cacheT\");\n  \t\tUser value1 = cacheT.get(\"user1\", User.class);\n  \t\tSystem.out.println(value1.toString());\n  \t\tValueWrapper value2 = cacheT.get(\"user2\");\n  \t\tSystem.out.println(value2.get());\n\n  \t\tSystem.out.println(\"get two user from cacheC\");\n  \t\tValueWrapper value3 = cacheC.get(\"name\");\n  \t\tSystem.out.println(value3.get());\n  \t\tValueWrapper value4 = cacheC.get(\"age\");\n  \t\tSystem.out.println(value4.get());\n\n  \t}\n  }\n```\n\n6. 测试结果\n```\n  cacheNames: [t, c]\n  put two user into cacheT...\n  put name and age into cacheC...\n  get two user from cacheT\n  com.news.pojo.User@2ea227af\n  com.news.pojo.User@4386f16\n  get two field from cacheC\n  tenny\n  25\n```\n\n7. 直接使用redisTemplate\n```\n\n  @SuppressWarnings(\"unchecked\")\n  RedisTemplate<String, User> redisTemplate = (RedisTemplate<String, User>) context.getBean(\"redisTemplate\");\n  System.out.println(\"put two user into redisTemplate...\");\n  redisTemplate.opsForHash().put(\"user\", \"user1\", user1);\n  redisTemplate.opsForHash().put(\"user\", \"user2\", user2);\n  System.out.println(\"gut two user from redisTemplate...\");\n  User redisUser1 = (User) redisTemplate.opsForHash().get(\"user\", \"user1\");\n  System.out.println(redisUser1);\n  User redisUser2 = (User) redisTemplate.opsForHash().get(\"user\", \"user2\");\n  System.out.println(redisUser2);\n\n  @SuppressWarnings(\"unchecked\")\n  RedisTemplate<String, String> redisTemplate2 = (RedisTemplate<String, String>) context.getBean(\"redisTemplate\");\n  System.out.println(\"put color list into redisTemplate2...\");\n  redisTemplate2.opsForList().leftPush(\"color\", \"blue\");\n  redisTemplate2.opsForList().leftPush(\"color\", \"red\");\n  redisTemplate2.opsForList().rightPush(\"color\", \"yellow\");\n  System.out.println(\"gut color list from redisTemplate2...\");\n  List<String> colorList = redisTemplate2.opsForList().range(\"color\", 0, -1);\n  System.out.println(colorList);\n```\n\n8. redisTemplate测试结果\n```\nput two user into redisTemplate...\ngut two user from redisTemplate...\ncom.news.pojo.User@4313f5bc\ncom.news.pojo.User@7f010382\nput color list into redisTemplate2...\ngut color list from redisTemplate2...\n[red, blue, yellow]\n```\n","slug":"spring整合redis","published":1,"updated":"2017-04-21T03:17:01.966Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0eu0014iko0791yn7h5","content":"<h1 id=\"概念简介：\"><a href=\"#概念简介：\" class=\"headerlink\" title=\"概念简介：\"></a>概念简介：</h1><ul>\n<li>Redis：一款开源的Key-Value数据库。</li>\n<li>Jedis：Redis官方推出的一款面向Java的客户端，提供了很多接口供Java语言调用。</li>\n<li>Spring Data Redis：SDR是Spring官方推出，可以算是Spring框架集成Redis操作的一个子框架，封装了Redis的很多命令，可以很方便的使用Spring操作Redis数据库。</li>\n</ul>\n<p>这三个究竟有什么区别呢？可以简单的这么理解，Redis是用ANSI C写的一个基于内存的Key-Value数据库，而Jedis是Redis官方推出的面向Java的Client，提供了很多接口和方法，可以让Java操作使用Redis，而Spring Data Redis是对Jedis进行了封装，集成了Jedis的一些命令和方法，可以与Spring整合。在后面的配置文件（spring-redis.xml）中可以看到，Spring是通过Jedis类来初始化connectionFactory的。</p>\n<h1 id=\"spring整合redis\"><a href=\"#spring整合redis\" class=\"headerlink\" title=\"spring整合redis\"></a>spring整合redis</h1><ol>\n<li><p>maven添加依赖配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;1.4.1.RELEASE&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;redis.clients&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;jedis&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>redis.properties</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Redis settings</div><div class=\"line\">redis.host=localhost</div><div class=\"line\">redis.port=6379</div><div class=\"line\">redis.pass=tenny</div><div class=\"line\">redis.maxTotal=200</div><div class=\"line\">redis.maxIdle=50</div><div class=\"line\">redis.minIdle=300</div><div class=\"line\">redis.maxWaitMillis=1000</div><div class=\"line\">redis.testOnBorrow=true</div></pre></td></tr></table></figure>\n</li>\n<li><p>spring-redis.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\txmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</div><div class=\"line\">\txmlns:p=&quot;http://www.springframework.org/schema/p&quot;</div><div class=\"line\">\txmlns:c=&quot;http://www.springframework.org/schema/c&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans  </div><div class=\"line\">                        http://www.springframework.org/schema/beans/spring-beans.xsd  </div><div class=\"line\">                        http://www.springframework.org/schema/context  </div><div class=\"line\">                        http://www.springframework.org/schema/context/spring-context.xsd  </div><div class=\"line\">                        http://www.springframework.org/schema/mvc  </div><div class=\"line\">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:redis.properties&quot; /&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;poolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;  </div><div class=\"line\">        &lt;property name=&quot;maxTotal&quot; value=&quot;$&#123;redis.maxTotal&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.maxIdle&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;redis.minIdle&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;maxWaitMillis&quot; value=&quot;$&#123;redis.maxWaitMillis&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnBorrow&quot; value=&quot;$&#123;redis.testOnBorrow&#125;&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">\t\tp:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">    &lt;/bean&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">        &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;cacheManager&quot; class=&quot;org.springframework.data.redis.cache.RedisCacheManager&quot; c:template-ref=&quot;redisTemplate&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;usePrefix&quot; value=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;cacheNames&quot;&gt;</div><div class=\"line\">            &lt;set&gt;</div><div class=\"line\">                &lt;value&gt;t&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;c&lt;/value&gt;</div><div class=\"line\">            &lt;/set&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>定义User实体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.io.Serializable;</div><div class=\"line\">import java.util.Date;</div><div class=\"line\"></div><div class=\"line\">public class User implements Serializable &#123;</div><div class=\"line\"></div><div class=\"line\">\tprivate static final long serialVersionUID = -6683628971480535063L;</div><div class=\"line\"></div><div class=\"line\">\tprivate Integer id;</div><div class=\"line\"></div><div class=\"line\">\tprivate String username;</div><div class=\"line\"></div><div class=\"line\">\tprivate String password;</div><div class=\"line\"></div><div class=\"line\">\tprivate Integer type;</div><div class=\"line\"></div><div class=\"line\">\tprivate Date createTime;</div><div class=\"line\"></div><div class=\"line\">\tpublic Integer getId() &#123;</div><div class=\"line\">\t\treturn id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setId(Integer id) &#123;</div><div class=\"line\">\t\tthis.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic String getUsername() &#123;</div><div class=\"line\">\t\treturn username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setUsername(String username) &#123;</div><div class=\"line\">\t\tthis.username = username == null ? null : username.trim();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic String getPassword() &#123;</div><div class=\"line\">\t\treturn password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setPassword(String password) &#123;</div><div class=\"line\">\t\tthis.password = password == null ? null : password.trim();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic Integer getType() &#123;</div><div class=\"line\">\t\treturn type;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setType(Integer type) &#123;</div><div class=\"line\">\t\tthis.type = type;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic Date getCreateTime() &#123;</div><div class=\"line\">\t\treturn createTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setCreateTime(Date createTime) &#123;</div><div class=\"line\">\t\tthis.createTime = createTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Date;</div><div class=\"line\">import org.springframework.cache.Cache;</div><div class=\"line\">import org.springframework.cache.Cache.ValueWrapper;</div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\">import org.springframework.data.redis.cache.RedisCacheManager;</div><div class=\"line\">import com.news.pojo.User;</div><div class=\"line\"></div><div class=\"line\">public class TestRedis &#123;</div><div class=\"line\"></div><div class=\"line\">\t@SuppressWarnings(&quot;resource&quot;)</div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-redis.xml&quot;);</div><div class=\"line\">\t\tRedisCacheManager cacheManager = (RedisCacheManager) context.getBean(&quot;cacheManager&quot;);</div><div class=\"line\">\t\tSystem.out.println(&quot;cacheNames: &quot; + cacheManager.getCacheNames());</div><div class=\"line\">\t\tCache cacheT = cacheManager.getCache(&quot;t&quot;);</div><div class=\"line\">\t\tCache cacheC = cacheManager.getCache(&quot;c&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tUser user1 = new User();</div><div class=\"line\">\t\tuser1.setId(1);</div><div class=\"line\">\t\tuser1.setUsername(&quot;tenny&quot;);</div><div class=\"line\">\t\tuser1.setPassword(&quot;admin&quot;);</div><div class=\"line\">\t\tuser1.setType(1);</div><div class=\"line\">\t\tuser1.setCreateTime(new Date());</div><div class=\"line\">\t\tUser user2 = new User();</div><div class=\"line\">\t\tuser2.setId(2);</div><div class=\"line\">\t\tuser2.setUsername(&quot;panda&quot;);</div><div class=\"line\">\t\tuser2.setPassword(&quot;xiaobai&quot;);</div><div class=\"line\">\t\tuser2.setType(2);</div><div class=\"line\">\t\tuser2.setCreateTime(new Date());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;put two user into cacheT...&quot;);</div><div class=\"line\">\t\tcacheT.put(&quot;user1&quot;, user1);</div><div class=\"line\">\t\tcacheT.put(&quot;user2&quot;, user2);</div><div class=\"line\">\t\tSystem.out.println(&quot;put name and age into cacheC...&quot;);</div><div class=\"line\">\t\tcacheC.put(&quot;name&quot;, &quot;tenny&quot;);</div><div class=\"line\">\t\tcacheC.put(&quot;age&quot;, 25);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;get two user from cacheT&quot;);</div><div class=\"line\">\t\tUser value1 = cacheT.get(&quot;user1&quot;, User.class);</div><div class=\"line\">\t\tSystem.out.println(value1.toString());</div><div class=\"line\">\t\tValueWrapper value2 = cacheT.get(&quot;user2&quot;);</div><div class=\"line\">\t\tSystem.out.println(value2.get());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;get two user from cacheC&quot;);</div><div class=\"line\">\t\tValueWrapper value3 = cacheC.get(&quot;name&quot;);</div><div class=\"line\">\t\tSystem.out.println(value3.get());</div><div class=\"line\">\t\tValueWrapper value4 = cacheC.get(&quot;age&quot;);</div><div class=\"line\">\t\tSystem.out.println(value4.get());</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cacheNames: [t, c]</div><div class=\"line\">put two user into cacheT...</div><div class=\"line\">put name and age into cacheC...</div><div class=\"line\">get two user from cacheT</div><div class=\"line\">com.news.pojo.User@2ea227af</div><div class=\"line\">com.news.pojo.User@4386f16</div><div class=\"line\">get two field from cacheC</div><div class=\"line\">tenny</div><div class=\"line\">25</div></pre></td></tr></table></figure>\n</li>\n<li><p>直接使用redisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;unchecked&quot;)</div><div class=\"line\">RedisTemplate&lt;String, User&gt; redisTemplate = (RedisTemplate&lt;String, User&gt;) context.getBean(&quot;redisTemplate&quot;);</div><div class=\"line\">System.out.println(&quot;put two user into redisTemplate...&quot;);</div><div class=\"line\">redisTemplate.opsForHash().put(&quot;user&quot;, &quot;user1&quot;, user1);</div><div class=\"line\">redisTemplate.opsForHash().put(&quot;user&quot;, &quot;user2&quot;, user2);</div><div class=\"line\">System.out.println(&quot;gut two user from redisTemplate...&quot;);</div><div class=\"line\">User redisUser1 = (User) redisTemplate.opsForHash().get(&quot;user&quot;, &quot;user1&quot;);</div><div class=\"line\">System.out.println(redisUser1);</div><div class=\"line\">User redisUser2 = (User) redisTemplate.opsForHash().get(&quot;user&quot;, &quot;user2&quot;);</div><div class=\"line\">System.out.println(redisUser2);</div><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;unchecked&quot;)</div><div class=\"line\">RedisTemplate&lt;String, String&gt; redisTemplate2 = (RedisTemplate&lt;String, String&gt;) context.getBean(&quot;redisTemplate&quot;);</div><div class=\"line\">System.out.println(&quot;put color list into redisTemplate2...&quot;);</div><div class=\"line\">redisTemplate2.opsForList().leftPush(&quot;color&quot;, &quot;blue&quot;);</div><div class=\"line\">redisTemplate2.opsForList().leftPush(&quot;color&quot;, &quot;red&quot;);</div><div class=\"line\">redisTemplate2.opsForList().rightPush(&quot;color&quot;, &quot;yellow&quot;);</div><div class=\"line\">System.out.println(&quot;gut color list from redisTemplate2...&quot;);</div><div class=\"line\">List&lt;String&gt; colorList = redisTemplate2.opsForList().range(&quot;color&quot;, 0, -1);</div><div class=\"line\">System.out.println(colorList);</div></pre></td></tr></table></figure>\n</li>\n<li><p>redisTemplate测试结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">put two user into redisTemplate...</div><div class=\"line\">gut two user from redisTemplate...</div><div class=\"line\">com.news.pojo.User@4313f5bc</div><div class=\"line\">com.news.pojo.User@7f010382</div><div class=\"line\">put color list into redisTemplate2...</div><div class=\"line\">gut color list from redisTemplate2...</div><div class=\"line\">[red, blue, yellow]</div></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"概念简介：\"><a href=\"#概念简介：\" class=\"headerlink\" title=\"概念简介：\"></a>概念简介：</h1><ul>\n<li>Redis：一款开源的Key-Value数据库。</li>\n<li>Jedis：Redis官方推出的一款面向Java的客户端，提供了很多接口供Java语言调用。</li>\n<li>Spring Data Redis：SDR是Spring官方推出，可以算是Spring框架集成Redis操作的一个子框架，封装了Redis的很多命令，可以很方便的使用Spring操作Redis数据库。</li>\n</ul>\n<p>这三个究竟有什么区别呢？可以简单的这么理解，Redis是用ANSI C写的一个基于内存的Key-Value数据库，而Jedis是Redis官方推出的面向Java的Client，提供了很多接口和方法，可以让Java操作使用Redis，而Spring Data Redis是对Jedis进行了封装，集成了Jedis的一些命令和方法，可以与Spring整合。在后面的配置文件（spring-redis.xml）中可以看到，Spring是通过Jedis类来初始化connectionFactory的。</p>\n<h1 id=\"spring整合redis\"><a href=\"#spring整合redis\" class=\"headerlink\" title=\"spring整合redis\"></a>spring整合redis</h1><ol>\n<li><p>maven添加依赖配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;1.4.1.RELEASE&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;redis.clients&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;jedis&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>redis.properties</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Redis settings</div><div class=\"line\">redis.host=localhost</div><div class=\"line\">redis.port=6379</div><div class=\"line\">redis.pass=tenny</div><div class=\"line\">redis.maxTotal=200</div><div class=\"line\">redis.maxIdle=50</div><div class=\"line\">redis.minIdle=300</div><div class=\"line\">redis.maxWaitMillis=1000</div><div class=\"line\">redis.testOnBorrow=true</div></pre></td></tr></table></figure>\n</li>\n<li><p>spring-redis.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\txmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</div><div class=\"line\">\txmlns:p=&quot;http://www.springframework.org/schema/p&quot;</div><div class=\"line\">\txmlns:c=&quot;http://www.springframework.org/schema/c&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans  </div><div class=\"line\">                        http://www.springframework.org/schema/beans/spring-beans.xsd  </div><div class=\"line\">                        http://www.springframework.org/schema/context  </div><div class=\"line\">                        http://www.springframework.org/schema/context/spring-context.xsd  </div><div class=\"line\">                        http://www.springframework.org/schema/mvc  </div><div class=\"line\">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:redis.properties&quot; /&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;poolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;  </div><div class=\"line\">        &lt;property name=&quot;maxTotal&quot; value=&quot;$&#123;redis.maxTotal&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.maxIdle&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;redis.minIdle&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;maxWaitMillis&quot; value=&quot;$&#123;redis.maxWaitMillis&#125;&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;testOnBorrow&quot; value=&quot;$&#123;redis.testOnBorrow&#125;&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class=\"line\">\t\tp:hostName=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.pass&#125;&quot; c:poolConfig-ref=&quot;poolConfig&quot;&gt;</div><div class=\"line\">    &lt;/bean&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;  </div><div class=\"line\">        &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;bean id=&quot;cacheManager&quot; class=&quot;org.springframework.data.redis.cache.RedisCacheManager&quot; c:template-ref=&quot;redisTemplate&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;usePrefix&quot; value=&quot;true&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;cacheNames&quot;&gt;</div><div class=\"line\">            &lt;set&gt;</div><div class=\"line\">                &lt;value&gt;t&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;c&lt;/value&gt;</div><div class=\"line\">            &lt;/set&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>定义User实体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.io.Serializable;</div><div class=\"line\">import java.util.Date;</div><div class=\"line\"></div><div class=\"line\">public class User implements Serializable &#123;</div><div class=\"line\"></div><div class=\"line\">\tprivate static final long serialVersionUID = -6683628971480535063L;</div><div class=\"line\"></div><div class=\"line\">\tprivate Integer id;</div><div class=\"line\"></div><div class=\"line\">\tprivate String username;</div><div class=\"line\"></div><div class=\"line\">\tprivate String password;</div><div class=\"line\"></div><div class=\"line\">\tprivate Integer type;</div><div class=\"line\"></div><div class=\"line\">\tprivate Date createTime;</div><div class=\"line\"></div><div class=\"line\">\tpublic Integer getId() &#123;</div><div class=\"line\">\t\treturn id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setId(Integer id) &#123;</div><div class=\"line\">\t\tthis.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic String getUsername() &#123;</div><div class=\"line\">\t\treturn username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setUsername(String username) &#123;</div><div class=\"line\">\t\tthis.username = username == null ? null : username.trim();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic String getPassword() &#123;</div><div class=\"line\">\t\treturn password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setPassword(String password) &#123;</div><div class=\"line\">\t\tthis.password = password == null ? null : password.trim();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic Integer getType() &#123;</div><div class=\"line\">\t\treturn type;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setType(Integer type) &#123;</div><div class=\"line\">\t\tthis.type = type;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic Date getCreateTime() &#123;</div><div class=\"line\">\t\treturn createTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic void setCreateTime(Date createTime) &#123;</div><div class=\"line\">\t\tthis.createTime = createTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Date;</div><div class=\"line\">import org.springframework.cache.Cache;</div><div class=\"line\">import org.springframework.cache.Cache.ValueWrapper;</div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\">import org.springframework.data.redis.cache.RedisCacheManager;</div><div class=\"line\">import com.news.pojo.User;</div><div class=\"line\"></div><div class=\"line\">public class TestRedis &#123;</div><div class=\"line\"></div><div class=\"line\">\t@SuppressWarnings(&quot;resource&quot;)</div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-redis.xml&quot;);</div><div class=\"line\">\t\tRedisCacheManager cacheManager = (RedisCacheManager) context.getBean(&quot;cacheManager&quot;);</div><div class=\"line\">\t\tSystem.out.println(&quot;cacheNames: &quot; + cacheManager.getCacheNames());</div><div class=\"line\">\t\tCache cacheT = cacheManager.getCache(&quot;t&quot;);</div><div class=\"line\">\t\tCache cacheC = cacheManager.getCache(&quot;c&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tUser user1 = new User();</div><div class=\"line\">\t\tuser1.setId(1);</div><div class=\"line\">\t\tuser1.setUsername(&quot;tenny&quot;);</div><div class=\"line\">\t\tuser1.setPassword(&quot;admin&quot;);</div><div class=\"line\">\t\tuser1.setType(1);</div><div class=\"line\">\t\tuser1.setCreateTime(new Date());</div><div class=\"line\">\t\tUser user2 = new User();</div><div class=\"line\">\t\tuser2.setId(2);</div><div class=\"line\">\t\tuser2.setUsername(&quot;panda&quot;);</div><div class=\"line\">\t\tuser2.setPassword(&quot;xiaobai&quot;);</div><div class=\"line\">\t\tuser2.setType(2);</div><div class=\"line\">\t\tuser2.setCreateTime(new Date());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;put two user into cacheT...&quot;);</div><div class=\"line\">\t\tcacheT.put(&quot;user1&quot;, user1);</div><div class=\"line\">\t\tcacheT.put(&quot;user2&quot;, user2);</div><div class=\"line\">\t\tSystem.out.println(&quot;put name and age into cacheC...&quot;);</div><div class=\"line\">\t\tcacheC.put(&quot;name&quot;, &quot;tenny&quot;);</div><div class=\"line\">\t\tcacheC.put(&quot;age&quot;, 25);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;get two user from cacheT&quot;);</div><div class=\"line\">\t\tUser value1 = cacheT.get(&quot;user1&quot;, User.class);</div><div class=\"line\">\t\tSystem.out.println(value1.toString());</div><div class=\"line\">\t\tValueWrapper value2 = cacheT.get(&quot;user2&quot;);</div><div class=\"line\">\t\tSystem.out.println(value2.get());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(&quot;get two user from cacheC&quot;);</div><div class=\"line\">\t\tValueWrapper value3 = cacheC.get(&quot;name&quot;);</div><div class=\"line\">\t\tSystem.out.println(value3.get());</div><div class=\"line\">\t\tValueWrapper value4 = cacheC.get(&quot;age&quot;);</div><div class=\"line\">\t\tSystem.out.println(value4.get());</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cacheNames: [t, c]</div><div class=\"line\">put two user into cacheT...</div><div class=\"line\">put name and age into cacheC...</div><div class=\"line\">get two user from cacheT</div><div class=\"line\">com.news.pojo.User@2ea227af</div><div class=\"line\">com.news.pojo.User@4386f16</div><div class=\"line\">get two field from cacheC</div><div class=\"line\">tenny</div><div class=\"line\">25</div></pre></td></tr></table></figure>\n</li>\n<li><p>直接使用redisTemplate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;unchecked&quot;)</div><div class=\"line\">RedisTemplate&lt;String, User&gt; redisTemplate = (RedisTemplate&lt;String, User&gt;) context.getBean(&quot;redisTemplate&quot;);</div><div class=\"line\">System.out.println(&quot;put two user into redisTemplate...&quot;);</div><div class=\"line\">redisTemplate.opsForHash().put(&quot;user&quot;, &quot;user1&quot;, user1);</div><div class=\"line\">redisTemplate.opsForHash().put(&quot;user&quot;, &quot;user2&quot;, user2);</div><div class=\"line\">System.out.println(&quot;gut two user from redisTemplate...&quot;);</div><div class=\"line\">User redisUser1 = (User) redisTemplate.opsForHash().get(&quot;user&quot;, &quot;user1&quot;);</div><div class=\"line\">System.out.println(redisUser1);</div><div class=\"line\">User redisUser2 = (User) redisTemplate.opsForHash().get(&quot;user&quot;, &quot;user2&quot;);</div><div class=\"line\">System.out.println(redisUser2);</div><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;unchecked&quot;)</div><div class=\"line\">RedisTemplate&lt;String, String&gt; redisTemplate2 = (RedisTemplate&lt;String, String&gt;) context.getBean(&quot;redisTemplate&quot;);</div><div class=\"line\">System.out.println(&quot;put color list into redisTemplate2...&quot;);</div><div class=\"line\">redisTemplate2.opsForList().leftPush(&quot;color&quot;, &quot;blue&quot;);</div><div class=\"line\">redisTemplate2.opsForList().leftPush(&quot;color&quot;, &quot;red&quot;);</div><div class=\"line\">redisTemplate2.opsForList().rightPush(&quot;color&quot;, &quot;yellow&quot;);</div><div class=\"line\">System.out.println(&quot;gut color list from redisTemplate2...&quot;);</div><div class=\"line\">List&lt;String&gt; colorList = redisTemplate2.opsForList().range(&quot;color&quot;, 0, -1);</div><div class=\"line\">System.out.println(colorList);</div></pre></td></tr></table></figure>\n</li>\n<li><p>redisTemplate测试结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">put two user into redisTemplate...</div><div class=\"line\">gut two user from redisTemplate...</div><div class=\"line\">com.news.pojo.User@4313f5bc</div><div class=\"line\">com.news.pojo.User@7f010382</div><div class=\"line\">put color list into redisTemplate2...</div><div class=\"line\">gut color list from redisTemplate2...</div><div class=\"line\">[red, blue, yellow]</div></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"layout":"title","title":"spring的MessageSource","date":"2017-04-25T06:17:54.000Z","_content":"\n## spring-message.xml\n配置messageSource路径。\n```\n<bean id=\"messageSource\"\n    class=\"org.springframework.context.support.ReloadableResourceBundleMessageSource\">\n    <property name=\"basenames\">\n        <list>\n            <value>classpath:message/message</value>\n        </list>\n    </property>\n    <property name=\"defaultEncoding\" value=\"UTF-8\"/>\n</bean>\n\n<bean id=\"messageHelper\" class=\"com.news.common.utils.MessageHelper\">\n    <property name=\"messageSource\" ref=\"messageSource\"/>\n</bean>\n```\n\n## MessageHelper\n信息工具类，通过spring注入。核心是上面配置的messageSource，可针对不同地区/国家加载不同的信息文件(message.properties)。\n```\nimport java.util.Locale;\n\nimport org.springframework.context.MessageSource;\n\npublic class MessageHelper {\n\n\tprivate static MessageSource messageSource;\n\n\tpublic static void setMessageSource(MessageSource messageSource) {\n\t\tMessageHelper.messageSource = messageSource;\n\t}\n\n\tpublic static String getMessage(String code) {\n\t\treturn getMessage(code, null);\n\t}\n\n\tpublic static String getMessage(String code, Object[] args) {\n\t\treturn messageSource.getMessage(code, args, Locale.getDefault());\n\t}\n\n\tpublic static String getMessage(String code, Object[] args, Locale locale) {\n\t\treturn messageSource.getMessage(code, args, locale);\n\t}\n\n}\n```\n\n## message_zh_CN.properties & message_en_US.properties\nmessage_zh_CN，针对中文语言环境。\n```\n#用户提示\nu0001=用户名或密码不能为空！\nu0002=用户名\"{0}\"已存在！\nu0003=用户名或密码错误！\n```\nmessage_en_US.properties，针对英文(国际)语言环境。\n```\n#user tips\nu0001=username or password cannot be null!\nu0002=username \"{0}\" is already exist！\nu0003=username or password is error!\n```\n\n## TestMeaage.java\n使用默认本地语言环境(中文)和指定语言环境(英文)分别测试。\n```\nimport java.util.Locale;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport com.news.common.utils.MessageHelper;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestMessage {\n\n\tpublic static void main(String[] args) {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-message.xml\");\n\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0001\"));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0002\", new String[] { \"tenny\" }));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0003\"));\n\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0001\", null, Locale.US));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0002\", new String[] { \"tenny\" }, Locale.US));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0003\", null, Locale.US));\n\t}\n\n}\n```\n输出\n```\n用户名或密码不能为空！\n用户名\"tenny\"已存在！\n用户名或密码错误！\nusername or password cannot be null!\nusername \"tenny\" is already exist!\nusername or password is error!\n```\n\n## 方法说明\nmessageSource.getMessage(code, args, locale)有三个参数：\n\n1. 消息的编码值；\n\n2. 对应消息的参数，没有就传null；\n\n3. java.util.Locale参数。locale为null时，根据使用者的语言环境决定Locale，从而决定要加载的message文件。  \n    上面的测试先后加载了messages_zh_CN.properties和message_en_US.properties资源文件。  \n    这其中还有一个控制点在JVM，JVM会根据当前操作系统的语言环境进行相应处理，我们可以通过在JVM启动参数中追加“-Duser.lang ge=zh_TW”来设定当前JVM语言类型，通过JVM级的设定，也可以实现自动切换所使用的资源文件类型。\n    所以这里面的控制语言的方式有三种：从最低层的操作系统的Locale设定，到更上一层的JVM的Locale设定，再到程序一级的Locale设定。\n\n参考博客：http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/\n","source":"_posts/spring的MessageSource.md","raw":"---\nlayout: title\ntitle: spring的MessageSource\ndate: 2017-04-25 14:17:54\ntags: [spring, MessageSource]\ncategories: MessageSource\n---\n\n## spring-message.xml\n配置messageSource路径。\n```\n<bean id=\"messageSource\"\n    class=\"org.springframework.context.support.ReloadableResourceBundleMessageSource\">\n    <property name=\"basenames\">\n        <list>\n            <value>classpath:message/message</value>\n        </list>\n    </property>\n    <property name=\"defaultEncoding\" value=\"UTF-8\"/>\n</bean>\n\n<bean id=\"messageHelper\" class=\"com.news.common.utils.MessageHelper\">\n    <property name=\"messageSource\" ref=\"messageSource\"/>\n</bean>\n```\n\n## MessageHelper\n信息工具类，通过spring注入。核心是上面配置的messageSource，可针对不同地区/国家加载不同的信息文件(message.properties)。\n```\nimport java.util.Locale;\n\nimport org.springframework.context.MessageSource;\n\npublic class MessageHelper {\n\n\tprivate static MessageSource messageSource;\n\n\tpublic static void setMessageSource(MessageSource messageSource) {\n\t\tMessageHelper.messageSource = messageSource;\n\t}\n\n\tpublic static String getMessage(String code) {\n\t\treturn getMessage(code, null);\n\t}\n\n\tpublic static String getMessage(String code, Object[] args) {\n\t\treturn messageSource.getMessage(code, args, Locale.getDefault());\n\t}\n\n\tpublic static String getMessage(String code, Object[] args, Locale locale) {\n\t\treturn messageSource.getMessage(code, args, locale);\n\t}\n\n}\n```\n\n## message_zh_CN.properties & message_en_US.properties\nmessage_zh_CN，针对中文语言环境。\n```\n#用户提示\nu0001=用户名或密码不能为空！\nu0002=用户名\"{0}\"已存在！\nu0003=用户名或密码错误！\n```\nmessage_en_US.properties，针对英文(国际)语言环境。\n```\n#user tips\nu0001=username or password cannot be null!\nu0002=username \"{0}\" is already exist！\nu0003=username or password is error!\n```\n\n## TestMeaage.java\n使用默认本地语言环境(中文)和指定语言环境(英文)分别测试。\n```\nimport java.util.Locale;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport com.news.common.utils.MessageHelper;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestMessage {\n\n\tpublic static void main(String[] args) {\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-message.xml\");\n\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0001\"));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0002\", new String[] { \"tenny\" }));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0003\"));\n\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0001\", null, Locale.US));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0002\", new String[] { \"tenny\" }, Locale.US));\n\t\tSystem.out.println(MessageHelper.getMessage(\"u0003\", null, Locale.US));\n\t}\n\n}\n```\n输出\n```\n用户名或密码不能为空！\n用户名\"tenny\"已存在！\n用户名或密码错误！\nusername or password cannot be null!\nusername \"tenny\" is already exist!\nusername or password is error!\n```\n\n## 方法说明\nmessageSource.getMessage(code, args, locale)有三个参数：\n\n1. 消息的编码值；\n\n2. 对应消息的参数，没有就传null；\n\n3. java.util.Locale参数。locale为null时，根据使用者的语言环境决定Locale，从而决定要加载的message文件。  \n    上面的测试先后加载了messages_zh_CN.properties和message_en_US.properties资源文件。  \n    这其中还有一个控制点在JVM，JVM会根据当前操作系统的语言环境进行相应处理，我们可以通过在JVM启动参数中追加“-Duser.lang ge=zh_TW”来设定当前JVM语言类型，通过JVM级的设定，也可以实现自动切换所使用的资源文件类型。\n    所以这里面的控制语言的方式有三种：从最低层的操作系统的Locale设定，到更上一层的JVM的Locale设定，再到程序一级的Locale设定。\n\n参考博客：http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/\n","slug":"spring的MessageSource","published":1,"updated":"2017-04-25T09:14:10.935Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0f00017iko09yzjuj5x","content":"<h2 id=\"spring-message-xml\"><a href=\"#spring-message-xml\" class=\"headerlink\" title=\"spring-message.xml\"></a>spring-message.xml</h2><p>配置messageSource路径。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;messageSource&quot;</div><div class=\"line\">    class=&quot;org.springframework.context.support.ReloadableResourceBundleMessageSource&quot;&gt;</div><div class=\"line\">    &lt;property name=&quot;basenames&quot;&gt;</div><div class=\"line\">        &lt;list&gt;</div><div class=\"line\">            &lt;value&gt;classpath:message/message&lt;/value&gt;</div><div class=\"line\">        &lt;/list&gt;</div><div class=\"line\">    &lt;/property&gt;</div><div class=\"line\">    &lt;property name=&quot;defaultEncoding&quot; value=&quot;UTF-8&quot;/&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;messageHelper&quot; class=&quot;com.news.common.utils.MessageHelper&quot;&gt;</div><div class=\"line\">    &lt;property name=&quot;messageSource&quot; ref=&quot;messageSource&quot;/&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"MessageHelper\"><a href=\"#MessageHelper\" class=\"headerlink\" title=\"MessageHelper\"></a>MessageHelper</h2><p>信息工具类，通过spring注入。核心是上面配置的messageSource，可针对不同地区/国家加载不同的信息文件(message.properties)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Locale;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.MessageSource;</div><div class=\"line\"></div><div class=\"line\">public class MessageHelper &#123;</div><div class=\"line\"></div><div class=\"line\">\tprivate static MessageSource messageSource;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void setMessageSource(MessageSource messageSource) &#123;</div><div class=\"line\">\t\tMessageHelper.messageSource = messageSource;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code) &#123;</div><div class=\"line\">\t\treturn getMessage(code, null);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code, Object[] args) &#123;</div><div class=\"line\">\t\treturn messageSource.getMessage(code, args, Locale.getDefault());</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code, Object[] args, Locale locale) &#123;</div><div class=\"line\">\t\treturn messageSource.getMessage(code, args, locale);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"message-zh-CN-properties-amp-message-en-US-properties\"><a href=\"#message-zh-CN-properties-amp-message-en-US-properties\" class=\"headerlink\" title=\"message_zh_CN.properties &amp; message_en_US.properties\"></a>message_zh_CN.properties &amp; message_en_US.properties</h2><p>message_zh_CN，针对中文语言环境。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#用户提示</div><div class=\"line\">u0001=用户名或密码不能为空！</div><div class=\"line\">u0002=用户名&quot;&#123;0&#125;&quot;已存在！</div><div class=\"line\">u0003=用户名或密码错误！</div></pre></td></tr></table></figure></p>\n<p>message_en_US.properties，针对英文(国际)语言环境。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#user tips</div><div class=\"line\">u0001=username or password cannot be null!</div><div class=\"line\">u0002=username &quot;&#123;0&#125;&quot; is already exist！</div><div class=\"line\">u0003=username or password is error!</div></pre></td></tr></table></figure></p>\n<h2 id=\"TestMeaage-java\"><a href=\"#TestMeaage-java\" class=\"headerlink\" title=\"TestMeaage.java\"></a>TestMeaage.java</h2><p>使用默认本地语言环境(中文)和指定语言环境(英文)分别测试。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Locale;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">import com.news.common.utils.MessageHelper;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestMessage &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-message.xml&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0001&quot;));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0002&quot;, new String[] &#123; &quot;tenny&quot; &#125;));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0003&quot;));</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0001&quot;, null, Locale.US));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0002&quot;, new String[] &#123; &quot;tenny&quot; &#125;, Locale.US));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0003&quot;, null, Locale.US));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">用户名或密码不能为空！</div><div class=\"line\">用户名&quot;tenny&quot;已存在！</div><div class=\"line\">用户名或密码错误！</div><div class=\"line\">username or password cannot be null!</div><div class=\"line\">username &quot;tenny&quot; is already exist!</div><div class=\"line\">username or password is error!</div></pre></td></tr></table></figure></p>\n<h2 id=\"方法说明\"><a href=\"#方法说明\" class=\"headerlink\" title=\"方法说明\"></a>方法说明</h2><p>messageSource.getMessage(code, args, locale)有三个参数：</p>\n<ol>\n<li><p>消息的编码值；</p>\n</li>\n<li><p>对应消息的参数，没有就传null；</p>\n</li>\n<li><p>java.util.Locale参数。locale为null时，根据使用者的语言环境决定Locale，从而决定要加载的message文件。<br> 上面的测试先后加载了messages_zh_CN.properties和message_en_US.properties资源文件。<br> 这其中还有一个控制点在JVM，JVM会根据当前操作系统的语言环境进行相应处理，我们可以通过在JVM启动参数中追加“-Duser.lang ge=zh_TW”来设定当前JVM语言类型，通过JVM级的设定，也可以实现自动切换所使用的资源文件类型。<br> 所以这里面的控制语言的方式有三种：从最低层的操作系统的Locale设定，到更上一层的JVM的Locale设定，再到程序一级的Locale设定。</p>\n</li>\n</ol>\n<p>参考博客：<a href=\"http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/\" target=\"_blank\" rel=\"external\">http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/</a></p>\n","excerpt":"","more":"<h2 id=\"spring-message-xml\"><a href=\"#spring-message-xml\" class=\"headerlink\" title=\"spring-message.xml\"></a>spring-message.xml</h2><p>配置messageSource路径。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;messageSource&quot;</div><div class=\"line\">    class=&quot;org.springframework.context.support.ReloadableResourceBundleMessageSource&quot;&gt;</div><div class=\"line\">    &lt;property name=&quot;basenames&quot;&gt;</div><div class=\"line\">        &lt;list&gt;</div><div class=\"line\">            &lt;value&gt;classpath:message/message&lt;/value&gt;</div><div class=\"line\">        &lt;/list&gt;</div><div class=\"line\">    &lt;/property&gt;</div><div class=\"line\">    &lt;property name=&quot;defaultEncoding&quot; value=&quot;UTF-8&quot;/&gt;</div><div class=\"line\">&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;bean id=&quot;messageHelper&quot; class=&quot;com.news.common.utils.MessageHelper&quot;&gt;</div><div class=\"line\">    &lt;property name=&quot;messageSource&quot; ref=&quot;messageSource&quot;/&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"MessageHelper\"><a href=\"#MessageHelper\" class=\"headerlink\" title=\"MessageHelper\"></a>MessageHelper</h2><p>信息工具类，通过spring注入。核心是上面配置的messageSource，可针对不同地区/国家加载不同的信息文件(message.properties)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Locale;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.MessageSource;</div><div class=\"line\"></div><div class=\"line\">public class MessageHelper &#123;</div><div class=\"line\"></div><div class=\"line\">\tprivate static MessageSource messageSource;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void setMessageSource(MessageSource messageSource) &#123;</div><div class=\"line\">\t\tMessageHelper.messageSource = messageSource;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code) &#123;</div><div class=\"line\">\t\treturn getMessage(code, null);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code, Object[] args) &#123;</div><div class=\"line\">\t\treturn messageSource.getMessage(code, args, Locale.getDefault());</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tpublic static String getMessage(String code, Object[] args, Locale locale) &#123;</div><div class=\"line\">\t\treturn messageSource.getMessage(code, args, locale);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"message-zh-CN-properties-amp-message-en-US-properties\"><a href=\"#message-zh-CN-properties-amp-message-en-US-properties\" class=\"headerlink\" title=\"message_zh_CN.properties &amp; message_en_US.properties\"></a>message_zh_CN.properties &amp; message_en_US.properties</h2><p>message_zh_CN，针对中文语言环境。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#用户提示</div><div class=\"line\">u0001=用户名或密码不能为空！</div><div class=\"line\">u0002=用户名&quot;&#123;0&#125;&quot;已存在！</div><div class=\"line\">u0003=用户名或密码错误！</div></pre></td></tr></table></figure></p>\n<p>message_en_US.properties，针对英文(国际)语言环境。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#user tips</div><div class=\"line\">u0001=username or password cannot be null!</div><div class=\"line\">u0002=username &quot;&#123;0&#125;&quot; is already exist！</div><div class=\"line\">u0003=username or password is error!</div></pre></td></tr></table></figure></p>\n<h2 id=\"TestMeaage-java\"><a href=\"#TestMeaage-java\" class=\"headerlink\" title=\"TestMeaage.java\"></a>TestMeaage.java</h2><p>使用默认本地语言环境(中文)和指定语言环境(英文)分别测试。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Locale;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\">import com.news.common.utils.MessageHelper;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestMessage &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-message.xml&quot;);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0001&quot;));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0002&quot;, new String[] &#123; &quot;tenny&quot; &#125;));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0003&quot;));</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0001&quot;, null, Locale.US));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0002&quot;, new String[] &#123; &quot;tenny&quot; &#125;, Locale.US));</div><div class=\"line\">\t\tSystem.out.println(MessageHelper.getMessage(&quot;u0003&quot;, null, Locale.US));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">用户名或密码不能为空！</div><div class=\"line\">用户名&quot;tenny&quot;已存在！</div><div class=\"line\">用户名或密码错误！</div><div class=\"line\">username or password cannot be null!</div><div class=\"line\">username &quot;tenny&quot; is already exist!</div><div class=\"line\">username or password is error!</div></pre></td></tr></table></figure></p>\n<h2 id=\"方法说明\"><a href=\"#方法说明\" class=\"headerlink\" title=\"方法说明\"></a>方法说明</h2><p>messageSource.getMessage(code, args, locale)有三个参数：</p>\n<ol>\n<li><p>消息的编码值；</p>\n</li>\n<li><p>对应消息的参数，没有就传null；</p>\n</li>\n<li><p>java.util.Locale参数。locale为null时，根据使用者的语言环境决定Locale，从而决定要加载的message文件。<br> 上面的测试先后加载了messages_zh_CN.properties和message_en_US.properties资源文件。<br> 这其中还有一个控制点在JVM，JVM会根据当前操作系统的语言环境进行相应处理，我们可以通过在JVM启动参数中追加“-Duser.lang ge=zh_TW”来设定当前JVM语言类型，通过JVM级的设定，也可以实现自动切换所使用的资源文件类型。<br> 所以这里面的控制语言的方式有三种：从最低层的操作系统的Locale设定，到更上一层的JVM的Locale设定，再到程序一级的Locale设定。</p>\n</li>\n</ol>\n<p>参考博客：<a href=\"http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/\">http://lixiaorong223.blog.163.com/blog/static/4401162920110106305224/</a></p>\n"},{"layout":"title","title":"spring整合activemq","date":"2017-04-24T09:04:50.000Z","_content":"\n## 1.安装activemq\n到http://activemq.apache.org/ 下载最新版。我这里下载的是Windows版。\n\n下载完成之后解压缩，运行bin目录下的activemq.bat，看到类似如下信息说明启动成功。\n```\nACTIVEMQ_HOME: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\nACTIVEMQ_BASE: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data)\nINFO  BrokerService                  - ActiveMQ 5.1.0 JMS Message Broker (localhost) is starting\nINFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/\nINFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\nINFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\state\nINFO  AMQPersistenceAdapter          - Active data files: []\nWARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...\nINFO  KahaStore                      - Kaha Store successfully deleted data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)\nINFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Recovered 3611 operations from redo log in 0.85 seconds.\nINFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://Lenovo-PC:61616\nINFO  TransportConnector             - Connector openwire Started\nINFO  TransportServerThreadSupport   - Listening for connections at: ssl://Lenovo-PC:61617\nINFO  TransportConnector             - Connector ssl Started\nINFO  TransportServerThreadSupport   - Listening for connections at: stomp://Lenovo-PC:61613\nINFO  TransportConnector             - Connector stomp Started\nINFO  TransportServerThreadSupport   - Listening for connections at: xmpp://Lenovo-PC:61222\nINFO  TransportConnector             - Connector xmpp Started\nINFO  NetworkConnector               - Network Connector default-nc Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:Lenovo-PC-51314-1493018577517-0:0) started\nINFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog\nINFO  log                            - jetty-6.1.9\nINFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.\nINFO  /admin                         - Initializing Spring FrameworkServlet 'dispatcher'\nINFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin\nINFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo\nINFO  log                            - RESTful file access application at http://0.0.0.0:8161/fileserver\nINFO  log                            - Started SelectChannelConnector@0.0.0.0:8161\nINFO  FailoverTransport              - Successfully connected to tcp://localhost:61616\nINFO  TransportConnector             - Connector vm://localhost Started\n```\n\n浏览器输入http://localhost:8161/admin/ 可查看本地activemq运行状态。\n![activemq主页](spring整合activemq/20170424171757.png)\n\n点击\"Queues\"可查看队列情况。现在没有信息，后面测试的时候会有信息。\n![activemq空queues](spring整合activemq/20170424172009.png)\n\n## 2.Maven添加依赖\n```\n  <dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-jms</artifactId>\n    <version>${spring.version}</version>\n  </dependency>\n  <dependency>  \n    <groupId>org.apache.activemq</groupId>  \n    <artifactId>activemq-core</artifactId>  \n    <version>5.7.0</version>  \n  </dependency>\n  <dependency>\n    <groupId>org.apache.activemq</groupId>\n    <artifactId>activemq-pool</artifactId>\n    <version>5.7.0</version>\n  </dependency>\n```\n\n## 3.activemp.properties属性文件\n```\n# 服务器地址\nactivemq.brokerURL=tcp://localhost:61616\n\n# 连接池的最大连接数\nactivemq.maxConnections=10\n\n# 目的队列的名称\nactivemq.queue.name=tenny:test\n```\n\n## 4.spring-activemq.xml配置文件\n```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  <beans xmlns=\"http://www.springframework.org/schema/beans\"  \n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:context=\"http://www.springframework.org/schema/context\"  \n      xmlns:jms=\"http://www.springframework.org/schema/jms\"  \n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n  \t\t\t\t\t\thttp://www.springframework.org/schema/context\n  \t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd  \n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans\n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd  \n  \t\t\t\t\t\thttp://www.springframework.org/schema/jms\n  \t\t\t\t\t\thttp://www.springframework.org/schema/jms/spring-jms.xsd\">\n\n      <context:property-placeholder location=\"classpath:activemq.properties\" />\n\n  \t<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  \n  \t<bean id=\"targetConnectionFactory\" class=\"org.apache.activemq.ActiveMQConnectionFactory\">  \n  \t    <property name=\"brokerURL\" value=\"${activemq.brokerURL}\"/>  \n  \t</bean>\n\n  \t<bean id=\"pooledConnectionFactory\" class=\"org.apache.activemq.pool.PooledConnectionFactory\" destroy-method=\"stop\">  \n  \t    <property name=\"connectionFactory\" ref=\"targetConnectionFactory\"/>  \n  \t    <property name=\"maxConnections\" value=\"${activemq.maxConnections}\"/>  \n  \t</bean>\n\n  \t<bean id=\"connectionFactory\" class=\"org.springframework.jms.connection.SingleConnectionFactory\">  \n  \t    <property name=\"targetConnectionFactory\" ref=\"pooledConnectionFactory\"/>  \n  \t</bean>\n\n  \t<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  \n  \t<bean id=\"jmsTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">  \n  \t    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>  \n  \t    <property name=\"defaultDestinationName\" value=\"${activemq.queue.name}\"/>  \n  \t</bean>\n\n  \t<!--队列目的地，点对点模式-->  \n  \t<bean id=\"queueDestination\" class=\"org.apache.activemq.command.ActiveMQQueue\">  \n  \t    <constructor-arg>\n  \t        <value>\n  \t            ${activemq.queue.name}\n  \t        </value>\n  \t    </constructor-arg>  \n  \t</bean>\n\n  \t<!-- 消息监听器 -->  \n  \t<bean id=\"activeMQMessageListener\" class=\"com.news.common.activemq.ActiveMQMessageListener\" />      \n\n  \t<!-- 消息监听容器 -->\n  \t<bean id=\"jmsContainer\" class=\"org.springframework.jms.listener.DefaultMessageListenerContainer\">  \n  \t    <property name=\"connectionFactory\" ref=\"connectionFactory\" />  \n  \t    <property name=\"destination\" ref=\"queueDestination\" />  \n  \t    <property name=\"messageListener\" ref=\"activeMQMessageListener\" />  \n  \t</bean>\n  </beans>\n  ```\n\n  其中的ActiveMQMessageListener\n  ```\n  package com.news.common.activemq;\n\n  import javax.jms.JMSException;\n  import javax.jms.Message;\n  import javax.jms.MessageListener;\n  import javax.jms.TextMessage;\n\n  /**\n   *\n   * activemq消息监听\n   *\n   * @author Tenny.Peng\n   */\n  public class ActiveMQMessageListener implements MessageListener {\n\n  \t@Override\n  \tpublic void onMessage(Message message) {\n  \t\tTextMessage textMsg = (TextMessage) message;\n  \t\ttry {\n  \t\t\t// 处理消息\n  \t\t\tSystem.out.println(\"receive message from \" + textMsg.getJMSDestination() + \": \" + textMsg.getText());\n  \t\t} catch (JMSException e) {\n  \t\t\te.printStackTrace();\n  \t\t}\n  \t}\n  }\n```\n\n## 5.测试类TestActivemq.java\n```\npackage news;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestActivemq {\n\n\tpublic static void main(String[] args) {\n\t\t@SuppressWarnings(\"resource\")\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-activemq.xml\");\n\t\tJmsTemplate jmsTemplate = (JmsTemplate) context.getBean(\"jmsTemplate\");\n\t\tfinal String destinationName = jmsTemplate.getDefaultDestinationName();\n\t\tjmsTemplate.send(destinationName, new MessageCreator() {\n\n\t\t\t@Override\n\t\t\tpublic Message createMessage(Session session) throws JMSException {\n\t\t\t\t// 消息对象\n\t\t\t\tString message = \"some information...\";\n\t\t\t\treturn session.createTextMessage(message);\n\t\t\t}\n\t\t});\n\t}\n\n}\n```\n\n## 6.测试\n运行一次TestActivemq.java，控制台输出如下，监听器已收到消息。\n```\nreceive message from queue://tenny:test: some information...\n```\n查看Queues界面。没有待处理消息，有1个消费者，已发送/接收了1条信息。\n![Queues一条消息](spring整合activemq/20170424174645.png)\n\n之前的控制台不要关，再运行一次TestActivemq.java，之前的控制台输出如下\n```\nreceive message from queue://tenny:test: some information...\n```\n说明之前的监听器又收到了消息。\n\n再查看Queues界面。有2个消费者，已发送/接收了2条消息。\n![Queues两条消息](spring整合activemq/20170424175147.png)\n\n还是不关控制台，修改TestActivemq.java中发送消息的destinationName\n```\njmsTemplate.send(\"panda\", new MessageCreator()\n```\n再运行TestActivemq.java，控制台没有任何输出，再查看Queues\n![Queues额外队列](spring整合activemq/20170424175850.png)\n\n可以看到有一条待处理消息，没有消费者，发出1条消息，接收0条消息。\n\n这里tenny:test队列的消费者有3个，因为之前启动的监听器都是针对队列tenny:test的，并没有监听这个新的panda队列。\n\n修改activemq.properties\n```\n# 目的队列的名称\nactivemq.queue.name=panda\n```\n再运行TestActivemq.java，可以看到控制台输出\n```\nreceive message from queue://panda: some information...\nreceive message from queue://panda: some information...\n```\n说明这次启动的监听器收到了之前的和当前的消息。\n\n再查看Queues界面，新的队列panda也有一个消费者，发送2条，接收2条(即刚才启动的针对队列panda的监听器接收)。\n![Queues新消费者](spring整合activemq/20170425094743.png)\n\n## 7.总结\n* 消息按队列区分(如这里的tenny:test和panda)，每一个队列有生产者(发送消息)和消费者(接收消息)。当没有消费者的时候，生成者的消息就暂时悬挂起来，一旦有消费者空闲，就会接收消息。\n\n* 在测试中，已启动两次TestActivemq.java后，不修改测试代码，继续运行多次TestActivemq.java。可以发现，每次运行后，发送的消息都是由之前的多个监听器随机接收。\n\n* 这里测试直接使用了jmsTemplate，实际应用中，应该写一个service，将jmsTemplate作为私有变量，通过spring注入。然后根据业务封装自己发送的消息。\n\n* 可以为每个业务模块配置单独的activemq.properties，编写对应的生产者service和监听器。每个模块的消息互不干扰。\n","source":"_posts/spring整合activemq.md","raw":"---\nlayout: title\ntitle: spring整合activemq\ndate: 2017-04-24 17:04:50\ntags: [spring, activemq]\ncategories: activemq\n---\n\n## 1.安装activemq\n到http://activemq.apache.org/ 下载最新版。我这里下载的是Windows版。\n\n下载完成之后解压缩，运行bin目录下的activemq.bat，看到类似如下信息说明启动成功。\n```\nACTIVEMQ_HOME: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\nACTIVEMQ_BASE: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data)\nINFO  BrokerService                  - ActiveMQ 5.1.0 JMS Message Broker (localhost) is starting\nINFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/\nINFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\nINFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\state\nINFO  AMQPersistenceAdapter          - Active data files: []\nWARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...\nINFO  KahaStore                      - Kaha Store successfully deleted data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)\nINFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Recovered 3611 operations from redo log in 0.85 seconds.\nINFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://Lenovo-PC:61616\nINFO  TransportConnector             - Connector openwire Started\nINFO  TransportServerThreadSupport   - Listening for connections at: ssl://Lenovo-PC:61617\nINFO  TransportConnector             - Connector ssl Started\nINFO  TransportServerThreadSupport   - Listening for connections at: stomp://Lenovo-PC:61613\nINFO  TransportConnector             - Connector stomp Started\nINFO  TransportServerThreadSupport   - Listening for connections at: xmpp://Lenovo-PC:61222\nINFO  TransportConnector             - Connector xmpp Started\nINFO  NetworkConnector               - Network Connector default-nc Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:Lenovo-PC-51314-1493018577517-0:0) started\nINFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog\nINFO  log                            - jetty-6.1.9\nINFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.\nINFO  /admin                         - Initializing Spring FrameworkServlet 'dispatcher'\nINFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin\nINFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo\nINFO  log                            - RESTful file access application at http://0.0.0.0:8161/fileserver\nINFO  log                            - Started SelectChannelConnector@0.0.0.0:8161\nINFO  FailoverTransport              - Successfully connected to tcp://localhost:61616\nINFO  TransportConnector             - Connector vm://localhost Started\n```\n\n浏览器输入http://localhost:8161/admin/ 可查看本地activemq运行状态。\n![activemq主页](spring整合activemq/20170424171757.png)\n\n点击\"Queues\"可查看队列情况。现在没有信息，后面测试的时候会有信息。\n![activemq空queues](spring整合activemq/20170424172009.png)\n\n## 2.Maven添加依赖\n```\n  <dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-jms</artifactId>\n    <version>${spring.version}</version>\n  </dependency>\n  <dependency>  \n    <groupId>org.apache.activemq</groupId>  \n    <artifactId>activemq-core</artifactId>  \n    <version>5.7.0</version>  \n  </dependency>\n  <dependency>\n    <groupId>org.apache.activemq</groupId>\n    <artifactId>activemq-pool</artifactId>\n    <version>5.7.0</version>\n  </dependency>\n```\n\n## 3.activemp.properties属性文件\n```\n# 服务器地址\nactivemq.brokerURL=tcp://localhost:61616\n\n# 连接池的最大连接数\nactivemq.maxConnections=10\n\n# 目的队列的名称\nactivemq.queue.name=tenny:test\n```\n\n## 4.spring-activemq.xml配置文件\n```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  <beans xmlns=\"http://www.springframework.org/schema/beans\"  \n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:context=\"http://www.springframework.org/schema/context\"  \n      xmlns:jms=\"http://www.springframework.org/schema/jms\"  \n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n  \t\t\t\t\t\thttp://www.springframework.org/schema/context\n  \t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd  \n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans\n  \t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd  \n  \t\t\t\t\t\thttp://www.springframework.org/schema/jms\n  \t\t\t\t\t\thttp://www.springframework.org/schema/jms/spring-jms.xsd\">\n\n      <context:property-placeholder location=\"classpath:activemq.properties\" />\n\n  \t<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  \n  \t<bean id=\"targetConnectionFactory\" class=\"org.apache.activemq.ActiveMQConnectionFactory\">  \n  \t    <property name=\"brokerURL\" value=\"${activemq.brokerURL}\"/>  \n  \t</bean>\n\n  \t<bean id=\"pooledConnectionFactory\" class=\"org.apache.activemq.pool.PooledConnectionFactory\" destroy-method=\"stop\">  \n  \t    <property name=\"connectionFactory\" ref=\"targetConnectionFactory\"/>  \n  \t    <property name=\"maxConnections\" value=\"${activemq.maxConnections}\"/>  \n  \t</bean>\n\n  \t<bean id=\"connectionFactory\" class=\"org.springframework.jms.connection.SingleConnectionFactory\">  \n  \t    <property name=\"targetConnectionFactory\" ref=\"pooledConnectionFactory\"/>  \n  \t</bean>\n\n  \t<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  \n  \t<bean id=\"jmsTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">  \n  \t    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>  \n  \t    <property name=\"defaultDestinationName\" value=\"${activemq.queue.name}\"/>  \n  \t</bean>\n\n  \t<!--队列目的地，点对点模式-->  \n  \t<bean id=\"queueDestination\" class=\"org.apache.activemq.command.ActiveMQQueue\">  \n  \t    <constructor-arg>\n  \t        <value>\n  \t            ${activemq.queue.name}\n  \t        </value>\n  \t    </constructor-arg>  \n  \t</bean>\n\n  \t<!-- 消息监听器 -->  \n  \t<bean id=\"activeMQMessageListener\" class=\"com.news.common.activemq.ActiveMQMessageListener\" />      \n\n  \t<!-- 消息监听容器 -->\n  \t<bean id=\"jmsContainer\" class=\"org.springframework.jms.listener.DefaultMessageListenerContainer\">  \n  \t    <property name=\"connectionFactory\" ref=\"connectionFactory\" />  \n  \t    <property name=\"destination\" ref=\"queueDestination\" />  \n  \t    <property name=\"messageListener\" ref=\"activeMQMessageListener\" />  \n  \t</bean>\n  </beans>\n  ```\n\n  其中的ActiveMQMessageListener\n  ```\n  package com.news.common.activemq;\n\n  import javax.jms.JMSException;\n  import javax.jms.Message;\n  import javax.jms.MessageListener;\n  import javax.jms.TextMessage;\n\n  /**\n   *\n   * activemq消息监听\n   *\n   * @author Tenny.Peng\n   */\n  public class ActiveMQMessageListener implements MessageListener {\n\n  \t@Override\n  \tpublic void onMessage(Message message) {\n  \t\tTextMessage textMsg = (TextMessage) message;\n  \t\ttry {\n  \t\t\t// 处理消息\n  \t\t\tSystem.out.println(\"receive message from \" + textMsg.getJMSDestination() + \": \" + textMsg.getText());\n  \t\t} catch (JMSException e) {\n  \t\t\te.printStackTrace();\n  \t\t}\n  \t}\n  }\n```\n\n## 5.测试类TestActivemq.java\n```\npackage news;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\n\n/**\n * TODO\n *\n * @author tenny.peng\n */\npublic class TestActivemq {\n\n\tpublic static void main(String[] args) {\n\t\t@SuppressWarnings(\"resource\")\n\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-activemq.xml\");\n\t\tJmsTemplate jmsTemplate = (JmsTemplate) context.getBean(\"jmsTemplate\");\n\t\tfinal String destinationName = jmsTemplate.getDefaultDestinationName();\n\t\tjmsTemplate.send(destinationName, new MessageCreator() {\n\n\t\t\t@Override\n\t\t\tpublic Message createMessage(Session session) throws JMSException {\n\t\t\t\t// 消息对象\n\t\t\t\tString message = \"some information...\";\n\t\t\t\treturn session.createTextMessage(message);\n\t\t\t}\n\t\t});\n\t}\n\n}\n```\n\n## 6.测试\n运行一次TestActivemq.java，控制台输出如下，监听器已收到消息。\n```\nreceive message from queue://tenny:test: some information...\n```\n查看Queues界面。没有待处理消息，有1个消费者，已发送/接收了1条信息。\n![Queues一条消息](spring整合activemq/20170424174645.png)\n\n之前的控制台不要关，再运行一次TestActivemq.java，之前的控制台输出如下\n```\nreceive message from queue://tenny:test: some information...\n```\n说明之前的监听器又收到了消息。\n\n再查看Queues界面。有2个消费者，已发送/接收了2条消息。\n![Queues两条消息](spring整合activemq/20170424175147.png)\n\n还是不关控制台，修改TestActivemq.java中发送消息的destinationName\n```\njmsTemplate.send(\"panda\", new MessageCreator()\n```\n再运行TestActivemq.java，控制台没有任何输出，再查看Queues\n![Queues额外队列](spring整合activemq/20170424175850.png)\n\n可以看到有一条待处理消息，没有消费者，发出1条消息，接收0条消息。\n\n这里tenny:test队列的消费者有3个，因为之前启动的监听器都是针对队列tenny:test的，并没有监听这个新的panda队列。\n\n修改activemq.properties\n```\n# 目的队列的名称\nactivemq.queue.name=panda\n```\n再运行TestActivemq.java，可以看到控制台输出\n```\nreceive message from queue://panda: some information...\nreceive message from queue://panda: some information...\n```\n说明这次启动的监听器收到了之前的和当前的消息。\n\n再查看Queues界面，新的队列panda也有一个消费者，发送2条，接收2条(即刚才启动的针对队列panda的监听器接收)。\n![Queues新消费者](spring整合activemq/20170425094743.png)\n\n## 7.总结\n* 消息按队列区分(如这里的tenny:test和panda)，每一个队列有生产者(发送消息)和消费者(接收消息)。当没有消费者的时候，生成者的消息就暂时悬挂起来，一旦有消费者空闲，就会接收消息。\n\n* 在测试中，已启动两次TestActivemq.java后，不修改测试代码，继续运行多次TestActivemq.java。可以发现，每次运行后，发送的消息都是由之前的多个监听器随机接收。\n\n* 这里测试直接使用了jmsTemplate，实际应用中，应该写一个service，将jmsTemplate作为私有变量，通过spring注入。然后根据业务封装自己发送的消息。\n\n* 可以为每个业务模块配置单独的activemq.properties，编写对应的生产者service和监听器。每个模块的消息互不干扰。\n","slug":"spring整合activemq","published":1,"updated":"2017-04-25T02:27:19.680Z","comments":1,"photos":[],"link":"","_id":"cj2a1k0f6001ciko0d3pdtnpc","content":"<h2 id=\"1-安装activemq\"><a href=\"#1-安装activemq\" class=\"headerlink\" title=\"1.安装activemq\"></a>1.安装activemq</h2><p>到<a href=\"http://activemq.apache.org/\" target=\"_blank\" rel=\"external\">http://activemq.apache.org/</a> 下载最新版。我这里下载的是Windows版。</p>\n<p>下载完成之后解压缩，运行bin目录下的activemq.bat，看到类似如下信息说明启动成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ACTIVEMQ_HOME: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..</div><div class=\"line\">ACTIVEMQ_BASE: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..</div><div class=\"line\">Loading message broker from: xbean:activemq.xml</div><div class=\"line\">INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data)</div><div class=\"line\">INFO  BrokerService                  - ActiveMQ 5.1.0 JMS Message Broker (localhost) is starting</div><div class=\"line\">INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/</div><div class=\"line\">INFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data</div><div class=\"line\">INFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\state</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Active data files: []</div><div class=\"line\">WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...</div><div class=\"line\">INFO  KahaStore                      - Kaha Store successfully deleted data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)</div><div class=\"line\">INFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Recovered 3611 operations from redo log in 0.85 seconds.</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: tcp://Lenovo-PC:61616</div><div class=\"line\">INFO  TransportConnector             - Connector openwire Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: ssl://Lenovo-PC:61617</div><div class=\"line\">INFO  TransportConnector             - Connector ssl Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: stomp://Lenovo-PC:61613</div><div class=\"line\">INFO  TransportConnector             - Connector stomp Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: xmpp://Lenovo-PC:61222</div><div class=\"line\">INFO  TransportConnector             - Connector xmpp Started</div><div class=\"line\">INFO  NetworkConnector               - Network Connector default-nc Started</div><div class=\"line\">INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:Lenovo-PC-51314-1493018577517-0:0) started</div><div class=\"line\">INFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog</div><div class=\"line\">INFO  log                            - jetty-6.1.9</div><div class=\"line\">INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.</div><div class=\"line\">INFO  /admin                         - Initializing Spring FrameworkServlet &apos;dispatcher&apos;</div><div class=\"line\">INFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin</div><div class=\"line\">INFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo</div><div class=\"line\">INFO  log                            - RESTful file access application at http://0.0.0.0:8161/fileserver</div><div class=\"line\">INFO  log                            - Started SelectChannelConnector@0.0.0.0:8161</div><div class=\"line\">INFO  FailoverTransport              - Successfully connected to tcp://localhost:61616</div><div class=\"line\">INFO  TransportConnector             - Connector vm://localhost Started</div></pre></td></tr></table></figure></p>\n<p>浏览器输入<a href=\"http://localhost:8161/admin/\" target=\"_blank\" rel=\"external\">http://localhost:8161/admin/</a> 可查看本地activemq运行状态。<br><img src=\"/2017/04/24/spring整合activemq/20170424171757.png\" alt=\"activemq主页\"></p>\n<p>点击”Queues”可查看队列情况。现在没有信息，后面测试的时候会有信息。<br><img src=\"/2017/04/24/spring整合activemq/20170424172009.png\" alt=\"activemq空queues\"></p>\n<h2 id=\"2-Maven添加依赖\"><a href=\"#2-Maven添加依赖\" class=\"headerlink\" title=\"2.Maven添加依赖\"></a>2.Maven添加依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-jms&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\">&lt;dependency&gt;  </div><div class=\"line\">  &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;  </div><div class=\"line\">  &lt;artifactId&gt;activemq-core&lt;/artifactId&gt;  </div><div class=\"line\">  &lt;version&gt;5.7.0&lt;/version&gt;  </div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;activemq-pool&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;5.7.0&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"3-activemp-properties属性文件\"><a href=\"#3-activemp-properties属性文件\" class=\"headerlink\" title=\"3.activemp.properties属性文件\"></a>3.activemp.properties属性文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 服务器地址</div><div class=\"line\">activemq.brokerURL=tcp://localhost:61616</div><div class=\"line\"></div><div class=\"line\"># 连接池的最大连接数</div><div class=\"line\">activemq.maxConnections=10</div><div class=\"line\"></div><div class=\"line\"># 目的队列的名称</div><div class=\"line\">activemq.queue.name=tenny:test</div></pre></td></tr></table></figure>\n<h2 id=\"4-spring-activemq-xml配置文件\"><a href=\"#4-spring-activemq-xml配置文件\" class=\"headerlink\" title=\"4.spring-activemq.xml配置文件\"></a>4.spring-activemq.xml配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;  </div><div class=\"line\">    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">    xmlns:context=&quot;http://www.springframework.org/schema/context&quot;  </div><div class=\"line\">    xmlns:jms=&quot;http://www.springframework.org/schema/jms&quot;  </div><div class=\"line\">    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd  </div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd  </div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/jms</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/jms/spring-jms.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:activemq.properties&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供--&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;targetConnectionFactory&quot; class=&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;brokerURL&quot; value=&quot;$&#123;activemq.brokerURL&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;bean id=&quot;pooledConnectionFactory&quot; class=&quot;org.apache.activemq.pool.PooledConnectionFactory&quot; destroy-method=&quot;stop&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;targetConnectionFactory&quot;/&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;maxConnections&quot; value=&quot;$&#123;activemq.maxConnections&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.jms.connection.SingleConnectionFactory&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;targetConnectionFactory&quot; ref=&quot;pooledConnectionFactory&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 --&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;jmsTemplate&quot; class=&quot;org.springframework.jms.core.JmsTemplate&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot;/&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;defaultDestinationName&quot; value=&quot;$&#123;activemq.queue.name&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!--队列目的地，点对点模式--&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;queueDestination&quot; class=&quot;org.apache.activemq.command.ActiveMQQueue&quot;&gt;  </div><div class=\"line\">\t    &lt;constructor-arg&gt;</div><div class=\"line\">\t        &lt;value&gt;</div><div class=\"line\">\t            $&#123;activemq.queue.name&#125;</div><div class=\"line\">\t        &lt;/value&gt;</div><div class=\"line\">\t    &lt;/constructor-arg&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 消息监听器 --&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;activeMQMessageListener&quot; class=&quot;com.news.common.activemq.ActiveMQMessageListener&quot; /&gt;      </div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 消息监听容器 --&gt;</div><div class=\"line\">\t&lt;bean id=&quot;jmsContainer&quot; class=&quot;org.springframework.jms.listener.DefaultMessageListenerContainer&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;destination&quot; ref=&quot;queueDestination&quot; /&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;messageListener&quot; ref=&quot;activeMQMessageListener&quot; /&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<p>  其中的ActiveMQMessageListener<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.common.activemq;</div><div class=\"line\"></div><div class=\"line\">import javax.jms.JMSException;</div><div class=\"line\">import javax.jms.Message;</div><div class=\"line\">import javax.jms.MessageListener;</div><div class=\"line\">import javax.jms.TextMessage;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> *</div><div class=\"line\"> * activemq消息监听</div><div class=\"line\"> *</div><div class=\"line\"> * @author Tenny.Peng</div><div class=\"line\"> */</div><div class=\"line\">public class ActiveMQMessageListener implements MessageListener &#123;</div><div class=\"line\"></div><div class=\"line\">\t@Override</div><div class=\"line\">\tpublic void onMessage(Message message) &#123;</div><div class=\"line\">\t\tTextMessage textMsg = (TextMessage) message;</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\t// 处理消息</div><div class=\"line\">\t\t\tSystem.out.println(&quot;receive message from &quot; + textMsg.getJMSDestination() + &quot;: &quot; + textMsg.getText());</div><div class=\"line\">\t\t&#125; catch (JMSException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-测试类TestActivemq-java\"><a href=\"#5-测试类TestActivemq-java\" class=\"headerlink\" title=\"5.测试类TestActivemq.java\"></a>5.测试类TestActivemq.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">package news;</div><div class=\"line\"></div><div class=\"line\">import javax.jms.JMSException;</div><div class=\"line\">import javax.jms.Message;</div><div class=\"line\">import javax.jms.Session;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\">import org.springframework.jms.core.JmsTemplate;</div><div class=\"line\">import org.springframework.jms.core.MessageCreator;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestActivemq &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\t@SuppressWarnings(&quot;resource&quot;)</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-activemq.xml&quot;);</div><div class=\"line\">\t\tJmsTemplate jmsTemplate = (JmsTemplate) context.getBean(&quot;jmsTemplate&quot;);</div><div class=\"line\">\t\tfinal String destinationName = jmsTemplate.getDefaultDestinationName();</div><div class=\"line\">\t\tjmsTemplate.send(destinationName, new MessageCreator() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t@Override</div><div class=\"line\">\t\t\tpublic Message createMessage(Session session) throws JMSException &#123;</div><div class=\"line\">\t\t\t\t// 消息对象</div><div class=\"line\">\t\t\t\tString message = &quot;some information...&quot;;</div><div class=\"line\">\t\t\t\treturn session.createTextMessage(message);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"6-测试\"><a href=\"#6-测试\" class=\"headerlink\" title=\"6.测试\"></a>6.测试</h2><p>运行一次TestActivemq.java，控制台输出如下，监听器已收到消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://tenny:test: some information...</div></pre></td></tr></table></figure></p>\n<p>查看Queues界面。没有待处理消息，有1个消费者，已发送/接收了1条信息。<br><img src=\"/2017/04/24/spring整合activemq/20170424174645.png\" alt=\"Queues一条消息\"></p>\n<p>之前的控制台不要关，再运行一次TestActivemq.java，之前的控制台输出如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://tenny:test: some information...</div></pre></td></tr></table></figure></p>\n<p>说明之前的监听器又收到了消息。</p>\n<p>再查看Queues界面。有2个消费者，已发送/接收了2条消息。<br><img src=\"/2017/04/24/spring整合activemq/20170424175147.png\" alt=\"Queues两条消息\"></p>\n<p>还是不关控制台，修改TestActivemq.java中发送消息的destinationName<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jmsTemplate.send(&quot;panda&quot;, new MessageCreator()</div></pre></td></tr></table></figure></p>\n<p>再运行TestActivemq.java，控制台没有任何输出，再查看Queues<br><img src=\"/2017/04/24/spring整合activemq/20170424175850.png\" alt=\"Queues额外队列\"></p>\n<p>可以看到有一条待处理消息，没有消费者，发出1条消息，接收0条消息。</p>\n<p>这里tenny:test队列的消费者有3个，因为之前启动的监听器都是针对队列tenny:test的，并没有监听这个新的panda队列。</p>\n<p>修改activemq.properties<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 目的队列的名称</div><div class=\"line\">activemq.queue.name=panda</div></pre></td></tr></table></figure></p>\n<p>再运行TestActivemq.java，可以看到控制台输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://panda: some information...</div><div class=\"line\">receive message from queue://panda: some information...</div></pre></td></tr></table></figure></p>\n<p>说明这次启动的监听器收到了之前的和当前的消息。</p>\n<p>再查看Queues界面，新的队列panda也有一个消费者，发送2条，接收2条(即刚才启动的针对队列panda的监听器接收)。<br><img src=\"/2017/04/24/spring整合activemq/20170425094743.png\" alt=\"Queues新消费者\"></p>\n<h2 id=\"7-总结\"><a href=\"#7-总结\" class=\"headerlink\" title=\"7.总结\"></a>7.总结</h2><ul>\n<li><p>消息按队列区分(如这里的tenny:test和panda)，每一个队列有生产者(发送消息)和消费者(接收消息)。当没有消费者的时候，生成者的消息就暂时悬挂起来，一旦有消费者空闲，就会接收消息。</p>\n</li>\n<li><p>在测试中，已启动两次TestActivemq.java后，不修改测试代码，继续运行多次TestActivemq.java。可以发现，每次运行后，发送的消息都是由之前的多个监听器随机接收。</p>\n</li>\n<li><p>这里测试直接使用了jmsTemplate，实际应用中，应该写一个service，将jmsTemplate作为私有变量，通过spring注入。然后根据业务封装自己发送的消息。</p>\n</li>\n<li><p>可以为每个业务模块配置单独的activemq.properties，编写对应的生产者service和监听器。每个模块的消息互不干扰。</p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"1-安装activemq\"><a href=\"#1-安装activemq\" class=\"headerlink\" title=\"1.安装activemq\"></a>1.安装activemq</h2><p>到<a href=\"http://activemq.apache.org/\">http://activemq.apache.org/</a> 下载最新版。我这里下载的是Windows版。</p>\n<p>下载完成之后解压缩，运行bin目录下的activemq.bat，看到类似如下信息说明启动成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ACTIVEMQ_HOME: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..</div><div class=\"line\">ACTIVEMQ_BASE: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..</div><div class=\"line\">Loading message broker from: xbean:activemq.xml</div><div class=\"line\">INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data)</div><div class=\"line\">INFO  BrokerService                  - ActiveMQ 5.1.0 JMS Message Broker (localhost) is starting</div><div class=\"line\">INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/</div><div class=\"line\">INFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data</div><div class=\"line\">INFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\state</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Active data files: []</div><div class=\"line\">WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...</div><div class=\"line\">INFO  KahaStore                      - Kaha Store successfully deleted data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)</div><div class=\"line\">INFO  KahaStore                      - Kaha Store using data directory D:\\devsoft\\apache-activemq-5.1.0\\bin\\..\\data\\kr-store\\data</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Recovered 3611 operations from redo log in 0.85 seconds.</div><div class=\"line\">INFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: tcp://Lenovo-PC:61616</div><div class=\"line\">INFO  TransportConnector             - Connector openwire Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: ssl://Lenovo-PC:61617</div><div class=\"line\">INFO  TransportConnector             - Connector ssl Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: stomp://Lenovo-PC:61613</div><div class=\"line\">INFO  TransportConnector             - Connector stomp Started</div><div class=\"line\">INFO  TransportServerThreadSupport   - Listening for connections at: xmpp://Lenovo-PC:61222</div><div class=\"line\">INFO  TransportConnector             - Connector xmpp Started</div><div class=\"line\">INFO  NetworkConnector               - Network Connector default-nc Started</div><div class=\"line\">INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:Lenovo-PC-51314-1493018577517-0:0) started</div><div class=\"line\">INFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog</div><div class=\"line\">INFO  log                            - jetty-6.1.9</div><div class=\"line\">INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.</div><div class=\"line\">INFO  /admin                         - Initializing Spring FrameworkServlet &apos;dispatcher&apos;</div><div class=\"line\">INFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin</div><div class=\"line\">INFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo</div><div class=\"line\">INFO  log                            - RESTful file access application at http://0.0.0.0:8161/fileserver</div><div class=\"line\">INFO  log                            - Started SelectChannelConnector@0.0.0.0:8161</div><div class=\"line\">INFO  FailoverTransport              - Successfully connected to tcp://localhost:61616</div><div class=\"line\">INFO  TransportConnector             - Connector vm://localhost Started</div></pre></td></tr></table></figure></p>\n<p>浏览器输入<a href=\"http://localhost:8161/admin/\">http://localhost:8161/admin/</a> 可查看本地activemq运行状态。<br><img src=\"/2017/04/24/spring整合activemq/20170424171757.png\" alt=\"activemq主页\"></p>\n<p>点击”Queues”可查看队列情况。现在没有信息，后面测试的时候会有信息。<br><img src=\"/2017/04/24/spring整合activemq/20170424172009.png\" alt=\"activemq空queues\"></p>\n<h2 id=\"2-Maven添加依赖\"><a href=\"#2-Maven添加依赖\" class=\"headerlink\" title=\"2.Maven添加依赖\"></a>2.Maven添加依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;spring-jms&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\">&lt;dependency&gt;  </div><div class=\"line\">  &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;  </div><div class=\"line\">  &lt;artifactId&gt;activemq-core&lt;/artifactId&gt;  </div><div class=\"line\">  &lt;version&gt;5.7.0&lt;/version&gt;  </div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">  &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;activemq-pool&lt;/artifactId&gt;</div><div class=\"line\">  &lt;version&gt;5.7.0&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"3-activemp-properties属性文件\"><a href=\"#3-activemp-properties属性文件\" class=\"headerlink\" title=\"3.activemp.properties属性文件\"></a>3.activemp.properties属性文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 服务器地址</div><div class=\"line\">activemq.brokerURL=tcp://localhost:61616</div><div class=\"line\"></div><div class=\"line\"># 连接池的最大连接数</div><div class=\"line\">activemq.maxConnections=10</div><div class=\"line\"></div><div class=\"line\"># 目的队列的名称</div><div class=\"line\">activemq.queue.name=tenny:test</div></pre></td></tr></table></figure>\n<h2 id=\"4-spring-activemq-xml配置文件\"><a href=\"#4-spring-activemq-xml配置文件\" class=\"headerlink\" title=\"4.spring-activemq.xml配置文件\"></a>4.spring-activemq.xml配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </div><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;  </div><div class=\"line\">    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">    xmlns:context=&quot;http://www.springframework.org/schema/context&quot;  </div><div class=\"line\">    xmlns:jms=&quot;http://www.springframework.org/schema/jms&quot;  </div><div class=\"line\">    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd  </div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd  </div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/jms</div><div class=\"line\">\t\t\t\t\t\thttp://www.springframework.org/schema/jms/spring-jms.xsd&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;context:property-placeholder location=&quot;classpath:activemq.properties&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供--&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;targetConnectionFactory&quot; class=&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;brokerURL&quot; value=&quot;$&#123;activemq.brokerURL&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;bean id=&quot;pooledConnectionFactory&quot; class=&quot;org.apache.activemq.pool.PooledConnectionFactory&quot; destroy-method=&quot;stop&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;targetConnectionFactory&quot;/&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;maxConnections&quot; value=&quot;$&#123;activemq.maxConnections&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;bean id=&quot;connectionFactory&quot; class=&quot;org.springframework.jms.connection.SingleConnectionFactory&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;targetConnectionFactory&quot; ref=&quot;pooledConnectionFactory&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 --&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;jmsTemplate&quot; class=&quot;org.springframework.jms.core.JmsTemplate&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot;/&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;defaultDestinationName&quot; value=&quot;$&#123;activemq.queue.name&#125;&quot;/&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!--队列目的地，点对点模式--&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;queueDestination&quot; class=&quot;org.apache.activemq.command.ActiveMQQueue&quot;&gt;  </div><div class=\"line\">\t    &lt;constructor-arg&gt;</div><div class=\"line\">\t        &lt;value&gt;</div><div class=\"line\">\t            $&#123;activemq.queue.name&#125;</div><div class=\"line\">\t        &lt;/value&gt;</div><div class=\"line\">\t    &lt;/constructor-arg&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 消息监听器 --&gt;  </div><div class=\"line\">\t&lt;bean id=&quot;activeMQMessageListener&quot; class=&quot;com.news.common.activemq.ActiveMQMessageListener&quot; /&gt;      </div><div class=\"line\"></div><div class=\"line\">\t&lt;!-- 消息监听容器 --&gt;</div><div class=\"line\">\t&lt;bean id=&quot;jmsContainer&quot; class=&quot;org.springframework.jms.listener.DefaultMessageListenerContainer&quot;&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;connectionFactory&quot; ref=&quot;connectionFactory&quot; /&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;destination&quot; ref=&quot;queueDestination&quot; /&gt;  </div><div class=\"line\">\t    &lt;property name=&quot;messageListener&quot; ref=&quot;activeMQMessageListener&quot; /&gt;  </div><div class=\"line\">\t&lt;/bean&gt;</div><div class=\"line\">&lt;/beans&gt;</div></pre></td></tr></table></figure>\n<p>  其中的ActiveMQMessageListener<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.news.common.activemq;</div><div class=\"line\"></div><div class=\"line\">import javax.jms.JMSException;</div><div class=\"line\">import javax.jms.Message;</div><div class=\"line\">import javax.jms.MessageListener;</div><div class=\"line\">import javax.jms.TextMessage;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> *</div><div class=\"line\"> * activemq消息监听</div><div class=\"line\"> *</div><div class=\"line\"> * @author Tenny.Peng</div><div class=\"line\"> */</div><div class=\"line\">public class ActiveMQMessageListener implements MessageListener &#123;</div><div class=\"line\"></div><div class=\"line\">\t@Override</div><div class=\"line\">\tpublic void onMessage(Message message) &#123;</div><div class=\"line\">\t\tTextMessage textMsg = (TextMessage) message;</div><div class=\"line\">\t\ttry &#123;</div><div class=\"line\">\t\t\t// 处理消息</div><div class=\"line\">\t\t\tSystem.out.println(&quot;receive message from &quot; + textMsg.getJMSDestination() + &quot;: &quot; + textMsg.getText());</div><div class=\"line\">\t\t&#125; catch (JMSException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-测试类TestActivemq-java\"><a href=\"#5-测试类TestActivemq-java\" class=\"headerlink\" title=\"5.测试类TestActivemq.java\"></a>5.测试类TestActivemq.java</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">package news;</div><div class=\"line\"></div><div class=\"line\">import javax.jms.JMSException;</div><div class=\"line\">import javax.jms.Message;</div><div class=\"line\">import javax.jms.Session;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\">import org.springframework.jms.core.JmsTemplate;</div><div class=\"line\">import org.springframework.jms.core.MessageCreator;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * TODO</div><div class=\"line\"> *</div><div class=\"line\"> * @author tenny.peng</div><div class=\"line\"> */</div><div class=\"line\">public class TestActivemq &#123;</div><div class=\"line\"></div><div class=\"line\">\tpublic static void main(String[] args) &#123;</div><div class=\"line\">\t\t@SuppressWarnings(&quot;resource&quot;)</div><div class=\"line\">\t\tClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;spring-activemq.xml&quot;);</div><div class=\"line\">\t\tJmsTemplate jmsTemplate = (JmsTemplate) context.getBean(&quot;jmsTemplate&quot;);</div><div class=\"line\">\t\tfinal String destinationName = jmsTemplate.getDefaultDestinationName();</div><div class=\"line\">\t\tjmsTemplate.send(destinationName, new MessageCreator() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t@Override</div><div class=\"line\">\t\t\tpublic Message createMessage(Session session) throws JMSException &#123;</div><div class=\"line\">\t\t\t\t// 消息对象</div><div class=\"line\">\t\t\t\tString message = &quot;some information...&quot;;</div><div class=\"line\">\t\t\t\treturn session.createTextMessage(message);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"6-测试\"><a href=\"#6-测试\" class=\"headerlink\" title=\"6.测试\"></a>6.测试</h2><p>运行一次TestActivemq.java，控制台输出如下，监听器已收到消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://tenny:test: some information...</div></pre></td></tr></table></figure></p>\n<p>查看Queues界面。没有待处理消息，有1个消费者，已发送/接收了1条信息。<br><img src=\"/2017/04/24/spring整合activemq/20170424174645.png\" alt=\"Queues一条消息\"></p>\n<p>之前的控制台不要关，再运行一次TestActivemq.java，之前的控制台输出如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://tenny:test: some information...</div></pre></td></tr></table></figure></p>\n<p>说明之前的监听器又收到了消息。</p>\n<p>再查看Queues界面。有2个消费者，已发送/接收了2条消息。<br><img src=\"/2017/04/24/spring整合activemq/20170424175147.png\" alt=\"Queues两条消息\"></p>\n<p>还是不关控制台，修改TestActivemq.java中发送消息的destinationName<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jmsTemplate.send(&quot;panda&quot;, new MessageCreator()</div></pre></td></tr></table></figure></p>\n<p>再运行TestActivemq.java，控制台没有任何输出，再查看Queues<br><img src=\"/2017/04/24/spring整合activemq/20170424175850.png\" alt=\"Queues额外队列\"></p>\n<p>可以看到有一条待处理消息，没有消费者，发出1条消息，接收0条消息。</p>\n<p>这里tenny:test队列的消费者有3个，因为之前启动的监听器都是针对队列tenny:test的，并没有监听这个新的panda队列。</p>\n<p>修改activemq.properties<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 目的队列的名称</div><div class=\"line\">activemq.queue.name=panda</div></pre></td></tr></table></figure></p>\n<p>再运行TestActivemq.java，可以看到控制台输出<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive message from queue://panda: some information...</div><div class=\"line\">receive message from queue://panda: some information...</div></pre></td></tr></table></figure></p>\n<p>说明这次启动的监听器收到了之前的和当前的消息。</p>\n<p>再查看Queues界面，新的队列panda也有一个消费者，发送2条，接收2条(即刚才启动的针对队列panda的监听器接收)。<br><img src=\"/2017/04/24/spring整合activemq/20170425094743.png\" alt=\"Queues新消费者\"></p>\n<h2 id=\"7-总结\"><a href=\"#7-总结\" class=\"headerlink\" title=\"7.总结\"></a>7.总结</h2><ul>\n<li><p>消息按队列区分(如这里的tenny:test和panda)，每一个队列有生产者(发送消息)和消费者(接收消息)。当没有消费者的时候，生成者的消息就暂时悬挂起来，一旦有消费者空闲，就会接收消息。</p>\n</li>\n<li><p>在测试中，已启动两次TestActivemq.java后，不修改测试代码，继续运行多次TestActivemq.java。可以发现，每次运行后，发送的消息都是由之前的多个监听器随机接收。</p>\n</li>\n<li><p>这里测试直接使用了jmsTemplate，实际应用中，应该写一个service，将jmsTemplate作为私有变量，通过spring注入。然后根据业务封装自己发送的消息。</p>\n</li>\n<li><p>可以为每个业务模块配置单独的activemq.properties，编写对应的生产者service和监听器。每个模块的消息互不干扰。</p>\n</li>\n</ul>\n"},{"title":"多台电脑hexo部署到github的坑","date":"2017-04-05T02:54:05.000Z","_content":"\n之前在家里搭建了博客，成功部署到github上，并将hexo目录也上传至github/hexo仓库保存。\n后来到公司想把它们down下来，方便两边修改同步。\n\n## 第一个坑是hexo发布博客到github\n\n同样进行了一系列的node安装，hexo安装等，并且在hexo博客目录下down下了guthub/hexo的资源，本地启动，没问题。\n但是当我发布想发布到yourname.github.io上时，问题来了，它居然把我的**整个hexo博客目录**扔到了yourname.github.io上，不是说好的只发布**.deploy_git**下的内容呢！！\n\n于是我就茫然了啊，我去查看hexo下的_config.yml文件，\n```\ndeploy:\n  type: git\n  repo: git@github.com:tenny-peng/tenny-peng.github.io.git\n  branch: master\n```\n没错啊，是这个地址啊。\n\n后来一想也不对，就算这里错了也不对，不是目标地址错了，而是发布的内容错了。\n\n网上查到了这篇博客: [hexo部署到github遇到的坑](http://www.jianshu.com/p/67c57c70f275)，最后说删除hexo目录下的.git文件，然后我就试了试，重新发布，然后又报错了。。这里想截图可是命令行找不到了，大概就是说没有指定repository，然后我点开**.deploy_git**文件夹，突然想到在家里**.deploy_git**文件夹下面是有.git的，而且还是我自己指定的。\n\n哈哈，瞬间好像知道了，打开git bash，切换到hexo/.deploy_git，执行\n```\ngit init\n```\n再绑定远程仓库\n```\ngit remote add origin git@github.com:tenny-peng/tenny-peng.github.io.git\n```\n回到cmd命令行\n```\nhexo d\n```\n搞定了，成功提交了正确的博客内容。\n\n## 第二个坑是hexo目录与github/hexo同步\n\n然后再把我的hexo目录和github/hexo同步，刚才把hexo目录下的.git删了。好吧，重新建回来。\ngit bash切换到hexo根目录\n```\ngit init\n\ngit remote add origin git@github.com:tenny-peng/hexo.git\n```\n执行pull指令\n```\n$ git pull origin master\nFrom github.com:tenny-peng/hexo\n * branch            master     -> FETCH_HEAD\nerror: The following untracked working tree files would be overwritten by merge:\n        .npmignore\n        _config.yml\n        db.json\n        node_modules/.bin/JSONStream\n        node_modules/.bin/JSONStream.cmd\n        node_modules/.bin/acorn\n        node_modules/.bin/acorn.cmd\n        ...\n```\n这里说一下，第一个坑中hexo目录下的内容是我直接从github/hexo上down下来复制过来的，然后本地又进行过hexo生成和发布操作，错误具体原因不太清除(知道的童鞋欢迎指正)，网上查到解决办法是先清理\n```\n$ git clean -f -d\nSkipping repository .deploy_git/\nRemoving .npmignore\nRemoving _config.yml\nRemoving db.json\nRemoving node_modules/\nRemoving package.json\nRemoving public/\nRemoving scaffolds/\nRemoving source/\nRemoving themes/\n```\n清理后hexo目录下只剩.deploy_git和.git目录，再拉取就可以了\n```\n$ git pull origin master\nFrom github.com:tenny-peng/hexo\n * branch            master     -> FETCH_HEAD\nChecking out files: 100% (7651/7651), done.\n```\n所以下次可以先同步好hexo文件夹，这样第二个坑应该就不会出现了。\n","source":"_posts/多台电脑hexo部署到github的坑.md","raw":"---\ntitle: 多台电脑hexo部署到github的坑\ndate: 2017-04-05 10:54:05\ntags: hexo\ncategories: hexo+github博客\n---\n\n之前在家里搭建了博客，成功部署到github上，并将hexo目录也上传至github/hexo仓库保存。\n后来到公司想把它们down下来，方便两边修改同步。\n\n## 第一个坑是hexo发布博客到github\n\n同样进行了一系列的node安装，hexo安装等，并且在hexo博客目录下down下了guthub/hexo的资源，本地启动，没问题。\n但是当我发布想发布到yourname.github.io上时，问题来了，它居然把我的**整个hexo博客目录**扔到了yourname.github.io上，不是说好的只发布**.deploy_git**下的内容呢！！\n\n于是我就茫然了啊，我去查看hexo下的_config.yml文件，\n```\ndeploy:\n  type: git\n  repo: git@github.com:tenny-peng/tenny-peng.github.io.git\n  branch: master\n```\n没错啊，是这个地址啊。\n\n后来一想也不对，就算这里错了也不对，不是目标地址错了，而是发布的内容错了。\n\n网上查到了这篇博客: [hexo部署到github遇到的坑](http://www.jianshu.com/p/67c57c70f275)，最后说删除hexo目录下的.git文件，然后我就试了试，重新发布，然后又报错了。。这里想截图可是命令行找不到了，大概就是说没有指定repository，然后我点开**.deploy_git**文件夹，突然想到在家里**.deploy_git**文件夹下面是有.git的，而且还是我自己指定的。\n\n哈哈，瞬间好像知道了，打开git bash，切换到hexo/.deploy_git，执行\n```\ngit init\n```\n再绑定远程仓库\n```\ngit remote add origin git@github.com:tenny-peng/tenny-peng.github.io.git\n```\n回到cmd命令行\n```\nhexo d\n```\n搞定了，成功提交了正确的博客内容。\n\n## 第二个坑是hexo目录与github/hexo同步\n\n然后再把我的hexo目录和github/hexo同步，刚才把hexo目录下的.git删了。好吧，重新建回来。\ngit bash切换到hexo根目录\n```\ngit init\n\ngit remote add origin git@github.com:tenny-peng/hexo.git\n```\n执行pull指令\n```\n$ git pull origin master\nFrom github.com:tenny-peng/hexo\n * branch            master     -> FETCH_HEAD\nerror: The following untracked working tree files would be overwritten by merge:\n        .npmignore\n        _config.yml\n        db.json\n        node_modules/.bin/JSONStream\n        node_modules/.bin/JSONStream.cmd\n        node_modules/.bin/acorn\n        node_modules/.bin/acorn.cmd\n        ...\n```\n这里说一下，第一个坑中hexo目录下的内容是我直接从github/hexo上down下来复制过来的，然后本地又进行过hexo生成和发布操作，错误具体原因不太清除(知道的童鞋欢迎指正)，网上查到解决办法是先清理\n```\n$ git clean -f -d\nSkipping repository .deploy_git/\nRemoving .npmignore\nRemoving _config.yml\nRemoving db.json\nRemoving node_modules/\nRemoving package.json\nRemoving public/\nRemoving scaffolds/\nRemoving source/\nRemoving themes/\n```\n清理后hexo目录下只剩.deploy_git和.git目录，再拉取就可以了\n```\n$ git pull origin master\nFrom github.com:tenny-peng/hexo\n * branch            master     -> FETCH_HEAD\nChecking out files: 100% (7651/7651), done.\n```\n所以下次可以先同步好hexo文件夹，这样第二个坑应该就不会出现了。\n","slug":"多台电脑hexo部署到github的坑","published":1,"updated":"2017-04-21T06:10:58.850Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2a1k0f9001fiko0j72j038k","content":"<p>之前在家里搭建了博客，成功部署到github上，并将hexo目录也上传至github/hexo仓库保存。<br>后来到公司想把它们down下来，方便两边修改同步。</p>\n<h2 id=\"第一个坑是hexo发布博客到github\"><a href=\"#第一个坑是hexo发布博客到github\" class=\"headerlink\" title=\"第一个坑是hexo发布博客到github\"></a>第一个坑是hexo发布博客到github</h2><p>同样进行了一系列的node安装，hexo安装等，并且在hexo博客目录下down下了guthub/hexo的资源，本地启动，没问题。<br>但是当我发布想发布到yourname.github.io上时，问题来了，它居然把我的<strong>整个hexo博客目录</strong>扔到了yourname.github.io上，不是说好的只发布<strong>.deploy_git</strong>下的内容呢！！</p>\n<p>于是我就茫然了啊，我去查看hexo下的_config.yml文件，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:tenny-peng/tenny-peng.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>没错啊，是这个地址啊。</p>\n<p>后来一想也不对，就算这里错了也不对，不是目标地址错了，而是发布的内容错了。</p>\n<p>网上查到了这篇博客: <a href=\"http://www.jianshu.com/p/67c57c70f275\" target=\"_blank\" rel=\"external\">hexo部署到github遇到的坑</a>，最后说删除hexo目录下的.git文件，然后我就试了试，重新发布，然后又报错了。。这里想截图可是命令行找不到了，大概就是说没有指定repository，然后我点开<strong>.deploy_git</strong>文件夹，突然想到在家里<strong>.deploy_git</strong>文件夹下面是有.git的，而且还是我自己指定的。</p>\n<p>哈哈，瞬间好像知道了，打开git bash，切换到hexo/.deploy_git，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure></p>\n<p>再绑定远程仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github.com:tenny-peng/tenny-peng.github.io.git</div></pre></td></tr></table></figure></p>\n<p>回到cmd命令行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure></p>\n<p>搞定了，成功提交了正确的博客内容。</p>\n<h2 id=\"第二个坑是hexo目录与github-hexo同步\"><a href=\"#第二个坑是hexo目录与github-hexo同步\" class=\"headerlink\" title=\"第二个坑是hexo目录与github/hexo同步\"></a>第二个坑是hexo目录与github/hexo同步</h2><p>然后再把我的hexo目录和github/hexo同步，刚才把hexo目录下的.git删了。好吧，重新建回来。<br>git bash切换到hexo根目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div><div class=\"line\"></div><div class=\"line\">git remote add origin git@github.com:tenny-peng/hexo.git</div></pre></td></tr></table></figure></p>\n<p>执行pull指令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git pull origin master</div><div class=\"line\">From github.com:tenny-peng/hexo</div><div class=\"line\"> * branch            master     -&gt; FETCH_HEAD</div><div class=\"line\">error: The following untracked working tree files would be overwritten by merge:</div><div class=\"line\">        .npmignore</div><div class=\"line\">        _config.yml</div><div class=\"line\">        db.json</div><div class=\"line\">        node_modules/.bin/JSONStream</div><div class=\"line\">        node_modules/.bin/JSONStream.cmd</div><div class=\"line\">        node_modules/.bin/acorn</div><div class=\"line\">        node_modules/.bin/acorn.cmd</div><div class=\"line\">        ...</div></pre></td></tr></table></figure></p>\n<p>这里说一下，第一个坑中hexo目录下的内容是我直接从github/hexo上down下来复制过来的，然后本地又进行过hexo生成和发布操作，错误具体原因不太清除(知道的童鞋欢迎指正)，网上查到解决办法是先清理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clean -f -d</div><div class=\"line\">Skipping repository .deploy_git/</div><div class=\"line\">Removing .npmignore</div><div class=\"line\">Removing _config.yml</div><div class=\"line\">Removing db.json</div><div class=\"line\">Removing node_modules/</div><div class=\"line\">Removing package.json</div><div class=\"line\">Removing public/</div><div class=\"line\">Removing scaffolds/</div><div class=\"line\">Removing source/</div><div class=\"line\">Removing themes/</div></pre></td></tr></table></figure></p>\n<p>清理后hexo目录下只剩.deploy_git和.git目录，再拉取就可以了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git pull origin master</div><div class=\"line\">From github.com:tenny-peng/hexo</div><div class=\"line\"> * branch            master     -&gt; FETCH_HEAD</div><div class=\"line\">Checking out files: 100% (7651/7651), done.</div></pre></td></tr></table></figure></p>\n<p>所以下次可以先同步好hexo文件夹，这样第二个坑应该就不会出现了。</p>\n","excerpt":"","more":"<p>之前在家里搭建了博客，成功部署到github上，并将hexo目录也上传至github/hexo仓库保存。<br>后来到公司想把它们down下来，方便两边修改同步。</p>\n<h2 id=\"第一个坑是hexo发布博客到github\"><a href=\"#第一个坑是hexo发布博客到github\" class=\"headerlink\" title=\"第一个坑是hexo发布博客到github\"></a>第一个坑是hexo发布博客到github</h2><p>同样进行了一系列的node安装，hexo安装等，并且在hexo博客目录下down下了guthub/hexo的资源，本地启动，没问题。<br>但是当我发布想发布到yourname.github.io上时，问题来了，它居然把我的<strong>整个hexo博客目录</strong>扔到了yourname.github.io上，不是说好的只发布<strong>.deploy_git</strong>下的内容呢！！</p>\n<p>于是我就茫然了啊，我去查看hexo下的_config.yml文件，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:tenny-peng/tenny-peng.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>没错啊，是这个地址啊。</p>\n<p>后来一想也不对，就算这里错了也不对，不是目标地址错了，而是发布的内容错了。</p>\n<p>网上查到了这篇博客: <a href=\"http://www.jianshu.com/p/67c57c70f275\">hexo部署到github遇到的坑</a>，最后说删除hexo目录下的.git文件，然后我就试了试，重新发布，然后又报错了。。这里想截图可是命令行找不到了，大概就是说没有指定repository，然后我点开<strong>.deploy_git</strong>文件夹，突然想到在家里<strong>.deploy_git</strong>文件夹下面是有.git的，而且还是我自己指定的。</p>\n<p>哈哈，瞬间好像知道了，打开git bash，切换到hexo/.deploy_git，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure></p>\n<p>再绑定远程仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github.com:tenny-peng/tenny-peng.github.io.git</div></pre></td></tr></table></figure></p>\n<p>回到cmd命令行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure></p>\n<p>搞定了，成功提交了正确的博客内容。</p>\n<h2 id=\"第二个坑是hexo目录与github-hexo同步\"><a href=\"#第二个坑是hexo目录与github-hexo同步\" class=\"headerlink\" title=\"第二个坑是hexo目录与github/hexo同步\"></a>第二个坑是hexo目录与github/hexo同步</h2><p>然后再把我的hexo目录和github/hexo同步，刚才把hexo目录下的.git删了。好吧，重新建回来。<br>git bash切换到hexo根目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div><div class=\"line\"></div><div class=\"line\">git remote add origin git@github.com:tenny-peng/hexo.git</div></pre></td></tr></table></figure></p>\n<p>执行pull指令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git pull origin master</div><div class=\"line\">From github.com:tenny-peng/hexo</div><div class=\"line\"> * branch            master     -&gt; FETCH_HEAD</div><div class=\"line\">error: The following untracked working tree files would be overwritten by merge:</div><div class=\"line\">        .npmignore</div><div class=\"line\">        _config.yml</div><div class=\"line\">        db.json</div><div class=\"line\">        node_modules/.bin/JSONStream</div><div class=\"line\">        node_modules/.bin/JSONStream.cmd</div><div class=\"line\">        node_modules/.bin/acorn</div><div class=\"line\">        node_modules/.bin/acorn.cmd</div><div class=\"line\">        ...</div></pre></td></tr></table></figure></p>\n<p>这里说一下，第一个坑中hexo目录下的内容是我直接从github/hexo上down下来复制过来的，然后本地又进行过hexo生成和发布操作，错误具体原因不太清除(知道的童鞋欢迎指正)，网上查到解决办法是先清理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clean -f -d</div><div class=\"line\">Skipping repository .deploy_git/</div><div class=\"line\">Removing .npmignore</div><div class=\"line\">Removing _config.yml</div><div class=\"line\">Removing db.json</div><div class=\"line\">Removing node_modules/</div><div class=\"line\">Removing package.json</div><div class=\"line\">Removing public/</div><div class=\"line\">Removing scaffolds/</div><div class=\"line\">Removing source/</div><div class=\"line\">Removing themes/</div></pre></td></tr></table></figure></p>\n<p>清理后hexo目录下只剩.deploy_git和.git目录，再拉取就可以了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git pull origin master</div><div class=\"line\">From github.com:tenny-peng/hexo</div><div class=\"line\"> * branch            master     -&gt; FETCH_HEAD</div><div class=\"line\">Checking out files: 100% (7651/7651), done.</div></pre></td></tr></table></figure></p>\n<p>所以下次可以先同步好hexo文件夹，这样第二个坑应该就不会出现了。</p>\n"}],"PostAsset":[{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404114101.png","slug":"20170404114101.png","post":"cj2a1k0em0010iko0jmumpuqx","modified":1,"renderable":0},{"_id":"source/_posts/Git简单教程/20170403204148.png","slug":"20170403204148.png","post":"cj2a1k0d70006iko00pgl0kmi","modified":1,"renderable":0},{"_id":"source/_posts/hexo-next主题添加打赏功能/20170408140902.png","slug":"20170408140902.png","post":"cj2a1k0dw000jiko0i8c112kl","modified":1,"renderable":0},{"_id":"source/_posts/hexo-next主题添加打赏功能/20170405151647.png","post":"cj2a1k0dw000jiko0i8c112kl","slug":"20170405151647.png","modified":1,"renderable":1},{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404114741.png","post":"cj2a1k0em0010iko0jmumpuqx","slug":"20170404114741.png","modified":1,"renderable":1},{"_id":"source/_posts/修复TortoiseGit图标不显示/20170404115205.png","post":"cj2a1k0em0010iko0jmumpuqx","slug":"20170404115205.png","modified":1,"renderable":1},{"_id":"source/_posts/MarkDown引用本地图片/20170404161617.png","post":"cj2a1k0ej000yiko0temregsi","slug":"20170404161617.png","modified":1,"renderable":1},{"_id":"source/_posts/MarkDown引用本地图片/20170404161920.png","post":"cj2a1k0ej000yiko0temregsi","slug":"20170404161920.png","modified":1,"renderable":1},{"_id":"source/_posts/MarkDown引用本地图片/20170404164402.png","post":"cj2a1k0ej000yiko0temregsi","slug":"20170404164402.png","modified":1,"renderable":1},{"_id":"source/_posts/MarkDown引用本地图片/20170404164607.png","post":"cj2a1k0ej000yiko0temregsi","slug":"20170404164607.png","modified":1,"renderable":1},{"_id":"source/_posts/redis入门/20170415092253.png","post":"cj2a1k0e7000qiko0ohnrm1nw","slug":"20170415092253.png","modified":1,"renderable":1},{"_id":"source/_posts/redis入门/20170415094655.png","post":"cj2a1k0e7000qiko0ohnrm1nw","slug":"20170415094655.png","modified":1,"renderable":1},{"_id":"source/_posts/redis入门/20170415095002.png","post":"cj2a1k0e7000qiko0ohnrm1nw","slug":"20170415095002.png","modified":1,"renderable":1},{"_id":"source/_posts/redis入门/20170415095226.png","post":"cj2a1k0e7000qiko0ohnrm1nw","slug":"20170415095226.png","modified":1,"renderable":1},{"_id":"source/_posts/redis入门/20170415095445.png","post":"cj2a1k0e7000qiko0ohnrm1nw","slug":"20170415095445.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504111203.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"20170504111203.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112120.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"20170504112120.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112507.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"20170504112507.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112642.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"20170504112642.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/20170504112741.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"20170504112741.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合dubbo-zookeeper/dubbo架构图.png","post":"cj2a1k0eb000tiko0f8fdbgvl","slug":"dubbo架构图.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170424171757.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170424171757.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170424172009.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170424172009.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170424174645.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170424174645.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170424175147.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170424175147.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170424175850.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170424175850.png","modified":1,"renderable":1},{"_id":"source/_posts/spring整合activemq/20170425094743.png","post":"cj2a1k0f6001ciko0d3pdtnpc","slug":"20170425094743.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/0170403204526.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"0170403204526.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403201939.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403201939.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403203407.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403203407.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403203655.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403203655.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403205231.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403205231.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403210357.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403210357.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403212928.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403212928.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403213141.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403213141.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403213613.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403213613.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403213822.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403213822.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403214113.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403214113.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403214855.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403214855.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403215328.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403215328.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170403215427.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170403215427.png","modified":1,"renderable":1},{"_id":"source/_posts/Git简单教程/20170408134106.png","post":"cj2a1k0d70006iko00pgl0kmi","slug":"20170408134106.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cj2a1k0ch0000iko0alxhu0c2","category_id":"cj2a1k0d00004iko0hk958fw3","_id":"cj2a1k0dq000eiko0xma8uzyi"},{"post_id":"cj2a1k0dg0009iko0u48qd7ru","category_id":"cj2a1k0d00004iko0hk958fw3","_id":"cj2a1k0dw000iiko0gj7jn30n"},{"post_id":"cj2a1k0cr0002iko0apiybv6b","category_id":"cj2a1k0di000aiko0ydb4jp5x","_id":"cj2a1k0e3000miko0i25qbnrw"},{"post_id":"cj2a1k0ds000fiko07jkvwp04","category_id":"cj2a1k0di000aiko0ydb4jp5x","_id":"cj2a1k0ea000riko0iev9h0qq"},{"post_id":"cj2a1k0d70006iko00pgl0kmi","category_id":"cj2a1k0du000giko0349vf1ma","_id":"cj2a1k0ee000uiko0aoimcupq"},{"post_id":"cj2a1k0db0008iko0eerk15qd","category_id":"cj2a1k0e5000oiko090yug3y0","_id":"cj2a1k0el000ziko0d1entb65"},{"post_id":"cj2a1k0ej000yiko0temregsi","category_id":"cj2a1k0d00004iko0hk958fw3","_id":"cj2a1k0ey0015iko099setkof"},{"post_id":"cj2a1k0dm000diko0nwc04mq6","category_id":"cj2a1k0ee000viko02ujjz9n7","_id":"cj2a1k0f5001aiko0ohwo6411"},{"post_id":"cj2a1k0dw000jiko0i8c112kl","category_id":"cj2a1k0ee000viko02ujjz9n7","_id":"cj2a1k0f9001eiko06nw4tpax"},{"post_id":"cj2a1k0e0000liko0puxv7h54","category_id":"cj2a1k0f20018iko0qdx5g74u","_id":"cj2a1k0fj001kiko0dbppti57"},{"post_id":"cj2a1k0f9001fiko0j72j038k","category_id":"cj2a1k0ee000viko02ujjz9n7","_id":"cj2a1k0fm001niko005p3rtp8"},{"post_id":"cj2a1k0e7000qiko0ohnrm1nw","category_id":"cj2a1k0fe001giko0mgghfqvp","_id":"cj2a1k0fp001piko0j9lx0jwr"},{"post_id":"cj2a1k0eb000tiko0f8fdbgvl","category_id":"cj2a1k0fj001liko0j14i5hsy","_id":"cj2a1k0ft001tiko0xuwsyy8m"},{"post_id":"cj2a1k0eg000xiko0v76sojqe","category_id":"cj2a1k0fe001giko0mgghfqvp","_id":"cj2a1k0fx001xiko08f8h0g18"},{"post_id":"cj2a1k0em0010iko0jmumpuqx","category_id":"cj2a1k0fv001uiko0y6o7kwzt","_id":"cj2a1k0g10022iko06mt2bybg"},{"post_id":"cj2a1k0eu0014iko0791yn7h5","category_id":"cj2a1k0fe001giko0mgghfqvp","_id":"cj2a1k0g40026iko00sa1p5cd"},{"post_id":"cj2a1k0f00017iko09yzjuj5x","category_id":"cj2a1k0g10023iko0dtphfzze","_id":"cj2a1k0g70029iko0un1rersn"},{"post_id":"cj2a1k0f6001ciko0d3pdtnpc","category_id":"cj2a1k0g50027iko09ngccp7s","_id":"cj2a1k0gc002ciko0n12l4vxv"}],"PostTag":[{"post_id":"cj2a1k0ch0000iko0alxhu0c2","tag_id":"cj2a1k0d40005iko0vl1uqqx0","_id":"cj2a1k0dk000ciko0obqekxjg"},{"post_id":"cj2a1k0cr0002iko0apiybv6b","tag_id":"cj2a1k0dj000biko0yrwcom8o","_id":"cj2a1k0dy000kiko0lxt6e13w"},{"post_id":"cj2a1k0ds000fiko07jkvwp04","tag_id":"cj2a1k0dj000biko0yrwcom8o","_id":"cj2a1k0e4000niko04x989o8j"},{"post_id":"cj2a1k0d70006iko00pgl0kmi","tag_id":"cj2a1k0dv000hiko01bjb4ryl","_id":"cj2a1k0ea000siko0un46btsm"},{"post_id":"cj2a1k0ej000yiko0temregsi","tag_id":"cj2a1k0d40005iko0vl1uqqx0","_id":"cj2a1k0et0013iko0x8b6sn1t"},{"post_id":"cj2a1k0db0008iko0eerk15qd","tag_id":"cj2a1k0e5000piko0h1zfchux","_id":"cj2a1k0ey0016iko0d85x16g5"},{"post_id":"cj2a1k0db0008iko0eerk15qd","tag_id":"cj2a1k0ef000wiko0n8fxlj8w","_id":"cj2a1k0f5001biko0uhyb6ohv"},{"post_id":"cj2a1k0dg0009iko0u48qd7ru","tag_id":"cj2a1k0d40005iko0vl1uqqx0","_id":"cj2a1k0f8001diko0dcwado31"},{"post_id":"cj2a1k0dg0009iko0u48qd7ru","tag_id":"cj2a1k0ep0012iko0tb0uwmv5","_id":"cj2a1k0fh001iiko0tz2h4iki"},{"post_id":"cj2a1k0f9001fiko0j72j038k","tag_id":"cj2a1k0f40019iko0mbaahjw0","_id":"cj2a1k0fi001jiko0obeeybvk"},{"post_id":"cj2a1k0dm000diko0nwc04mq6","tag_id":"cj2a1k0f40019iko0mbaahjw0","_id":"cj2a1k0fn001oiko0l15vh3de"},{"post_id":"cj2a1k0dm000diko0nwc04mq6","tag_id":"cj2a1k0ff001hiko0ospsvadv","_id":"cj2a1k0fq001qiko08yvca7xe"},{"post_id":"cj2a1k0dw000jiko0i8c112kl","tag_id":"cj2a1k0f40019iko0mbaahjw0","_id":"cj2a1k0fw001wiko0m1ehbc8r"},{"post_id":"cj2a1k0dw000jiko0i8c112kl","tag_id":"cj2a1k0fs001siko0f8nswg9c","_id":"cj2a1k0fy001yiko0vx3boqlo"},{"post_id":"cj2a1k0e0000liko0puxv7h54","tag_id":"cj2a1k0fv001viko0zx2vq9kp","_id":"cj2a1k0g00021iko0uqbe80bs"},{"post_id":"cj2a1k0e7000qiko0ohnrm1nw","tag_id":"cj2a1k0fz0020iko01h43kxh1","_id":"cj2a1k0g30025iko07imrrg6p"},{"post_id":"cj2a1k0eb000tiko0f8fdbgvl","tag_id":"cj2a1k0fv001viko0zx2vq9kp","_id":"cj2a1k0gb002biko0us6j8x8r"},{"post_id":"cj2a1k0eb000tiko0f8fdbgvl","tag_id":"cj2a1k0g60028iko0z9ftepru","_id":"cj2a1k0gd002diko06t85ean0"},{"post_id":"cj2a1k0eg000xiko0v76sojqe","tag_id":"cj2a1k0fz0020iko01h43kxh1","_id":"cj2a1k0gf002fiko0zhu2h01f"},{"post_id":"cj2a1k0em0010iko0jmumpuqx","tag_id":"cj2a1k0gd002eiko0r1fp5cr4","_id":"cj2a1k0gh002hiko0jxsxyazy"},{"post_id":"cj2a1k0eu0014iko0791yn7h5","tag_id":"cj2a1k0fv001viko0zx2vq9kp","_id":"cj2a1k0gk002kiko04mrka4qp"},{"post_id":"cj2a1k0eu0014iko0791yn7h5","tag_id":"cj2a1k0fz0020iko01h43kxh1","_id":"cj2a1k0gl002liko0t8130yps"},{"post_id":"cj2a1k0f00017iko09yzjuj5x","tag_id":"cj2a1k0fv001viko0zx2vq9kp","_id":"cj2a1k0gn002oiko0gji4hzbg"},{"post_id":"cj2a1k0f00017iko09yzjuj5x","tag_id":"cj2a1k0gl002miko01tvqnqj5","_id":"cj2a1k0gn002piko0d7ingj4u"},{"post_id":"cj2a1k0f6001ciko0d3pdtnpc","tag_id":"cj2a1k0fv001viko0zx2vq9kp","_id":"cj2a1k0gp002riko00poqr8x6"},{"post_id":"cj2a1k0f6001ciko0d3pdtnpc","tag_id":"cj2a1k0go002qiko07gip1ivx","_id":"cj2a1k0gq002siko0dfiauxk3"}],"Tag":[{"name":"markdown","_id":"cj2a1k0d40005iko0vl1uqqx0"},{"name":"java","_id":"cj2a1k0dj000biko0yrwcom8o"},{"name":"git","_id":"cj2a1k0dv000hiko01bjb4ryl"},{"name":"nginx","_id":"cj2a1k0e5000piko0h1zfchux"},{"name":"算法","_id":"cj2a1k0ef000wiko0n8fxlj8w"},{"name":"语法","_id":"cj2a1k0ep0012iko0tb0uwmv5"},{"name":"hexo","_id":"cj2a1k0f40019iko0mbaahjw0"},{"name":"github","_id":"cj2a1k0ff001hiko0ospsvadv"},{"name":"next","_id":"cj2a1k0fs001siko0f8nswg9c"},{"name":"spring","_id":"cj2a1k0fv001viko0zx2vq9kp"},{"name":"redis","_id":"cj2a1k0fz0020iko01h43kxh1"},{"name":"dubbo","_id":"cj2a1k0g60028iko0z9ftepru"},{"name":"TortoiseGit","_id":"cj2a1k0gd002eiko0r1fp5cr4"},{"name":"MessageSource","_id":"cj2a1k0gl002miko01tvqnqj5"},{"name":"activemq","_id":"cj2a1k0go002qiko07gip1ivx"}]}}